var shaderInfinityRT_Corevs = "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nattribute vec3 aVertexPosition;\nattribute vec3 aNormal;\nattribute vec2 aTextureCoord;\n\nuniform vec3 uCamPos;\nuniform mat4 uMVPMatrix;\nuniform mat4 uOMatrix;\nuniform vec2 jitter;\n\nvarying vec2 tex1;\n\nvarying vec3 g_norm;\nvarying vec3 eyeDir;\n\n#if hasBumpTexture || sphericalwhirl\nattribute vec3 aSurfTanU;\nattribute vec3 aSurfTanV;\nvarying vec3 bu;\nvarying vec3 bv;\n#endif\n\n#if hasReflectionTex\nvarying vec3 vert;\n#endif\n\nvoid main(void)\n{\nvec4 vPosition = uOMatrix * vec4(aVertexPosition, 1.0);\ngl_Position = uMVPMatrix * vPosition;\ngl_Position.xy += jitter * gl_Position.w;\n\ntex1 = aTextureCoord;\n\ng_norm = normalize(uOMatrix * vec4(aNormal,0.0)).xyz;\n\neyeDir = (vPosition.xyz - uCamPos);\n\n#if hasBumpTexture || sphericalwhirl\nbu = aSurfTanU;\nbv = aSurfTanV;\n#endif\n\n#if hasReflectionTex\nvert = vPosition.xyz;\n#endif\n}\n";var shaderInfinityRT_Corefs = "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n#if hasDiffuseEnv\nuniform samplerCube diffuseenv;\n#endif\n#if hasDiffuseTexture\nuniform sampler2D diffusetexture;\nuniform mat3 diffuseUVT;\n#endif\nuniform vec3 diffusecolor;\n\nuniform samplerCube glossyenv;\n#if hasGlossyTexture\nuniform sampler2D glossytexture;\nuniform mat3 glossyUVT;\n#endif\nuniform vec3 glossycolor;\n\nuniform samplerCube specularenv;\n#if hasSpecularTexture\nuniform sampler2D speculartexture;\nuniform mat3 specularUVT;\n#endif\nuniform vec3 specularcolor;\n\nuniform int fresnel;\nuniform float degree_0_specular;\nuniform float degree_90_specular;\nuniform float brdf_curve;\n\n#if hasAlphaTexture\nuniform sampler2D alphatexture;\nuniform mat3 alphaUVT;\n#endif\n\n#if hasBumpTexture\nuniform sampler2D bumptexture;\nuniform mat3 bumpUVT;\nuniform float bumpuserscale;\nvarying vec3 bu;\nvarying vec3 bv;\n#endif\n\n#if hasAdditionalTexture\nuniform sampler2D additionaltexture;\nuniform mat3 additionalUVT;\n#endif\nuniform vec3 additionalcolor;\n\n#if hasAmbOccTexture\nuniform sampler2D ambocctexture;\nuniform mat3 amboccUVT;\n#endif\n\nuniform float invertreflectiony;\nuniform float mipmapbias;\n\nuniform float gamma;\nuniform int refractionmode;\nuniform float highlightcompression;\n#if hasLUTTexture\nuniform sampler2D lutTex;\n#endif\nuniform float vignetting;\nuniform vec2 viewportsize;\n\nvarying vec2 tex1;\nvarying vec3 g_norm;\nvarying vec3 eyeDir;\n\nuniform float cc_brightness;\nuniform float cc_contrast;\nuniform float cc_saturation;\nuniform vec3 cc_tint;\n\nuniform int ColCorrAndCamResp;\n\n#if hasLUTTexture\nvec3 ApplyLUT(vec3 textureColor)\n{\ntextureColor = clamp(textureColor, 0.0, 1.0);\nfloat blueColor = textureColor.b * 63.0;\n\nvec2 quad1;\nquad1.y = floor(floor(blueColor) / 8.0);\nquad1.x = floor(blueColor) - (quad1.y * 8.0);\nvec2 quad2;\nquad2.y = floor(ceil(blueColor) / 8.0);\nquad2.x = ceil(blueColor) - (quad2.y * 8.0);\n\nvec2 texPos1;\ntexPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos1.y = 1.0-texPos1.y;\nvec2 texPos2;\ntexPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos2.y = 1.0-texPos2.y;\n\nreturn mix(texture2D(lutTex, texPos1).rgb, texture2D(lutTex, texPos2).rgb, fract(blueColor));\n}\n#endif\n\nvec3 ApplyColorCorrection(vec3 col)\n{\nconst vec3 unitvector = vec3(0.577350269, 0.577350269, 0.577350269);\nvec3 rgbGrey = dot(col, unitvector) * unitvector;\nvec3 rgbSat = rgbGrey + cc_saturation * (col - rgbGrey);\nreturn ((rgbSat-0.5) * cc_contrast + 0.5) * cc_tint + cc_brightness;\n}\n\nvec3 spow(vec3 f0, vec3 f1)\n{\nreturn vec3((f0.x < 0.0) ? 0.0 : pow(f0.x, f1.x),\n(f0.y < 0.0) ? 0.0 : pow(f0.y, f1.y),\n(f0.z < 0.0) ? 0.0 : pow(f0.z, f1.z));\n}\n\nfloat spow(float f0, float f1)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn pow(f0, f1);\n}\n\nfloat ssqrt(float f0)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn sqrt(f0);\n}\n\nvec3 funchighlight(vec3 v00,vec3 v01)\n{\nvec3 v02=vec3(0.629353);\nvec3 v03=vec3(0.282540);\nvec3 v05=spow(v02,v01);\nvec3 v07=v00-v03;\nvec3 v08=spow(v00,v05);\nvec3 v09=v05*v05;\nvec3 v10=v09*v08;\nvec3 v11=v07*v05;\nvec3 v13=v10+v11;\nvec3 v14=spow(v09,v13);\nvec3 v16=spow(v10,v14);\nreturn v16;\n}\n\nfloat funcdscsred(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=0.571612;\nfloat v04=v01-v02;\nfloat v06=0.326853;\nfloat v07=v04+v01;\nfloat v08=v06+v07;\nfloat v10=v04+v08;\nfloat v13=spow(v02,v10);\nfloat v15=spow(v01,v13);\nreturn v15;\n}\n\nfloat funcdscsgreen(float v00)\n{\nfloat v01=v00+v00;\nfloat v02=v01+v00;\nfloat v04=0.207953;\nfloat v05=0.103824;\nfloat v06=spow(v05,v02);\nfloat v07=v06*v01;\nfloat v09=spow(v04,v02);\nfloat v12=spow(v05,v07);\nfloat v13=spow(v12,v00);\nfloat v15=v13-v09;\nreturn v15;\n}\n\nfloat funcdscsblue(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=v00*v01;\nfloat v03=v01+v00;\nfloat v04=spow(v02,v02);\nfloat v05=-0.780725;\nfloat v07=v04*v05;\nfloat v08=v04-v01;\nfloat v09=v03*v02;\nfloat v11=spow(v00,v07);\nfloat v12=spow(v11,v08);\nfloat v14=v09-v03;\nfloat v16=v08-v14;\nfloat v18=spow(v16,v12);\nfloat v23=v07*v18;\nfloat v24=spow(v11,v23);\nreturn v24;\n}\n\nvoid main(void)\n{\nvec3 reflectDir;\nvec3 neyeDir = normalize(eyeDir);\n\nvec3 ngnorm = g_norm;\n#if hasBumpTexture\nvec3 bumpValue = (texture2D(bumptexture, (bumpUVT*vec3(tex1,1.0)).xy, mipmapbias).xyz-0.498039)*2.0;\nbumpValue *= bumpuserscale;\nngnorm += bumpValue.x * bu;\nngnorm += bumpValue.y * bv;\nngnorm = normalize(ngnorm);\n#endif\n\nreflectDir = reflect(neyeDir, ngnorm);\nreflectDir = normalize(reflectDir);\nreflectDir.y *= invertreflectiony;\n\n\n\n\nvec4 diffuseSum = vec4(diffusecolor, 1.0);\n#if hasDiffuseEnv\nvec4 diffuseSample = textureCube(diffuseenv, ngnorm);\n#if encodeenvmapsinmono\nif (diffuseSample.b<1.0) diffuseSample=vec4(vec3(diffuseSample.r+diffuseSample.g+diffuseSample.b), 1.0);\nelse diffuseSample=vec4(vec3(diffuseSample.b+(1.0-diffuseSample.r)+(1.0-diffuseSample.g)+2.0), 1.0);\n#else\ndiffuseSample = vec4(diffuseSample.rgb+(1.0-diffuseSample.a)*64.0, 1.0);\n#endif\n#if hdribias\ndiffuseSample.rgb = pow(diffuseSample.rgb, vec3(gamma));\n#endif\ndiffuseSum *= diffuseSample;\n#endif\n#if hasDiffuseTexture\ndiffuseSum *= texture2D(diffusetexture, (diffuseUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\n\n\nvec4 glossySum = textureCube(glossyenv, reflectDir);\n#if encodeenvmapsinmono\nif (glossySum.b<1.0) glossySum=vec4(vec3(glossySum.r+glossySum.g+glossySum.b), 1.0);\nelse glossySum=vec4(vec3(glossySum.b+(1.0-glossySum.r)+(1.0-glossySum.g)+2.0), 1.0);\n#else\nglossySum = vec4(glossySum.rgb+(1.0-glossySum.a)*64.0, 1.0);\n#endif\n#if hdribias\nglossySum.rgb = pow(glossySum.rgb, vec3(gamma));\n#endif\nglossySum *= vec4(glossycolor, 1.0);\n#if hasGlossyTexture\nglossySum *= texture2D(glossytexture, (glossyUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\n\n\nvec4 specularSum = textureCube(specularenv, reflectDir);\n#if encodeenvmapsinmono\nif (specularSum.b<1.0) specularSum=vec4(vec3(specularSum.r+specularSum.g+specularSum.b), 1.0);\nelse specularSum=vec4(vec3(specularSum.b+(1.0-specularSum.r)+(1.0-specularSum.g)+2.0), 1.0);\n#else\nspecularSum = vec4(specularSum.rgb+(1.0-specularSum.a)*64.0, 1.0);\n#endif\n#if hdribias\nspecularSum.rgb = pow(specularSum.rgb, vec3(gamma));\n#endif\nspecularSum *= vec4(specularcolor, 1.0);\n#if hasSpecularTexture\nspecularSum *= texture2D(speculartexture, (specularUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\n\n\nif (fresnel != 0)\n{\nfloat dotnd = dot(neyeDir, ngnorm);\nif (dotnd > 0.0)\ndotnd = -dotnd;\nfloat fresnelFactor = pow(acos(-dotnd) / (3.14159625*0.5), brdf_curve);\nfresnelFactor = (fresnelFactor*degree_90_specular) + ((1.0-fresnelFactor)*degree_0_specular);\ndiffuseSum *= (1.0 - fresnelFactor);\nglossySum *= (1.0 - fresnelFactor);\nspecularSum *= fresnelFactor;\n}\n\n\nvec4 additionalSum = vec4(additionalcolor, 1.0);\n#if hasAdditionalTexture\nadditionalSum *= texture2D(additionaltexture, (additionalUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\n\n\n#if hasAmbOccTexture\nvec4 ambOccSum = diffuseSum + glossySum + specularSum;\nambOccSum *= texture2D(ambocctexture, (amboccUVT*vec3(tex1,1.0)).xy, mipmapbias);\ngl_FragColor = ambOccSum + additionalSum;\n#else\ngl_FragColor = diffuseSum + glossySum + specularSum + additionalSum;\n#endif\n\n\n#if hasAlphaTexture\ngl_FragColor.a = texture2D(alphatexture, (alphaUVT*vec3(tex1,1.0)).xy, mipmapbias).x;\n#if hasBrightReflections\ngl_FragColor.rgb *= gl_FragColor.a;\n#endif\n#endif\n\nif (ColCorrAndCamResp != 0)\n{\nif (highlightcompression > 0.0)\ngl_FragColor.rgb = funchighlight(gl_FragColor.rgb, vec3(highlightcompression));\n\n#if (camresponse == 305)\ngl_FragColor.rgb = clamp(gl_FragColor.rgb, vec3(0.0), vec3(1.0));\ngl_FragColor.rgb = vec3(funcdscsred(gl_FragColor.r), funcdscsgreen(gl_FragColor.g), funcdscsblue(gl_FragColor.b));\n#endif\n\nif (gamma != 1.0)\ngl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0/gamma));\n\nif (refractionmode == 1)\nreturn;\n\n#if hasLUTTexture\ngl_FragColor.rgb = ApplyLUT(gl_FragColor.rgb);\n#endif\n\ngl_FragColor.rgb = ApplyColorCorrection(gl_FragColor.rgb);\n\nif (vignetting > 0.0)\ngl_FragColor.rgb = gl_FragColor.rgb*(1.0-((length(2.0*((gl_FragCoord.xy/viewportsize)-0.5))*0.707107)*vignetting));\n}\n}\n";var shaderInfinityRT_Glassfs = "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n\nuniform samplerCube specularenv;\n#if hasSpecularTexture\nuniform sampler2D speculartexture;\nuniform mat3 specularUVT;\n#endif\nuniform vec3 specularcolor;\n\n#if hasBaseTexture\nuniform sampler2D basetexture;\nuniform mat3 baseUVT;\n#endif\nuniform vec3 basecolor;\n\n#if hasBumpTexture\nuniform sampler2D bumptexture;\nuniform mat3 bumpUVT;\nuniform float bumpuserscale;\nvarying vec3 bu;\nvarying vec3 bv;\n#endif\n\nuniform float degree_0_specular;\nuniform float degree_90_specular;\nuniform float brdf_curve;\n\nuniform float mipmapbias;\n\nuniform float gamma;\nuniform int refractionmode;\nuniform float highlightcompression;\n#if hasLUTTexture\nuniform sampler2D lutTex;\n#endif\nuniform float vignetting;\nuniform vec2 viewportsize;\n\n\nuniform vec3 planarreflectstrength;\nuniform sampler2D texPlanarReflect;\n\nuniform vec3 exposure;\n\nvarying vec2 tex1;\nvarying vec3 g_norm;\nvarying vec3 eyeDir;\n\nuniform float cc_brightness;\nuniform float cc_contrast;\nuniform float cc_saturation;\nuniform vec3 cc_tint;\n\nuniform int ColCorrAndCamResp;\n\n#if hasLUTTexture\nvec3 ApplyLUT(vec3 textureColor)\n{\ntextureColor = clamp(textureColor, 0.0, 1.0);\nfloat blueColor = textureColor.b * 63.0;\n\nvec2 quad1;\nquad1.y = floor(floor(blueColor) / 8.0);\nquad1.x = floor(blueColor) - (quad1.y * 8.0);\nvec2 quad2;\nquad2.y = floor(ceil(blueColor) / 8.0);\nquad2.x = ceil(blueColor) - (quad2.y * 8.0);\n\nvec2 texPos1;\ntexPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos1.y = 1.0-texPos1.y;\nvec2 texPos2;\ntexPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos2.y = 1.0-texPos2.y;\n\nreturn mix(texture2D(lutTex, texPos1).rgb, texture2D(lutTex, texPos2).rgb, fract(blueColor));\n}\n#endif\n\nvec3 ApplyColorCorrection(vec3 col)\n{\nconst vec3 unitvector = vec3(0.577350269, 0.577350269, 0.577350269);\nvec3 rgbGrey = dot(col, unitvector) * unitvector;\nvec3 rgbSat = rgbGrey + cc_saturation * (col - rgbGrey);\nreturn ((rgbSat-0.5) * cc_contrast + 0.5) * cc_tint + cc_brightness;\n}\n\n\n\nvec3 spow(vec3 f0, vec3 f1)\n{\nreturn vec3((f0.x < 0.0) ? 0.0 : pow(f0.x, f1.x),\n(f0.y < 0.0) ? 0.0 : pow(f0.y, f1.y),\n(f0.z < 0.0) ? 0.0 : pow(f0.z, f1.z));\n}\n\nfloat spow(float f0, float f1)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn pow(f0, f1);\n}\n\nfloat ssqrt(float f0)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn sqrt(f0);\n}\n\nvec3 funchighlight(vec3 v00,vec3 v01)\n{\nvec3 v02=vec3(0.629353);\nvec3 v03=vec3(0.282540);\nvec3 v05=spow(v02,v01);\nvec3 v07=v00-v03;\nvec3 v08=spow(v00,v05);\nvec3 v09=v05*v05;\nvec3 v10=v09*v08;\nvec3 v11=v07*v05;\nvec3 v13=v10+v11;\nvec3 v14=spow(v09,v13);\nvec3 v16=spow(v10,v14);\nreturn v16;\n}\n\nfloat funcdscsred(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=0.571612;\nfloat v04=v01-v02;\nfloat v06=0.326853;\nfloat v07=v04+v01;\nfloat v08=v06+v07;\nfloat v10=v04+v08;\nfloat v13=spow(v02,v10);\nfloat v15=spow(v01,v13);\nreturn v15;\n}\n\nfloat funcdscsgreen(float v00)\n{\nfloat v01=v00+v00;\nfloat v02=v01+v00;\nfloat v04=0.207953;\nfloat v05=0.103824;\nfloat v06=spow(v05,v02);\nfloat v07=v06*v01;\nfloat v09=spow(v04,v02);\nfloat v12=spow(v05,v07);\nfloat v13=spow(v12,v00);\nfloat v15=v13-v09;\nreturn v15;\n}\n\nfloat funcdscsblue(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=v00*v01;\nfloat v03=v01+v00;\nfloat v04=spow(v02,v02);\nfloat v05=-0.780725;\nfloat v07=v04*v05;\nfloat v08=v04-v01;\nfloat v09=v03*v02;\nfloat v11=spow(v00,v07);\nfloat v12=spow(v11,v08);\nfloat v14=v09-v03;\nfloat v16=v08-v14;\nfloat v18=spow(v16,v12);\nfloat v23=v07*v18;\nfloat v24=spow(v11,v23);\nreturn v24;\n}\n\nvoid main()\n{\nvec3 reflectDir;\nvec3 neyeDir = normalize(eyeDir);\n\nvec3 ngnorm = g_norm;\n#if hasBumpTexture\nvec3 bumpValue = (texture2D(bumptexture, (bumpUVT*vec3(tex1,1.0)).xy, mipmapbias).xyz-0.498039)*2.0;\nbumpValue *= bumpuserscale;\nngnorm += bumpValue.x * bu;\nngnorm += bumpValue.y * bv;\nngnorm = normalize(ngnorm);\n#endif\n\nreflectDir = reflect(neyeDir, ngnorm);\nreflectDir = normalize(reflectDir);\n\n\nvec4 specularSum = textureCube(specularenv, reflectDir);\n#if encodeenvmapsinmono\nif (specularSum.b<1.0) specularSum=vec4(vec3(specularSum.r+specularSum.g+specularSum.b), 1.0);\nelse specularSum=vec4(vec3(specularSum.b+(1.0-specularSum.r)+(1.0-specularSum.g)+2.0), 1.0);\n#else\nspecularSum = vec4(specularSum.rgb+(1.0-specularSum.a)*64.0, 1.0);\n#endif\n#if hdribias\nspecularSum.rgb = pow(specularSum.rgb, vec3(gamma));\n#endif\nvec4 specularScale = vec4(specularcolor, 1.0);\n#if hasSpecularTexture\nspecularScale *= texture2D(speculartexture, (specularUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\nspecularSum *= specularScale;\n\nvec4 baseScale = vec4(basecolor, 1.0);\n#if hasBaseTexture\nbaseScale *= texture2D(basetexture, (baseUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\nspecularSum += baseScale;\n\ngl_FragColor = specularSum;\n\n\nfloat dotnd = dot(neyeDir, ngnorm);\nif (dotnd > 0.0)\ndotnd = -dotnd;\nfloat angle = acos(-dotnd) / (3.14159625*0.5);\nfloat fresnelFactor = pow(angle, brdf_curve);\ngl_FragColor.a = (fresnelFactor*degree_90_specular) + ((1.0-fresnelFactor)*degree_0_specular);\n#if hasBrightReflections\ngl_FragColor.rgb *= gl_FragColor.a;\n#endif\n\nif (planarreflectstrength.r > 0.0 || planarreflectstrength.g > 0.0 || planarreflectstrength.b > 0.0)\n{\nif (dotnd > 0.0)\ndotnd = -dotnd;\nfloat powangle = pow(acos(-dotnd) / (3.14159625*0.5), 3.0);\n\ngl_FragColor.rgb += powangle*planarreflectstrength.rgb*texture2D(texPlanarReflect, gl_FragCoord.xy/viewportsize).rgb;\n}\n\nif (ColCorrAndCamResp != 0)\n{\nif (highlightcompression > 0.0)\ngl_FragColor.rgb = funchighlight(gl_FragColor.rgb, vec3(highlightcompression));\n\n#if (camresponse == 305)\ngl_FragColor.rgb = clamp(gl_FragColor.rgb, vec3(0.0), vec3(1.0));\ngl_FragColor.rgb = vec3(funcdscsred(gl_FragColor.r), funcdscsgreen(gl_FragColor.g), funcdscsblue(gl_FragColor.b));\n#endif\n\nif (gamma != 1.0)\ngl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0/gamma));\n\nif (refractionmode == 1)\n{\ngl_FragColor.rgb *= exposure.rgb;\nreturn;\n}\n\n#if hasLUTTexture\ngl_FragColor.rgb = ApplyLUT(gl_FragColor.rgb);\n#endif\n\ngl_FragColor.rgb = exposure.rgb*ApplyColorCorrection(gl_FragColor.rgb);\n\nif (vignetting > 0.0)\ngl_FragColor.rgb = gl_FragColor.rgb*(1.0-((length(2.0*((gl_FragCoord.xy/viewportsize)-0.5))*0.707107)*vignetting));\n}\n}\n";var shaderInfinityRT_Ambientfs = "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n\n#if hasDiffuseTexture\nuniform sampler2D diffusetexture;\nuniform mat3 diffuseUVT;\n#endif\nuniform vec3 diffusecolor;\n\n#if hasAmbOccTexture\nuniform sampler2D ambocctexture;\nuniform mat3 amboccUVT;\n#endif\n\nuniform float mipmapbias;\n\nuniform float gamma;\nuniform float highlightcompression;\n#if hasLUTTexture\nuniform sampler2D lutTex;\n#endif\nuniform float vignetting;\nuniform vec2 viewportsize;\n\n\nuniform vec3 planarreflectstrength;\nuniform sampler2D texPlanarReflect;\n\nvarying vec2 tex1;\nvarying vec3 g_norm;\nvarying vec3 eyeDir;\n\nuniform float cc_brightness;\nuniform float cc_contrast;\nuniform float cc_saturation;\nuniform vec3 cc_tint;\n\nuniform int ColCorrAndCamResp;\n\n#if hasLUTTexture\nvec3 ApplyLUT(vec3 textureColor)\n{\ntextureColor = clamp(textureColor, 0.0, 1.0);\nfloat blueColor = textureColor.b * 63.0;\n\nvec2 quad1;\nquad1.y = floor(floor(blueColor) / 8.0);\nquad1.x = floor(blueColor) - (quad1.y * 8.0);\nvec2 quad2;\nquad2.y = floor(ceil(blueColor) / 8.0);\nquad2.x = ceil(blueColor) - (quad2.y * 8.0);\n\nvec2 texPos1;\ntexPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos1.y = 1.0-texPos1.y;\nvec2 texPos2;\ntexPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos2.y = 1.0-texPos2.y;\n\nreturn mix(texture2D(lutTex, texPos1).rgb, texture2D(lutTex, texPos2).rgb, fract(blueColor));\n}\n#endif\n\nvec3 ApplyColorCorrection(vec3 col)\n{\nconst vec3 unitvector = vec3(0.577350269, 0.577350269, 0.577350269);\nvec3 rgbGrey = dot(col, unitvector) * unitvector;\nvec3 rgbSat = rgbGrey + cc_saturation * (col - rgbGrey);\nreturn ((rgbSat-0.5) * cc_contrast + 0.5) * cc_tint + cc_brightness;\n}\n\nvec3 spow(vec3 f0, vec3 f1)\n{\nreturn vec3((f0.x < 0.0) ? 0.0 : pow(f0.x, f1.x),\n(f0.y < 0.0) ? 0.0 : pow(f0.y, f1.y),\n(f0.z < 0.0) ? 0.0 : pow(f0.z, f1.z));\n}\n\nfloat spow(float f0, float f1)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn pow(f0, f1);\n}\n\nfloat ssqrt(float f0)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn sqrt(f0);\n}\n\nvec3 funchighlight(vec3 v00,vec3 v01)\n{\nvec3 v02=vec3(0.629353);\nvec3 v03=vec3(0.282540);\nvec3 v05=spow(v02,v01);\nvec3 v07=v00-v03;\nvec3 v08=spow(v00,v05);\nvec3 v09=v05*v05;\nvec3 v10=v09*v08;\nvec3 v11=v07*v05;\nvec3 v13=v10+v11;\nvec3 v14=spow(v09,v13);\nvec3 v16=spow(v10,v14);\nreturn v16;\n}\n\nfloat funcdscsred(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=0.571612;\nfloat v04=v01-v02;\nfloat v06=0.326853;\nfloat v07=v04+v01;\nfloat v08=v06+v07;\nfloat v10=v04+v08;\nfloat v13=spow(v02,v10);\nfloat v15=spow(v01,v13);\nreturn v15;\n}\n\nfloat funcdscsgreen(float v00)\n{\nfloat v01=v00+v00;\nfloat v02=v01+v00;\nfloat v04=0.207953;\nfloat v05=0.103824;\nfloat v06=spow(v05,v02);\nfloat v07=v06*v01;\nfloat v09=spow(v04,v02);\nfloat v12=spow(v05,v07);\nfloat v13=spow(v12,v00);\nfloat v15=v13-v09;\nreturn v15;\n}\n\nfloat funcdscsblue(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=v00*v01;\nfloat v03=v01+v00;\nfloat v04=spow(v02,v02);\nfloat v05=-0.780725;\nfloat v07=v04*v05;\nfloat v08=v04-v01;\nfloat v09=v03*v02;\nfloat v11=spow(v00,v07);\nfloat v12=spow(v11,v08);\nfloat v14=v09-v03;\nfloat v16=v08-v14;\nfloat v18=spow(v16,v12);\nfloat v23=v07*v18;\nfloat v24=spow(v11,v23);\nreturn v24;\n}\n\n\n\nvoid main()\n{\nvec4 ambientSum = vec4(diffusecolor, 1.0);\n#if hasDiffuseTexture\nambientSum *= texture2D(diffusetexture, (diffuseUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\n#if hasAmbOccTexture\nambientSum *= texture2D(ambocctexture, (amboccUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\n\ngl_FragColor = ambientSum;\n\nif (planarreflectstrength.r > 0.0 || planarreflectstrength.g > 0.0 || planarreflectstrength.b > 0.0)\n{\nvec3 ngnorm = normalize(g_norm);\nvec3 neyeDir = normalize(eyeDir);\n\nfloat dotnd = dot(neyeDir, ngnorm);\nif (dotnd > 0.0)\ndotnd = -dotnd;\nfloat powangle = pow(acos(-dotnd) / (3.14159625*0.5), 3.0);\n\ngl_FragColor.rgb += powangle*planarreflectstrength.rgb*texture2D(texPlanarReflect, gl_FragCoord.xy/viewportsize).rgb;\n}\n\nif (ColCorrAndCamResp != 0)\n{\nif (highlightcompression > 0.0)\ngl_FragColor.rgb = funchighlight(gl_FragColor.rgb, vec3(highlightcompression));\n\n#if (camresponse == 305)\ngl_FragColor.rgb = clamp(gl_FragColor.rgb, vec3(0.0), vec3(1.0));\ngl_FragColor.rgb = vec3(funcdscsred(gl_FragColor.r), funcdscsgreen(gl_FragColor.g), funcdscsblue(gl_FragColor.b));\n#endif\n\nif (gamma != 1.0)\ngl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0/gamma));\n\n#if hasLUTTexture\ngl_FragColor.rgb = ApplyLUT(gl_FragColor.rgb);\n#endif\n\ngl_FragColor.rgb = ApplyColorCorrection(gl_FragColor.rgb);\n\nif (vignetting > 0.0)\ngl_FragColor.rgb = gl_FragColor.rgb*(1.0-((length(2.0*((gl_FragCoord.xy/viewportsize)-0.5))*0.707107)*vignetting));\n}\n}\n";var shaderInfinityRT_Refinevs = "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nattribute vec2 a_position;\nattribute vec2 a_tex0;\n\nvarying vec2 tex0;\n\nvoid main()\n{\ntex0 = a_tex0;\ngl_Position = vec4(a_position, 0.0, 1.0);\n}\n";var shaderInfinityRT_Refinefs = "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvarying vec2 tex0;\n\nuniform sampler2D logoTex;\nuniform sampler2D prevTex;\nuniform int solidColor;\nuniform float solidAlpha;\n\nuniform float sharpenscale;\nuniform vec2 renderstep;\n\nvec4 calcEdgeColor()\n{\nvec2 offset[9];\nfloat kernel[ 9 ];\n\noffset[ 0 ] = vec2(-renderstep.x, -renderstep.y);\noffset[ 1 ] = vec2(0.0, -renderstep.y);\noffset[ 2 ] = vec2(renderstep.x, -renderstep.y);\n\noffset[ 3 ] = vec2(-renderstep.x, 0.0);\noffset[ 4 ] = vec2(0.0, 0.0);\noffset[ 5 ] = vec2(renderstep.x, 0.0);\n\noffset[ 6 ] = vec2(-renderstep.x, renderstep.y);\noffset[ 7 ] = vec2(0.0, renderstep.y);\noffset[ 8 ] = vec2(renderstep.x, renderstep.y);\n\nkernel[ 0 ] = -1.;\nkernel[ 1 ] = -1.;\nkernel[ 2 ] = -1.;\n\nkernel[ 3 ] = -1.;\nkernel[ 4 ] = 8.;\nkernel[ 5 ] = -1.;\n\nkernel[ 6 ] = -1.;\nkernel[ 7 ] = -1.;\nkernel[ 8 ] = -1.;\n\nint i = 0;\nvec4 sum = vec4(0.0);\nfor( int i=0; i<9; i++ )\n{\nvec4 tmp = texture2D(logoTex, tex0 + offset[i]);\nsum += tmp * kernel[i];\nsum.a = 1.0;\n}\nreturn sum;\n}\n\nvec3 blendOverlay(vec3 base, vec3 blend)\n{\nreturn mix(1.0 - 2.0 * (1.0 - base) * (1.0 - blend), 2.0 * base * blend, step(base, vec3(0.5)));\n}\n\nvoid main()\n{\nif (solidColor == 1)\ngl_FragColor = solidAlpha*texture2D(logoTex, tex0) + (1.0-solidAlpha)*texture2D(prevTex, tex0);\nelse if (solidColor == 0)\ngl_FragColor = vec4(texture2D(logoTex, tex0).xyz, solidAlpha);\nelse\ngl_FragColor = vec4(texture2D(logoTex, tex0).xyz, texture2D(logoTex, tex0).w*solidAlpha);\n\nif (sharpenscale > 0.0)\n{\nvec4 edgecolor = calcEdgeColor();\nedgecolor *= sharpenscale;\nedgecolor += vec4(0.5);\nedgecolor.rgb = vec3((edgecolor.r+edgecolor.g+edgecolor.b)/3.0);\ngl_FragColor.rgb = blendOverlay(gl_FragColor.rgb, edgecolor.rgb);\n}\n}\n";var shaderInfinityRT_Physicalfs = "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n\n#if hasDiffuseEnv\nuniform samplerCube diffuseenv;\n#endif\n#if hasDiffuseTexture\nuniform sampler2D diffusetexture;\nuniform mat3 diffuseUVT;\n#endif\nuniform vec3 diffusecolor;\n\nuniform samplerCube channelcache1cubetexture;\nuniform samplerCube channelcache2cubetexture;\nuniform samplerCube channelcache3cubetexture;\nuniform float roughness;\n#if hasRoughnessTexture\nuniform sampler2D roughnesstexture;\nuniform mat3 roughnessUVT;\n#endif\nuniform vec3 intensitycolor;\n#if hasIntensityTexture\nuniform sampler2D intensitytexture;\nuniform mat3 intensityUVT;\n#endif\n\nuniform samplerCube specularenv;\n#if hasSpecularTexture\nuniform sampler2D speculartexture;\nuniform mat3 specularUVT;\n#endif\nuniform vec3 specularcolor;\n\nuniform float ior_R0DG;\nuniform float ior_R0Clear;\n\n#if hasAlphaTexture\nuniform sampler2D alphatexture;\nuniform mat3 alphaUVT;\n#endif\n\n#if hasBumpTexture\nuniform sampler2D bumptexture;\nuniform mat3 bumpUVT;\nuniform float bumpuserscale;\nvarying vec3 bu;\nvarying vec3 bv;\n#endif\n\n#if hasReflectionTex\n#if (numreflectionplanes > 15)\nuniform mat4 reflectionplanematrix[16];\n#elif (numreflectionplanes > 14)\nuniform mat4 reflectionplanematrix[15];\n#elif (numreflectionplanes > 13)\nuniform mat4 reflectionplanematrix[14];\n#elif (numreflectionplanes > 12)\nuniform mat4 reflectionplanematrix[13];\n#elif (numreflectionplanes > 11)\nuniform mat4 reflectionplanematrix[12];\n#elif (numreflectionplanes > 10)\nuniform mat4 reflectionplanematrix[11];\n#elif (numreflectionplanes > 9)\nuniform mat4 reflectionplanematrix[10];\n#elif (numreflectionplanes > 8)\nuniform mat4 reflectionplanematrix[9];\n#elif (numreflectionplanes > 7)\nuniform mat4 reflectionplanematrix[8];\n#elif (numreflectionplanes > 6)\nuniform mat4 reflectionplanematrix[7];\n#elif (numreflectionplanes > 5)\nuniform mat4 reflectionplanematrix[6];\n#elif (numreflectionplanes > 4)\nuniform mat4 reflectionplanematrix[5];\n#elif (numreflectionplanes > 3)\nuniform mat4 reflectionplanematrix[4];\n#elif (numreflectionplanes > 2)\nuniform mat4 reflectionplanematrix[3];\n#elif (numreflectionplanes > 1)\nuniform mat4 reflectionplanematrix[2];\n#elif (numreflectionplanes > 0)\nuniform mat4 reflectionplanematrix[1];\n#endif\nuniform sampler2D reflectionplaneTex;\nuniform sampler2D reflectionplaneTex2;\nvarying vec3 vert;\nuniform float reflectionplanescale;\n#endif\n\n#if hasAdditionalTexture\nuniform sampler2D additionaltexture;\nuniform mat3 additionalUVT;\n#endif\nuniform vec3 additionalcolor;\n\n#if hasAmbOccTexture\nuniform sampler2D ambocctexture;\nuniform mat3 amboccUVT;\n#endif\n\nuniform float invertreflectiony;\nuniform float mipmapbias;\n\nuniform float gamma;\nuniform int refractionmode;\nuniform float highlightcompression;\n#if hasLUTTexture\nuniform sampler2D lutTex;\n#endif\nuniform float vignetting;\nuniform vec2 viewportsize;\n\nvarying vec2 tex1;\nvarying vec3 g_norm;\nvarying vec3 eyeDir;\n\nuniform float cc_brightness;\nuniform float cc_contrast;\nuniform float cc_saturation;\nuniform vec3 cc_tint;\n\nuniform int ColCorrAndCamResp;\n\n#if hasLUTTexture\nvec3 ApplyLUT(vec3 textureColor)\n{\ntextureColor = clamp(textureColor, 0.0, 1.0);\nfloat blueColor = textureColor.b * 63.0;\n\nvec2 quad1;\nquad1.y = floor(floor(blueColor) / 8.0);\nquad1.x = floor(blueColor) - (quad1.y * 8.0);\nvec2 quad2;\nquad2.y = floor(ceil(blueColor) / 8.0);\nquad2.x = ceil(blueColor) - (quad2.y * 8.0);\n\nvec2 texPos1;\ntexPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos1.y = 1.0-texPos1.y;\nvec2 texPos2;\ntexPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos2.y = 1.0-texPos2.y;\n\nreturn mix(texture2D(lutTex, texPos1).rgb, texture2D(lutTex, texPos2).rgb, fract(blueColor));\n}\n#endif\n\nvec3 ApplyColorCorrection(vec3 col)\n{\nconst vec3 unitvector = vec3(0.577350269, 0.577350269, 0.577350269);\nvec3 rgbGrey = dot(col, unitvector) * unitvector;\nvec3 rgbSat = rgbGrey + cc_saturation * (col - rgbGrey);\nreturn ((rgbSat-0.5) * cc_contrast + 0.5) * cc_tint + cc_brightness;\n}\n\nvec3 spow(vec3 f0, vec3 f1)\n{\nreturn vec3((f0.x < 0.0) ? 0.0 : pow(f0.x, f1.x),\n(f0.y < 0.0) ? 0.0 : pow(f0.y, f1.y),\n(f0.z < 0.0) ? 0.0 : pow(f0.z, f1.z));\n}\n\nfloat spow(float f0, float f1)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn pow(f0, f1);\n}\n\nfloat ssqrt(float f0)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn sqrt(f0);\n}\n\nvec3 funchighlight(vec3 v00,vec3 v01)\n{\nvec3 v02=vec3(0.629353);\nvec3 v03=vec3(0.282540);\nvec3 v05=spow(v02,v01);\nvec3 v07=v00-v03;\nvec3 v08=spow(v00,v05);\nvec3 v09=v05*v05;\nvec3 v10=v09*v08;\nvec3 v11=v07*v05;\nvec3 v13=v10+v11;\nvec3 v14=spow(v09,v13);\nvec3 v16=spow(v10,v14);\nreturn v16;\n}\n\nfloat funcdscsred(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=0.571612;\nfloat v04=v01-v02;\nfloat v06=0.326853;\nfloat v07=v04+v01;\nfloat v08=v06+v07;\nfloat v10=v04+v08;\nfloat v13=spow(v02,v10);\nfloat v15=spow(v01,v13);\nreturn v15;\n}\n\nfloat funcdscsgreen(float v00)\n{\nfloat v01=v00+v00;\nfloat v02=v01+v00;\nfloat v04=0.207953;\nfloat v05=0.103824;\nfloat v06=spow(v05,v02);\nfloat v07=v06*v01;\nfloat v09=spow(v04,v02);\nfloat v12=spow(v05,v07);\nfloat v13=spow(v12,v00);\nfloat v15=v13-v09;\nreturn v15;\n}\n\nfloat funcdscsblue(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=v00*v01;\nfloat v03=v01+v00;\nfloat v04=spow(v02,v02);\nfloat v05=-0.780725;\nfloat v07=v04*v05;\nfloat v08=v04-v01;\nfloat v09=v03*v02;\nfloat v11=spow(v00,v07);\nfloat v12=spow(v11,v08);\nfloat v14=v09-v03;\nfloat v16=v08-v14;\nfloat v18=spow(v16,v12);\nfloat v23=v07*v18;\nfloat v24=spow(v11,v23);\nreturn v24;\n}\n\nvec4 ReflectionPlaneCheck(mat4 rpmat, vec4 sumReflCol, vec3 reflectDir, vec2 offset, sampler2D texRefl)\n{\n#if hasReflectionTex\nfloat rpdist = dot(rpmat[2].xyz,rpmat[3].xyz-vert)/dot(reflectDir,rpmat[2].xyz);\nif (rpdist > 0.0) {\nvec3 phit = vert+(rpdist*reflectDir)-rpmat[3].xyz;\nvec2 uvInPlane = vec2(dot(phit,rpmat[0].xyz), dot(phit,rpmat[1].xyz));\nif (uvInPlane.x>=0.0 && uvInPlane.x<=1.0 && uvInPlane.y>=0.0 && uvInPlane.y<=1.0) {\nvec4 reflCol = texture2D(texRefl, (0.5*uvInPlane)+offset);\nsumReflCol.rgb += reflCol.rgb*reflCol.a;\nsumReflCol.a += reflCol.a;\n}\n}\n#endif\nreturn sumReflCol;\n}\n\nvec4 AddReflectionPlane(vec4 colResultRP, vec3 reflectDir, vec2 offset)\n{\nvec4 sumReflCol = vec4(0.0);\n#if hasReflectionTex\n#if (numreflectionplanes > 15)\n#if (reflectionplanetexval15 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[15], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[15], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 14)\n#if (reflectionplanetexval14 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[14], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[14], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 13)\n#if (reflectionplanetexval13 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[13], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[13], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 12)\n#if (reflectionplanetexval12 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[12], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[12], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 11)\n#if (reflectionplanetexval11 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[11], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[11], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 10)\n#if (reflectionplanetexval10 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[10], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[10], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 9)\n#if (reflectionplanetexval9 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[9], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[9], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 8)\n#if (reflectionplanetexval8 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[8], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[8], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 7)\n#if (reflectionplanetexval7 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[7], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[7], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 6)\n#if (reflectionplanetexval6 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[6], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[6], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 5)\n#if (reflectionplanetexval5 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[5], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[5], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 4)\n#if (reflectionplanetexval4 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[4], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[4], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 3)\n#if (reflectionplanetexval3 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[3], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[3], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 2)\n#if (reflectionplanetexval2 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[2], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[2], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 1)\n#if (reflectionplanetexval1 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[1], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[1], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 0)\n#if (reflectionplanetexval0 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[0], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[0], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\nif (sumReflCol.a != 0.0) {\nsumReflCol.rgb /= sumReflCol.a;\nsumReflCol.a = clamp(sumReflCol.a, 0.0, 1.0);\nreturn mix(colResultRP, vec4(reflectionplanescale*sumReflCol.rgb, 1.0), sumReflCol.a);\n}\n#endif\nreturn colResultRP;\n}\n\nvoid main(void)\n{\nvec3 reflectDir;\nvec3 neyeDir = normalize(eyeDir);\n\nvec3 ngnorm = normalize(g_norm);\n#if hasBumpTexture\nvec3 bumpValue = (texture2D(bumptexture, (bumpUVT*vec3(tex1,1.0)).xy, mipmapbias).xyz-0.498039)*2.0;\nbumpValue *= bumpuserscale;\nngnorm += bumpValue.x * bu;\nngnorm += bumpValue.y * bv;\nngnorm = normalize(ngnorm);\n#endif\n\nreflectDir = reflect(neyeDir, ngnorm);\nreflectDir = normalize(reflectDir);\nreflectDir.y *= invertreflectiony;\n\n\nvec4 diffuseSum = vec4(diffusecolor, 1.0);\n#if hasDiffuseEnv\nvec4 diffuseSample = textureCube(diffuseenv, ngnorm);\n#if encodeenvmapsinmono\nif (diffuseSample.b<1.0) diffuseSample=vec4(vec3(diffuseSample.r+diffuseSample.g+diffuseSample.b), 1.0);\nelse diffuseSample=vec4(vec3(diffuseSample.b+(1.0-diffuseSample.r)+(1.0-diffuseSample.g)+2.0), 1.0);\n#else\ndiffuseSample = vec4(diffuseSample.rgb+(1.0-diffuseSample.a)*64.0, 1.0);\n#endif\n#if hdribias\ndiffuseSample.rgb = pow(diffuseSample.rgb, vec3(gamma));\n#endif\ndiffuseSum *= diffuseSample;\n#endif\n#if hasDiffuseTexture\ndiffuseSum *= texture2D(diffusetexture, (diffuseUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\n\n\nfloat factor1 = roughness;\n#if hasRoughnessTexture\nfactor1 *= texture2D(roughnesstexture, (roughnessUVT*vec3(tex1,1.0)).xy, mipmapbias).r;\n#endif\nfloat fAcosAngle = 1.0-(acos(clamp(-dot(neyeDir, ngnorm), 0.0, 1.0)) / (3.14159625*0.5));\nfactor1 *= fAcosAngle;\nvec4 colA1, colB1;\nfloat mixAB1;\nif (factor1 <= 0.333333)\n{\ncolA1 = textureCube(specularenv, reflectDir);\ncolB1 = textureCube(channelcache1cubetexture, reflectDir);\n#if usespecularroughnessenvmap\nmixAB1 = clamp((factor1-0.000000)*3.000000, 0.0, 1.0);\n#else\nmixAB1 = 1.0;\n#endif\n#if encodeenvmapsinmono\nif (colA1.b<1.0) colA1=vec4(vec3(colA1.r+colA1.g+colA1.b), 1.0);\nelse colA1=vec4(vec3(colA1.b+(1.0-colA1.r)+(1.0-colA1.g)+2.0), 1.0);\nif (colB1.b<1.0) colB1=vec4(vec3(colB1.r+colB1.g+colB1.b), 1.0);\nelse colB1=vec4(vec3(colB1.b+(1.0-colB1.r)+(1.0-colB1.g)+2.0), 1.0);\n#else\ncolA1 = vec4(colA1.rgb+(1.0-colA1.a)*64.0, 1.0);\ncolB1 = vec4(colB1.rgb+(1.0-colB1.a)*64.0, 1.0);\n#endif\n#if hdribias\ncolA1.rgb = pow(colA1.rgb, vec3(gamma));\ncolB1.rgb = pow(colB1.rgb, vec3(gamma));\n#endif\ncolA1 = AddReflectionPlane(colA1, reflectDir, vec2(0.0));\ncolB1 = AddReflectionPlane(colB1, reflectDir, vec2(0.5, 0.0));\n}\nelse if (factor1 <= 0.666667)\n{\ncolA1 = textureCube(channelcache1cubetexture, reflectDir);\ncolB1 = textureCube(channelcache2cubetexture, reflectDir);\nmixAB1 = clamp((factor1-0.333333)*3.000000, 0.0, 1.0);\n#if encodeenvmapsinmono\nif (colA1.b<1.0) colA1=vec4(vec3(colA1.r+colA1.g+colA1.b), 1.0);\nelse colA1=vec4(vec3(colA1.b+(1.0-colA1.r)+(1.0-colA1.g)+2.0), 1.0);\nif (colB1.b<1.0) colB1=vec4(vec3(colB1.r+colB1.g+colB1.b), 1.0);\nelse colB1=vec4(vec3(colB1.b+(1.0-colB1.r)+(1.0-colB1.g)+2.0), 1.0);\n#else\ncolA1 = vec4(colA1.rgb+(1.0-colA1.a)*64.0, 1.0);\ncolB1 = vec4(colB1.rgb+(1.0-colB1.a)*64.0, 1.0);\n#endif\n#if hdribias\ncolA1.rgb = pow(colA1.rgb, vec3(gamma));\ncolB1.rgb = pow(colB1.rgb, vec3(gamma));\n#endif\ncolA1 = AddReflectionPlane(colA1, reflectDir, vec2(0.5, 0.0));\ncolB1 = AddReflectionPlane(colB1, reflectDir, vec2(0.0, 0.5));\n}\nelse\n{\ncolA1 = textureCube(channelcache2cubetexture, reflectDir);\ncolB1 = textureCube(channelcache3cubetexture, reflectDir);\nmixAB1 = clamp((factor1-0.666667)*3.000000, 0.0, 1.0);\n#if encodeenvmapsinmono\nif (colA1.b<1.0) colA1=vec4(vec3(colA1.r+colA1.g+colA1.b), 1.0);\nelse colA1=vec4(vec3(colA1.b+(1.0-colA1.r)+(1.0-colA1.g)+2.0), 1.0);\nif (colB1.b<1.0) colB1=vec4(vec3(colB1.r+colB1.g+colB1.b), 1.0);\nelse colB1=vec4(vec3(colB1.b+(1.0-colB1.r)+(1.0-colB1.g)+2.0), 1.0);\n#else\ncolA1 = vec4(colA1.rgb+(1.0-colA1.a)*64.0, 1.0);\ncolB1 = vec4(colB1.rgb+(1.0-colB1.a)*64.0, 1.0);\n#endif\n#if hdribias\ncolA1.rgb = pow(colA1.rgb, vec3(gamma));\ncolB1.rgb = pow(colB1.rgb, vec3(gamma));\n#endif\ncolA1 = AddReflectionPlane(colA1, reflectDir, vec2(0.0, 0.5));\ncolB1 = AddReflectionPlane(colB1, reflectDir, vec2(0.5, 0.5));\n}\nvec4 glossySum = mix(colA1, colB1, mixAB1);\nvec4 intensitySum = vec4(intensitycolor, 1.0);\n#if hasIntensityTexture\nintensitySum *= texture2D(intensitytexture, (intensityUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\nglossySum.rgb *= intensitySum.rgb;\n\n\n#if usespecularroughnessenvmap\nvec4 specularSum = textureCube(specularenv, reflectDir);\n#else\nvec4 specularSum;\nif (fAcosAngle <= 0.333333)\nspecularSum = textureCube(channelcache1cubetexture, reflectDir);\nelse\nspecularSum = textureCube(specularenv, reflectDir);\n#endif\n#if encodeenvmapsinmono\nif (specularSum.b<1.0) specularSum=vec4(vec3(specularSum.r+specularSum.g+specularSum.b), 1.0);\nelse specularSum=vec4(vec3(specularSum.b+(1.0-specularSum.r)+(1.0-specularSum.g)+2.0), 1.0);\n#else\nspecularSum = vec4(specularSum.rgb+(1.0-specularSum.a)*64.0, 1.0);\n#endif\n#if hdribias\nspecularSum.rgb = pow(specularSum.rgb, vec3(gamma));\n#endif\nvec4 specularScale = vec4(specularcolor, 1.0);\n#if hasSpecularTexture\nspecularScale *= texture2D(speculartexture, (specularUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\nspecularSum = AddReflectionPlane(specularSum, reflectDir, vec2(0.0));\n\n\nfloat dotnd = dot(neyeDir, ngnorm);\nif (dotnd > 0.0)\ndotnd = -dotnd;\nfloat angle = acos(-dotnd) / (3.14159625*0.5);\n\nfloat fresnelFactorDG = ior_R0DG + (1.0 - ior_R0DG) * pow(angle, 5.0);\nfloat dgFF = fresnelFactorDG*intensitySum.r;\ndiffuseSum *= (1.0 - dgFF);\nglossySum *= dgFF;\n\nfloat fresnelFactorClear = ior_R0Clear + (1.0 - ior_R0Clear) * pow(angle, 5.0);\nfloat sFF = fresnelFactorClear * specularScale.r;\nvec4 dgSum = diffuseSum + glossySum;\ndgSum *= (1.0 - sFF);\nspecularSum *= sFF;\n\n\nvec4 additionalSum = vec4(additionalcolor, 1.0);\n#if hasAdditionalTexture\nadditionalSum *= texture2D(additionaltexture, (additionalUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\n\n\n#if hasAmbOccTexture\nvec4 ambOccSum = diffuseSum + glossySum + specularSum;\nambOccSum *= texture2D(ambocctexture, (amboccUVT*vec3(tex1,1.0)).xy, mipmapbias);\ngl_FragColor = ambOccSum + additionalSum;\n#else\ngl_FragColor = diffuseSum + glossySum + specularSum + additionalSum;\n#endif\n\n\n#if hasAlphaTexture\ngl_FragColor.a = texture2D(alphatexture, (alphaUVT*vec3(tex1,1.0)).xy, mipmapbias).x;\n#if hasBrightReflections\ngl_FragColor.rgb *= gl_FragColor.a;\n#endif\n#endif\n\nif (ColCorrAndCamResp != 0)\n{\nif (highlightcompression > 0.0)\ngl_FragColor.rgb = funchighlight(gl_FragColor.rgb, vec3(highlightcompression));\n\n#if (camresponse == 305)\ngl_FragColor.rgb = clamp(gl_FragColor.rgb, vec3(0.0), vec3(1.0));\ngl_FragColor.rgb = vec3(funcdscsred(gl_FragColor.r), funcdscsgreen(gl_FragColor.g), funcdscsblue(gl_FragColor.b));\n#endif\n\nif (gamma != 1.0)\ngl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0/gamma));\n\n#if hasLUTTexture\ngl_FragColor.rgb = ApplyLUT(gl_FragColor.rgb);\n#endif\n\nif (refractionmode == 1)\nreturn;\n\ngl_FragColor.rgb = ApplyColorCorrection(gl_FragColor.rgb);\n\nif (vignetting > 0.0)\ngl_FragColor.rgb = gl_FragColor.rgb*(1.0-((length(2.0*((gl_FragCoord.xy/viewportsize)-0.5))*0.707107)*vignetting));\n}\n}\n";var shaderInfinityRT_Matchfs = "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n\n#if hasDiffuseEnv\nuniform samplerCube diffuseenv;\n#endif\n#if hasDiffuseTexture\nuniform sampler2D diffusetexture;\nuniform mat3 diffuseUVT;\n#endif\nuniform vec3 diffusecolor;\n\nuniform samplerCube channelcache1cubetexture;\nuniform samplerCube channelcache2cubetexture;\nuniform samplerCube channelcache3cubetexture;\nuniform float roughness;\nuniform vec3 mapblurlevel;\n#if hasRoughnessTexture\nuniform sampler2D roughnesstexture;\nuniform mat3 roughnessUVT;\n#endif\nuniform vec3 intensitycolor;\n#if hasIntensityTexture\nuniform sampler2D intensitytexture;\nuniform mat3 intensityUVT;\n#endif\n\nuniform samplerCube specularenv;\n#if hasSpecularTexture\nuniform sampler2D speculartexture;\nuniform mat3 specularUVT;\n#endif\nuniform vec3 specularcolor;\n\nuniform float ior_R0DG;\nuniform float ior_R0Intensity;\nuniform float ior_R0Clear;\nuniform int ior_R0DGFlip;\nuniform int ior_R0IntensityFlip;\nuniform int ior_R0ClearFlip;\n\n#if hasAlphaTexture\nuniform sampler2D alphatexture;\nuniform mat3 alphaUVT;\n#endif\nuniform float alphacolor;\n\n#if sphericalwhirl\nuniform float bumpuserscale;\nvarying vec3 bu;\nvarying vec3 bv;\n#elif hasBumpTexture\nuniform sampler2D bumptexture;\nuniform mat3 bumpUVT;\nuniform float bumpuserscale;\nvarying vec3 bu;\nvarying vec3 bv;\n#endif\n\n#if hasReflectionTex\n#if (numreflectionplanes > 15)\nuniform mat4 reflectionplanematrix[16];\n#elif (numreflectionplanes > 14)\nuniform mat4 reflectionplanematrix[15];\n#elif (numreflectionplanes > 13)\nuniform mat4 reflectionplanematrix[14];\n#elif (numreflectionplanes > 12)\nuniform mat4 reflectionplanematrix[13];\n#elif (numreflectionplanes > 11)\nuniform mat4 reflectionplanematrix[12];\n#elif (numreflectionplanes > 10)\nuniform mat4 reflectionplanematrix[11];\n#elif (numreflectionplanes > 9)\nuniform mat4 reflectionplanematrix[10];\n#elif (numreflectionplanes > 8)\nuniform mat4 reflectionplanematrix[9];\n#elif (numreflectionplanes > 7)\nuniform mat4 reflectionplanematrix[8];\n#elif (numreflectionplanes > 6)\nuniform mat4 reflectionplanematrix[7];\n#elif (numreflectionplanes > 5)\nuniform mat4 reflectionplanematrix[6];\n#elif (numreflectionplanes > 4)\nuniform mat4 reflectionplanematrix[5];\n#elif (numreflectionplanes > 3)\nuniform mat4 reflectionplanematrix[4];\n#elif (numreflectionplanes > 2)\nuniform mat4 reflectionplanematrix[3];\n#elif (numreflectionplanes > 1)\nuniform mat4 reflectionplanematrix[2];\n#elif (numreflectionplanes > 0)\nuniform mat4 reflectionplanematrix[1];\n#endif\nuniform sampler2D reflectionplaneTex;\nuniform sampler2D reflectionplaneTex2;\nvarying vec3 vert;\nuniform float reflectionplanescale;\n#endif\n\n#if hasAdditionalTexture\nuniform sampler2D additionaltexture;\nuniform mat3 additionalUVT;\n#endif\nuniform vec3 additionalcolor;\n\n#if hasAmbOccTexture\nuniform sampler2D ambocctexture;\nuniform mat3 amboccUVT;\n#if hasAmbOccTextureParam\nuniform vec3 amboccParamValue;\n#endif\n#endif\n\n#if hasLightfieldTexture\nuniform sampler2D lightfieldtex;\nuniform vec2 lightfielddim;\nuniform vec2 lightfielddimbytile;\n#endif\n\nuniform float invertreflectiony;\nuniform float mipmapbias;\n\nuniform float gamma;\nuniform int refractionmode;\nuniform float highlightcompression;\n#if hasLUTTexture\nuniform sampler2D lutTex;\n#endif\nuniform float vignetting;\nuniform vec2 viewportsize;\n\nuniform vec3 exposure;\n\nvarying vec2 tex1;\nvarying vec3 g_norm;\nvarying vec3 eyeDir;\n\nuniform float cc_brightness;\nuniform float cc_contrast;\nuniform float cc_saturation;\nuniform vec3 cc_tint;\n\nuniform int ColCorrAndCamResp;\n\nuniform int hasIORDG;\nuniform int hasIORIntensity;\nuniform int hasIORClear;\n\n#if hasLUTTexture\nvec3 ApplyLUT(vec3 textureColor)\n{\ntextureColor = clamp(textureColor, 0.0, 1.0);\nfloat blueColor = textureColor.b * 63.0;\n\nvec2 quad1;\nquad1.y = floor(floor(blueColor) / 8.0);\nquad1.x = floor(blueColor) - (quad1.y * 8.0);\nvec2 quad2;\nquad2.y = floor(ceil(blueColor) / 8.0);\nquad2.x = ceil(blueColor) - (quad2.y * 8.0);\n\nvec2 texPos1;\ntexPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos1.y = 1.0-texPos1.y;\nvec2 texPos2;\ntexPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos2.y = 1.0-texPos2.y;\n\nreturn mix(texture2D(lutTex, texPos1).rgb, texture2D(lutTex, texPos2).rgb, fract(blueColor));\n}\n#endif\n\nvec3 ApplyColorCorrection(vec3 col)\n{\nconst vec3 unitvector = vec3(0.577350269, 0.577350269, 0.577350269);\nvec3 rgbGrey = dot(col, unitvector) * unitvector;\nvec3 rgbSat = rgbGrey + cc_saturation * (col - rgbGrey);\nreturn ((rgbSat-0.5) * cc_contrast + 0.5) * cc_tint + cc_brightness;\n}\n\nvec3 spow(vec3 f0, vec3 f1)\n{\nreturn vec3((f0.x < 0.0) ? 0.0 : pow(f0.x, f1.x),\n(f0.y < 0.0) ? 0.0 : pow(f0.y, f1.y),\n(f0.z < 0.0) ? 0.0 : pow(f0.z, f1.z));\n}\n\nfloat spow(float f0, float f1)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn pow(f0, f1);\n}\n\nfloat ssqrt(float f0)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn sqrt(f0);\n}\n\nvec3 funchighlight(vec3 v00,vec3 v01)\n{\nvec3 v02=vec3(0.629353);\nvec3 v03=vec3(0.282540);\nvec3 v05=spow(v02,v01);\nvec3 v07=v00-v03;\nvec3 v08=spow(v00,v05);\nvec3 v09=v05*v05;\nvec3 v10=v09*v08;\nvec3 v11=v07*v05;\nvec3 v13=v10+v11;\nvec3 v14=spow(v09,v13);\nvec3 v16=spow(v10,v14);\nreturn v16;\n}\n\nfloat funcdscsred(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=0.571612;\nfloat v04=v01-v02;\nfloat v06=0.326853;\nfloat v07=v04+v01;\nfloat v08=v06+v07;\nfloat v10=v04+v08;\nfloat v13=spow(v02,v10);\nfloat v15=spow(v01,v13);\nreturn v15;\n}\n\nfloat funcdscsgreen(float v00)\n{\nfloat v01=v00+v00;\nfloat v02=v01+v00;\nfloat v04=0.207953;\nfloat v05=0.103824;\nfloat v06=spow(v05,v02);\nfloat v07=v06*v01;\nfloat v09=spow(v04,v02);\nfloat v12=spow(v05,v07);\nfloat v13=spow(v12,v00);\nfloat v15=v13-v09;\nreturn v15;\n}\n\nfloat funcdscsblue(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=v00*v01;\nfloat v03=v01+v00;\nfloat v04=spow(v02,v02);\nfloat v05=-0.780725;\nfloat v07=v04*v05;\nfloat v08=v04-v01;\nfloat v09=v03*v02;\nfloat v11=spow(v00,v07);\nfloat v12=spow(v11,v08);\nfloat v14=v09-v03;\nfloat v16=v08-v14;\nfloat v18=spow(v16,v12);\nfloat v23=v07*v18;\nfloat v24=spow(v11,v23);\nreturn v24;\n}\n\nvec4 ReflectionPlaneCheck(mat4 rpmat, vec4 sumReflCol, vec3 reflectDir, vec2 offset, sampler2D texRefl)\n{\n#if hasReflectionTex\nfloat rpdist = dot(rpmat[2].xyz,rpmat[3].xyz-vert)/dot(reflectDir,rpmat[2].xyz);\nif (rpdist > 0.0) {\nvec3 phit = vert+(rpdist*reflectDir)-rpmat[3].xyz;\nvec2 uvInPlane = vec2(dot(phit,rpmat[0].xyz), dot(phit,rpmat[1].xyz));\nif (uvInPlane.x>=0.0 && uvInPlane.x<=1.0 && uvInPlane.y>=0.0 && uvInPlane.y<=1.0) {\nvec4 reflCol = texture2D(texRefl, (0.5*uvInPlane)+offset);\nsumReflCol.rgb += reflCol.rgb*reflCol.a;\nsumReflCol.a += reflCol.a;\n}\n}\n#endif\nreturn sumReflCol;\n}\n\nvec4 AddReflectionPlane(vec4 colResultRP, vec3 reflectDir, vec2 offset)\n{\nvec4 sumReflCol = vec4(0.0);\n#if hasReflectionTex\n#if (numreflectionplanes > 15)\n#if (reflectionplanetexval15 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[15], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[15], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 14)\n#if (reflectionplanetexval14 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[14], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[14], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 13)\n#if (reflectionplanetexval13 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[13], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[13], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 12)\n#if (reflectionplanetexval12 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[12], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[12], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 11)\n#if (reflectionplanetexval11 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[11], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[11], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 10)\n#if (reflectionplanetexval10 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[10], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[10], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 9)\n#if (reflectionplanetexval9 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[9], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[9], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 8)\n#if (reflectionplanetexval8 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[8], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[8], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 7)\n#if (reflectionplanetexval7 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[7], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[7], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 6)\n#if (reflectionplanetexval6 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[6], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[6], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 5)\n#if (reflectionplanetexval5 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[5], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[5], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 4)\n#if (reflectionplanetexval4 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[4], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[4], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 3)\n#if (reflectionplanetexval3 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[3], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[3], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 2)\n#if (reflectionplanetexval2 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[2], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[2], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 1)\n#if (reflectionplanetexval1 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[1], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[1], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\n#if (numreflectionplanes > 0)\n#if (reflectionplanetexval0 == 1)\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[0], sumReflCol, reflectDir, offset, reflectionplaneTex2);\n#else\nsumReflCol = ReflectionPlaneCheck(reflectionplanematrix[0], sumReflCol, reflectDir, offset, reflectionplaneTex);\n#endif\n#endif\nif (sumReflCol.a != 0.0) {\nsumReflCol.rgb /= sumReflCol.a;\nsumReflCol.a = clamp(sumReflCol.a, 0.0, 1.0);\nreturn mix(colResultRP, vec4(reflectionplanescale*sumReflCol.rgb, 1.0), sumReflCol.a);\n}\n#endif\nreturn colResultRP;\n}\n\n#if hasLightfieldTexture\nvec3 ReadRGBETexture(sampler2D textureA, vec2 uvA) {\nvec4 texSample = texture2D(textureA, uvA);\nreturn texSample.rgb+(1.0-texSample.a)*64.0;\n}\n#endif\n\nvoid main(void)\n{\nvec3 reflectDir;\nvec3 neyeDir = normalize(eyeDir);\n\nvec3 ngnorm = normalize(g_norm);\n\n#if sphericalwhirl\nvec2 bumpValue = normalize(tex1.xy - vec2(0.5));\nfloat tmpX = bumpValue.x;\nbumpValue.x = bumpValue.y;\nbumpValue.y = -tmpX;\nbumpValue *= bumpuserscale;\nngnorm += bumpValue.x * bu;\nngnorm += bumpValue.y * bv;\nngnorm = normalize(ngnorm);\n#elif hasBumpTexture\nvec3 bumpValue = (texture2D(bumptexture, (bumpUVT*vec3(tex1,1.0)).xy, mipmapbias).xyz-0.498039)*2.0;\nbumpValue *= bumpuserscale;\nngnorm += bumpValue.x * bu;\nngnorm += bumpValue.y * bv;\nngnorm = normalize(ngnorm);\n#endif\n\nreflectDir = reflect(neyeDir, ngnorm);\nreflectDir = normalize(reflectDir);\nreflectDir.y *= invertreflectiony;\n\n\nvec4 diffuseSum = vec4(diffusecolor, 1.0);\n#if hasDiffuseEnv\nvec4 diffuseSample = textureCube(diffuseenv, ngnorm);\n#if encodeenvmapsinmono\nif (diffuseSample.b<1.0) diffuseSample=vec4(vec3(diffuseSample.r+diffuseSample.g+diffuseSample.b), 1.0);\nelse diffuseSample=vec4(vec3(diffuseSample.b+(1.0-diffuseSample.r)+(1.0-diffuseSample.g)+2.0), 1.0);\n#else\ndiffuseSample = vec4(diffuseSample.rgb+(1.0-diffuseSample.a)*64.0, 1.0);\n#endif\n#if hdribias\ndiffuseSample.rgb = pow(diffuseSample.rgb, vec3(gamma));\n#endif\ndiffuseSum *= diffuseSample;\n#endif\n#if hasDiffuseTexture\ndiffuseSum *= texture2D(diffusetexture, (diffuseUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\n\n\n#if hasLightfieldTexture\nvec3 reflectDirLF = reflectDir;\n\n\nreflectDirLF /= dot(vec3(1.0), abs(reflectDirLF));\n\n\nvec2 uvlightfield = 0.5*vec2(reflectDirLF.x-reflectDirLF.z, reflectDirLF.x+reflectDirLF.z)+0.5;\n\nuvlightfield /= lightfielddim;\n\nvec2 uvGeom = tex1;\n\n\nuvlightfield += floor(uvGeom*lightfielddimbytile)/lightfielddim;\n\n\nvec2 wlightfield = uvGeom*lightfielddimbytile-floor(uvGeom*lightfielddimbytile);\n\nvec4 glossySum = vec4((1.0-wlightfield.x)*(1.0-wlightfield.y)*ReadRGBETexture(lightfieldtex, uvlightfield)\n+ wlightfield.x*(1.0-wlightfield.y)*ReadRGBETexture(lightfieldtex, uvlightfield+vec2(1.0/lightfielddim.x, 0.0))\n+ (1.0-wlightfield.x)*wlightfield.y*ReadRGBETexture(lightfieldtex, uvlightfield+vec2(0.0, 1.0/lightfielddim.y))\n+ wlightfield.x*wlightfield.y*ReadRGBETexture(lightfieldtex, uvlightfield+vec2(1.0/lightfielddim.x, 1.0/lightfielddim.y)), 1.0);\n#else\nfloat factor1 = roughness;\n#if hasRoughnessTexture\nfactor1 *= texture2D(roughnesstexture, (roughnessUVT*vec3(tex1,1.0)).xy, mipmapbias).r;\n#endif\nfloat fAcosAngle = clamp(-dot(neyeDir, ngnorm), 0.0, 1.0);\nfactor1 *= fAcosAngle;\nvec4 colA1, colB1;\nfloat mixAB1;\nif (factor1 <= mapblurlevel.r)\n{\ncolA1 = textureCube(specularenv, reflectDir);\ncolB1 = textureCube(channelcache1cubetexture, reflectDir);\nmixAB1 = clamp((factor1-0.000000)/mapblurlevel.r, 0.0, 1.0);\n#if encodeenvmapsinmono\nif (colA1.b<1.0) colA1=vec4(vec3(colA1.r+colA1.g+colA1.b), 1.0);\nelse colA1=vec4(vec3(colA1.b+(1.0-colA1.r)+(1.0-colA1.g)+2.0), 1.0);\nif (colB1.b<1.0) colB1=vec4(vec3(colB1.r+colB1.g+colB1.b), 1.0);\nelse colB1=vec4(vec3(colB1.b+(1.0-colB1.r)+(1.0-colB1.g)+2.0), 1.0);\n#else\ncolA1 = vec4(colA1.rgb+(1.0-colA1.a)*64.0, 1.0);\ncolB1 = vec4(colB1.rgb+(1.0-colB1.a)*64.0, 1.0);\n#endif\n#if hdribias\ncolA1.rgb = pow(colA1.rgb, vec3(gamma));\ncolB1.rgb = pow(colB1.rgb, vec3(gamma));\n#endif\ncolA1 = AddReflectionPlane(colA1, reflectDir, vec2(0.0));\ncolB1 = AddReflectionPlane(colB1, reflectDir, vec2(0.5, 0.0));\n}\nelse if (factor1 <= mapblurlevel.g)\n{\ncolA1 = textureCube(channelcache1cubetexture, reflectDir);\ncolB1 = textureCube(channelcache2cubetexture, reflectDir);\nmixAB1 = clamp((factor1-mapblurlevel.r)/(mapblurlevel.g-mapblurlevel.r), 0.0, 1.0);\n#if encodeenvmapsinmono\nif (colA1.b<1.0) colA1=vec4(vec3(colA1.r+colA1.g+colA1.b), 1.0);\nelse colA1=vec4(vec3(colA1.b+(1.0-colA1.r)+(1.0-colA1.g)+2.0), 1.0);\nif (colB1.b<1.0) colB1=vec4(vec3(colB1.r+colB1.g+colB1.b), 1.0);\nelse colB1=vec4(vec3(colB1.b+(1.0-colB1.r)+(1.0-colB1.g)+2.0), 1.0);\n#else\ncolA1 = vec4(colA1.rgb+(1.0-colA1.a)*64.0, 1.0);\ncolB1 = vec4(colB1.rgb+(1.0-colB1.a)*64.0, 1.0);\n#endif\n#if hdribias\ncolA1.rgb = pow(colA1.rgb, vec3(gamma));\ncolB1.rgb = pow(colB1.rgb, vec3(gamma));\n#endif\ncolA1 = AddReflectionPlane(colA1, reflectDir, vec2(0.5, 0.0));\ncolB1 = AddReflectionPlane(colB1, reflectDir, vec2(0.0, 0.5));\n}\nelse\n{\ncolA1 = textureCube(channelcache2cubetexture, reflectDir);\ncolB1 = textureCube(channelcache3cubetexture, reflectDir);\nmixAB1 = clamp((factor1-mapblurlevel.g)/(mapblurlevel.b-mapblurlevel.g), 0.0, 1.0);\n#if encodeenvmapsinmono\nif (colA1.b<1.0) colA1=vec4(vec3(colA1.r+colA1.g+colA1.b), 1.0);\nelse colA1=vec4(vec3(colA1.b+(1.0-colA1.r)+(1.0-colA1.g)+2.0), 1.0);\nif (colB1.b<1.0) colB1=vec4(vec3(colB1.r+colB1.g+colB1.b), 1.0);\nelse colB1=vec4(vec3(colB1.b+(1.0-colB1.r)+(1.0-colB1.g)+2.0), 1.0);\n#else\ncolA1 = vec4(colA1.rgb+(1.0-colA1.a)*64.0, 1.0);\ncolB1 = vec4(colB1.rgb+(1.0-colB1.a)*64.0, 1.0);\n#endif\n#if hdribias\ncolA1.rgb = pow(colA1.rgb, vec3(gamma));\ncolB1.rgb = pow(colB1.rgb, vec3(gamma));\n#endif\ncolA1 = AddReflectionPlane(colA1, reflectDir, vec2(0.0, 0.5));\ncolB1 = AddReflectionPlane(colB1, reflectDir, vec2(0.5, 0.5));\n}\nvec4 glossySum = mix(colA1, colB1, mixAB1);\nvec4 intensitySum = vec4(intensitycolor, 1.0);\n#if hasIntensityTexture\nintensitySum *= texture2D(intensitytexture, (intensityUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\nglossySum.rgb *= intensitySum.rgb;\n#endif\n\n\nvec4 specularSum = textureCube(specularenv, reflectDir);\n#if encodeenvmapsinmono\nif (specularSum.b<1.0) specularSum=vec4(vec3(specularSum.r+specularSum.g+specularSum.b), 1.0);\nelse specularSum=vec4(vec3(specularSum.b+(1.0-specularSum.r)+(1.0-specularSum.g)+2.0), 1.0);\n#else\nspecularSum = vec4(specularSum.rgb+(1.0-specularSum.a)*64.0, 1.0);\n#endif\n#if hdribias\nspecularSum.rgb = pow(specularSum.rgb, vec3(gamma));\n#endif\nvec4 specularScale = vec4(specularcolor, 1.0);\n#if hasSpecularTexture\nspecularScale *= texture2D(speculartexture, (specularUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\nspecularSum = AddReflectionPlane(specularSum, reflectDir, vec2(0.0));\nspecularSum *= specularScale;\n\n\nfloat dotnd = dot(neyeDir, ngnorm);\nif (dotnd > 0.0)\ndotnd = -dotnd;\nfloat powangle = pow(acos(-dotnd) / (3.14159625*0.5), 5.0);\nif (hasIORDG != 0)\n{\nfloat powangle_diffuse = powangle;\nif (ior_R0DGFlip == 1) powangle_diffuse = 1.0-powangle;\nfloat fresnelFactorDiffuse = ior_R0DG + (1.0 - ior_R0DG) * powangle_diffuse;\ndiffuseSum *= fresnelFactorDiffuse;\n}\nif (hasIORIntensity != 0)\n{\nfloat powangle_Intensity = powangle;\nif (ior_R0IntensityFlip == 1) powangle_Intensity = 1.0-powangle;\nfloat fresnelFactorIntensity = ior_R0Intensity + (1.0 - ior_R0Intensity) * powangle_Intensity;\nglossySum *= fresnelFactorIntensity;\n}\nif (hasIORClear != 0)\n{\nfloat powangle_Clear = powangle;\nif (ior_R0ClearFlip == 1) powangle_Clear = 1.0-powangle_Clear;\nfloat fresnelFactorClear = ior_R0Clear + (1.0 - ior_R0Clear) * powangle_Clear;\nspecularSum *= fresnelFactorClear;\n}\n\n\nvec4 additionalSum = vec4(additionalcolor, 1.0);\n#if hasAdditionalTexture\nadditionalSum *= texture2D(additionaltexture, (additionalUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\n\n\n#if hasAmbOccTexture\nvec4 ambOccSum = diffuseSum + glossySum + specularSum;\n#if hasAmbOccTextureParam\nvec4 amboccScale = texture2D(ambocctexture, (amboccUVT*vec3(tex1,1.0)).xy, mipmapbias);\nvec3 amboccParamValueInv = 1.0-amboccParamValue;\namboccScale = vec4(vec3(amboccParamValueInv.x*amboccParamValueInv.y*amboccScale.r+\namboccParamValue.x*amboccParamValueInv.y*amboccScale.g+\namboccParamValueInv.x*amboccParamValue.y*amboccScale.b+\namboccParamValue.x*amboccParamValue.y*amboccScale.a), 1.0);\nambOccSum *= amboccScale;\n#else\nambOccSum *= texture2D(ambocctexture, (amboccUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\ngl_FragColor = ambOccSum + additionalSum;\n#else\ngl_FragColor = diffuseSum + glossySum + specularSum + additionalSum;\n#endif\n\n\n#if hasAlphaTexture\ngl_FragColor.a = texture2D(alphatexture, (alphaUVT*vec3(tex1,1.0)).xy, mipmapbias).x;\ngl_FragColor.a *= alphacolor;\n#if hasBrightReflections && !decalalpha\ngl_FragColor.rgb *= gl_FragColor.a;\n#endif\n#else\ngl_FragColor.a = alphacolor;\n#endif\n\nif (ColCorrAndCamResp != 0)\n{\nif (highlightcompression > 0.0)\ngl_FragColor.rgb = funchighlight(gl_FragColor.rgb, vec3(highlightcompression));\n\n#if (camresponse == 305)\ngl_FragColor.rgb = clamp(gl_FragColor.rgb, vec3(0.0), vec3(1.0));\ngl_FragColor.rgb = vec3(funcdscsred(gl_FragColor.r), funcdscsgreen(gl_FragColor.g), funcdscsblue(gl_FragColor.b));\n#endif\n\nif (gamma != 1.0)\ngl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0/gamma));\n\n#if hasLUTTexture\ngl_FragColor.rgb = ApplyLUT(gl_FragColor.rgb);\n#endif\n\nif (refractionmode == 1) {\ngl_FragColor.rgb *= exposure.rgb;\n#if hasBrightReflections && decalalpha\ngl_FragColor.rgb *= gl_FragColor.a;\n#endif\nreturn;\n}\n\ngl_FragColor.rgb = exposure.rgb*ApplyColorCorrection(gl_FragColor.rgb);\n\nif (vignetting > 0.0)\ngl_FragColor.rgb = gl_FragColor.rgb*(1.0-((length(2.0*((gl_FragCoord.xy/viewportsize)-0.5))*0.707107)*vignetting));\n\n#if hasBrightReflections && decalalpha\ngl_FragColor.rgb *= gl_FragColor.a;\n#endif\n}\n}\n";var shaderInfinityRT_Glass_Refractedfs = "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\n\nuniform samplerCube specularenv;\n#if hasSpecularTexture\nuniform sampler2D speculartexture;\nuniform mat3 specularUVT;\n#endif\nuniform vec3 specularcolor;\n\n#if hasBaseTexture\nuniform sampler2D basetexture;\nuniform mat3 baseUVT;\n#endif\nuniform vec3 basecolor;\n\n#if hasBumpTexture\nuniform sampler2D bumptexture;\nuniform mat3 bumpUVT;\nuniform float bumpuserscale;\nvarying vec3 bu;\nvarying vec3 bv;\n#endif\n\nuniform sampler2D refractiontexture;\nuniform float refractscale;\nuniform float refractthinness;\nuniform vec3 camx;\nuniform vec3 camy;\nuniform vec3 camz;\nuniform vec3 uCamPos;\nuniform sampler2D transmissiontexture;\nuniform mat3 transmissionUVT;\nuniform vec3 transmissioncolor;\nuniform float ior_R0Intensity;\nuniform float ior_R0Clear;\nuniform int ior_R0IntensityFlip;\nuniform int ior_R0ClearFlip;\nuniform float brdf_curve;\n\nuniform float mipmapbias;\n\nuniform float gamma;\nuniform float highlightcompression;\n#if hasLUTTexture\nuniform sampler2D lutTex;\n#endif\nuniform float vignetting;\nuniform vec2 viewportsize;\n\nuniform vec3 exposure;\n\nvarying vec2 tex1;\nvarying vec3 g_norm;\nvarying vec3 eyeDir;\nvarying vec3 vert;\n\nuniform float cc_brightness;\nuniform float cc_contrast;\nuniform float cc_saturation;\nuniform vec3 cc_tint;\n\nuniform int ColCorrAndCamResp;\n\nuniform int hasIORIntensity;\nuniform int hasIORClear;\n\n#if has2ndRef\nuniform vec2 v2ndRef;\n#endif\n\n#if hasLUTTexture\nvec3 ApplyLUT(vec3 textureColor)\n{\ntextureColor = clamp(textureColor, 0.0, 1.0);\nfloat blueColor = textureColor.b * 63.0;\n\nvec2 quad1;\nquad1.y = floor(floor(blueColor) / 8.0);\nquad1.x = floor(blueColor) - (quad1.y * 8.0);\nvec2 quad2;\nquad2.y = floor(ceil(blueColor) / 8.0);\nquad2.x = ceil(blueColor) - (quad2.y * 8.0);\n\nvec2 texPos1;\ntexPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos1.y = 1.0-texPos1.y;\nvec2 texPos2;\ntexPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos2.y = 1.0-texPos2.y;\n\nreturn mix(texture2D(lutTex, texPos1).rgb, texture2D(lutTex, texPos2).rgb, fract(blueColor));\n}\n#endif\n\nvec3 ApplyColorCorrection(vec3 col)\n{\nconst vec3 unitvector = vec3(0.577350269, 0.577350269, 0.577350269);\nvec3 rgbGrey = dot(col, unitvector) * unitvector;\nvec3 rgbSat = rgbGrey + cc_saturation * (col - rgbGrey);\nreturn ((rgbSat-0.5) * cc_contrast + 0.5) * cc_tint + cc_brightness;\n}\n\n\n\nvec3 spow(vec3 f0, vec3 f1)\n{\nreturn vec3((f0.x < 0.0) ? 0.0 : pow(f0.x, f1.x),\n(f0.y < 0.0) ? 0.0 : pow(f0.y, f1.y),\n(f0.z < 0.0) ? 0.0 : pow(f0.z, f1.z));\n}\n\nfloat spow(float f0, float f1)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn pow(f0, f1);\n}\n\nfloat ssqrt(float f0)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn sqrt(f0);\n}\n\nvec3 funchighlight(vec3 v00,vec3 v01)\n{\nvec3 v02=vec3(0.629353);\nvec3 v03=vec3(0.282540);\nvec3 v05=spow(v02,v01);\nvec3 v07=v00-v03;\nvec3 v08=spow(v00,v05);\nvec3 v09=v05*v05;\nvec3 v10=v09*v08;\nvec3 v11=v07*v05;\nvec3 v13=v10+v11;\nvec3 v14=spow(v09,v13);\nvec3 v16=spow(v10,v14);\nreturn v16;\n}\n\nfloat funcdscsred(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=0.571612;\nfloat v04=v01-v02;\nfloat v06=0.326853;\nfloat v07=v04+v01;\nfloat v08=v06+v07;\nfloat v10=v04+v08;\nfloat v13=spow(v02,v10);\nfloat v15=spow(v01,v13);\nreturn v15;\n}\n\nfloat funcdscsgreen(float v00)\n{\nfloat v01=v00+v00;\nfloat v02=v01+v00;\nfloat v04=0.207953;\nfloat v05=0.103824;\nfloat v06=spow(v05,v02);\nfloat v07=v06*v01;\nfloat v09=spow(v04,v02);\nfloat v12=spow(v05,v07);\nfloat v13=spow(v12,v00);\nfloat v15=v13-v09;\nreturn v15;\n}\n\nfloat funcdscsblue(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=v00*v01;\nfloat v03=v01+v00;\nfloat v04=spow(v02,v02);\nfloat v05=-0.780725;\nfloat v07=v04*v05;\nfloat v08=v04-v01;\nfloat v09=v03*v02;\nfloat v11=spow(v00,v07);\nfloat v12=spow(v11,v08);\nfloat v14=v09-v03;\nfloat v16=v08-v14;\nfloat v18=spow(v16,v12);\nfloat v23=v07*v18;\nfloat v24=spow(v11,v23);\nreturn v24;\n}\n\nvoid main()\n{\nvec3 reflectDir;\nvec3 neyeDir = normalize(eyeDir);\n\nvec3 ngnorm = normalize(g_norm);\n#if hasBumpTexture\nvec3 bumpValue = (texture2D(bumptexture, (bumpUVT*vec3(tex1,1.0)).xy, mipmapbias).xyz-0.498039)*2.0;\nbumpValue *= bumpuserscale;\nngnorm += bumpValue.x * bu;\nngnorm += bumpValue.y * bv;\nngnorm = normalize(ngnorm);\n#endif\n\nreflectDir = reflect(neyeDir, ngnorm);\nreflectDir = normalize(reflectDir);\n\n\nvec4 specularSum = textureCube(specularenv, reflectDir);\n#if encodeenvmapsinmono\nif (specularSum.b<1.0) specularSum=vec4(vec3(specularSum.r+specularSum.g+specularSum.b), 1.0);\nelse specularSum=vec4(vec3(specularSum.b+(1.0-specularSum.r)+(1.0-specularSum.g)+2.0), 1.0);\n#else\nspecularSum = vec4(specularSum.rgb+(1.0-specularSum.a)*64.0, 1.0);\n#endif\n#if hdribias\nspecularSum.rgb = pow(specularSum.rgb, vec3(gamma));\n#endif\n#if has2ndRef\nvec3 reflectDir2 = neyeDir-(2.0+v2ndRef.x)*ngnorm*dot(neyeDir, ngnorm);\nvec4 specularSum2 = textureCube(specularenv, reflectDir2);\nspecularSum2 = vec4(specularSum2.rgb+(1.0-specularSum2.a)*64.0, 1.0);\n#if hdribias\nspecularSum2.rgb = pow(specularSum2.rgb, vec3(gamma));\n#endif\nspecularSum.rgb += specularSum2.rgb*v2ndRef.y;\n#endif\nvec4 specularScale = vec4(specularcolor, 1.0);\n#if hasSpecularTexture\nspecularScale *= texture2D(speculartexture, (specularUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\nspecularSum *= specularScale;\n\nvec4 baseScale = vec4(basecolor, 1.0);\n#if hasBaseTexture\nbaseScale *= texture2D(basetexture, (baseUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\nspecularSum += baseScale;\n\n\nvec2 scrpos = gl_FragCoord.xy/viewportsize;\nvec2 scroffset;\nfloat zDepth = dot(vert-uCamPos, camz);\nscroffset.x = dot(camx, ngnorm);\nscroffset.y = dot(camy, ngnorm);\nfloat scroffsetlen = length(scroffset);\nif (scroffsetlen == 0.0) scroffsetlen = 1.0;\nscroffset /= scroffsetlen;\nscroffsetlen = pow(scroffsetlen, refractthinness);\nscroffset *= refractscale*scroffsetlen/zDepth;\nvec4 colRefraction = texture2D(refractiontexture, scrpos+scroffset);\nif (gamma != 1.0)\ncolRefraction.rgb = pow(colRefraction.rgb, vec3(gamma));\ncolRefraction *= vec4(transmissioncolor, 1.0);\n#if hasTransmissionTexture\ncolRefraction *= texture2D(transmissiontexture, (transmissionUVT*vec3(tex1,1.0)).xy, mipmapbias);\n#endif\n\n\nfloat dotnd = dot(neyeDir, ngnorm);\nif (dotnd > 0.0)\ndotnd = -dotnd;\nfloat powangle = pow(acos(-dotnd) / (3.14159625*0.5), 5.0);\nif (hasIORIntensity != 0)\n{\nfloat powangle_Intensity = powangle;\nif (ior_R0IntensityFlip == 1) powangle_Intensity = 1.0-powangle;\nfloat fresnelFactorIntensity = ior_R0Intensity + (1.0 - ior_R0Intensity) * powangle_Intensity;\ncolRefraction *= fresnelFactorIntensity;\n\n\n}\nif (hasIORClear != 0)\n{\nfloat powangle_Clear = powangle;\nif (ior_R0ClearFlip == 1) powangle_Clear = 1.0-powangle_Clear;\nfloat fresnelFactorClear = ior_R0Clear + (1.0 - ior_R0Clear) * powangle_Clear;\nspecularSum *= fresnelFactorClear;\n}\n\ngl_FragColor.xyz = specularSum.xyz + colRefraction.rgb;\ngl_FragColor.a = 1.0;\n\n\nif (ColCorrAndCamResp != 0)\n{\nif (highlightcompression > 0.0)\ngl_FragColor.rgb = funchighlight(gl_FragColor.rgb, vec3(highlightcompression));\n\n#if (camresponse == 305)\ngl_FragColor.rgb = clamp(gl_FragColor.rgb, vec3(0.0), vec3(1.0));\ngl_FragColor.rgb = vec3(funcdscsred(gl_FragColor.r), funcdscsgreen(gl_FragColor.g), funcdscsblue(gl_FragColor.b));\n#endif\n\nif (gamma != 1.0)\ngl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0/gamma));\n\n#if hasLUTTexture\ngl_FragColor.rgb = ApplyLUT(gl_FragColor.rgb);\n#endif\n\ngl_FragColor.rgb = exposure.rgb*ApplyColorCorrection(gl_FragColor.rgb);\n\nif (vignetting > 0.0)\ngl_FragColor.rgb = gl_FragColor.rgb*(1.0-((length(2.0*((gl_FragCoord.xy/viewportsize)-0.5))*0.707107)*vignetting));\n}\n}\n";var shaderInfinityRT_Modularfs = "#ifdef GL_FRAGMENT_PRECISION_HIGH\nprecision highp float;\n#else\nprecision mediump float;\n#endif\n\nvarying vec2 tex1;\nvarying vec3 g_norm;\nvarying vec3 eyeDir;\nvarying vec3 bu;\nvarying vec3 bv;\n\nuniform vec2 viewportsize;\n\nuniform samplerCube diffusecachecubetexture;\nuniform samplerCube specularcachecubetexture;\nuniform float numblurmaps;\nuniform sampler2D texOctahedron;\nuniform float blurres;\n\n\nuniform float highlightcompression;\nuniform float vignetting;\nuniform float gamma;\nuniform vec3 exposure;\nuniform sampler2D lutTex;\n\n\nuniform float cc_brightness;\nuniform float cc_contrast;\nuniform float cc_saturation;\nuniform vec3 cc_tint;\n\nuniform int ColCorrAndCamResp;\n\nMODULAR_FRAGMENT_HEADER_INSERT\n\nvec3 makeReflectDir(vec3 ngnorm, vec3 neyeDir, float fReflectFactor)\n{\nreturn normalize(fReflectFactor*reflect(neyeDir, ngnorm)+(1.0-fReflectFactor)*ngnorm);\n}\n\nvec3 spow(vec3 f0, vec3 f1)\n{\nreturn vec3((f0.x < 0.0) ? 0.0 : pow(f0.x, f1.x),\n(f0.y < 0.0) ? 0.0 : pow(f0.y, f1.y),\n(f0.z < 0.0) ? 0.0 : pow(f0.z, f1.z));\n}\n\nfloat spow(float f0, float f1)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn pow(f0, f1);\n}\n\nfloat ssqrt(float f0)\n{\nif (f0 < 0.0)\nreturn 0.0;\nreturn sqrt(f0);\n}\n\nfloat av(float a, float b)\n{\nreturn 0.5*(a+b);\n}\n\nvec3 funchighlight(vec3 v00,vec3 v01)\n{\nvec3 v02=vec3(0.629353);\nvec3 v03=vec3(0.282540);\nvec3 v05=spow(v02,v01);\nvec3 v07=v00-v03;\nvec3 v08=spow(v00,v05);\nvec3 v09=v05*v05;\nvec3 v10=v09*v08;\nvec3 v11=v07*v05;\nvec3 v13=v10+v11;\nvec3 v14=spow(v09,v13);\nvec3 v16=spow(v10,v14);\nreturn v16;\n}\n\nfloat funcdscsred(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=0.571612;\nfloat v04=v01-v02;\nfloat v06=0.326853;\nfloat v07=v04+v01;\nfloat v08=v06+v07;\nfloat v10=v04+v08;\nfloat v13=spow(v02,v10);\nfloat v15=spow(v01,v13);\nreturn v15;\n}\n\nfloat funcdscsgreen(float v00)\n{\nfloat v01=v00+v00;\nfloat v02=v01+v00;\nfloat v04=0.207953;\nfloat v05=0.103824;\nfloat v06=spow(v05,v02);\nfloat v07=v06*v01;\nfloat v09=spow(v04,v02);\nfloat v12=spow(v05,v07);\nfloat v13=spow(v12,v00);\nfloat v15=v13-v09;\nreturn v15;\n}\n\nfloat funcdscsblue(float v00)\n{\nfloat v01=ssqrt(v00);\nfloat v02=v00*v01;\nfloat v03=v01+v00;\nfloat v04=spow(v02,v02);\nfloat v05=-0.780725;\nfloat v07=v04*v05;\nfloat v08=v04-v01;\nfloat v09=v03*v02;\nfloat v11=spow(v00,v07);\nfloat v12=spow(v11,v08);\nfloat v14=v09-v03;\nfloat v16=v08-v14;\nfloat v18=spow(v16,v12);\nfloat v23=v07*v18;\nfloat v24=spow(v11,v23);\nreturn v24;\n}\n\nvec4 Surface_Shader(vec4 col, vec4 shadow)\n{\nreturn col*shadow;\n}\n\n#if hasLUTTexture\nvec3 ApplyLUT(vec3 textureColor)\n{\ntextureColor = clamp(textureColor, 0.0, 1.0);\nfloat blueColor = textureColor.b * 63.0;\n\nvec2 quad1;\nquad1.y = floor(floor(blueColor) / 8.0);\nquad1.x = floor(blueColor) - (quad1.y * 8.0);\nvec2 quad2;\nquad2.y = floor(ceil(blueColor) / 8.0);\nquad2.x = ceil(blueColor) - (quad2.y * 8.0);\n\nvec2 texPos1;\ntexPos1.x = (quad1.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos1.y = (quad1.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos1.y = 1.0-texPos1.y;\nvec2 texPos2;\ntexPos2.x = (quad2.x * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.r);\ntexPos2.y = (quad2.y * 0.125) + 0.5/512.0 + ((0.125 - 1.0/512.0) * textureColor.g);\ntexPos2.y = 1.0-texPos2.y;\n\nreturn mix(texture2D(lutTex, texPos1).rgb, texture2D(lutTex, texPos2).rgb, fract(blueColor));\n}\n#endif\n\nvec3 ApplyColorCorrection(vec3 col)\n{\nconst vec3 unitvector = vec3(0.577350269, 0.577350269, 0.577350269);\nvec3 rgbGrey = dot(col, unitvector) * unitvector;\nvec3 rgbSat = rgbGrey + cc_saturation * (col - rgbGrey);\nreturn ((rgbSat-0.5) * cc_contrast + 0.5) * cc_tint.rgb + cc_brightness;\n}\n\nvec3 ReadRGBETexture(sampler2D textureA, vec2 uvA)\n{\nvec4 texSample = texture2D(textureA, uvA);\nreturn texSample.rgb+(1.0-texSample.a)*64.0;\n}\n\nvec4 Octane_Texture2D(sampler2D textureA, vec2 uvA, float powerA, float gammaA)\n{\nvec4 colTex = texture2D(textureA, uvA);\ncolTex.rgb *= vec3(powerA);\ncolTex.rgb = pow(colTex.rgb, vec3(gammaA));\nreturn colTex;\n}\n\nvec4 Octane_GreyscaleTexture2D(sampler2D textureA, vec2 uvA, float powerA, float gammaA)\n{\nvec4 colTex = texture2D(textureA, uvA);\ncolTex.rgb = vec3((colTex.r+colTex.g+colTex.b)/3.0);\ncolTex.rgb *= vec3(powerA);\ncolTex.rgb = pow(colTex.rgb, vec3(gammaA));\nreturn colTex;\n}\n\nvec3 rgb2hsv(vec3 c)\n{\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\nvec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\nvec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\nfloat d = q.x - min(q.w, q.y);\nfloat e = 1.0e-10;\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n}\n\nvec3 hsv2rgb(vec3 c)\n{\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\nreturn clamp(c.z, 0.0, 1.0) * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), clamp(c.y, 0.0, 1.0));\n}\n\nfloat cc_contrast_red(float v00,float v01,float v02,float v03)\n{\n\nfloat v04=v00+v00;\nfloat v05=spow(v02,v04);\nfloat v06=v03-v05;\nfloat v07=v04*v04*v04;\nfloat v08=ssqrt(v03);\nfloat v09=spow(v05,v07);\nfloat v10=v01-v05;\nfloat v11=spow(v09,v03);\nfloat v12=v11-v06;\nfloat v13=spow(v04,v09);\nfloat v14=v10-v12;\nfloat v15=v13*v13*v13;\nfloat v16=spow(v00,v15);\nfloat v17=spow(v07,v01);\nfloat v18=spow(v13,v08);\nfloat v19=spow(v14,v16);\nfloat v20=spow(v17,v17);\nfloat v22=spow(v13,v19);\nfloat v23=v00*v22;\nfloat v24=spow(v18,v20);\nfloat v28=v24*v23;\nreturn v28;\n}\n\nfloat cc_contrast_green(float v00,float v01,float v02,float v03)\n{\n\nfloat v04=v01*v01;\nfloat v05=spow(v04,v01);\nfloat v06=v05-v04;\nfloat v07=v02*v02;\nfloat v08=v01-v05;\nfloat v09=v04*v04*v04;\nfloat v10=spow(v06,v03);\nfloat v11=spow(v10,v08);\nfloat v12=spow(v10,v07);\nfloat v13=v00+v12;\nfloat v14=spow(v09,v13);\nfloat v15=spow(v12,v02);\nfloat v16=v14*v14*v14;\nfloat v17=v08*v08;\nfloat v18=v15*v12;\nfloat v19=spow(v18,v16);\nfloat v20=v17*v04;\nfloat v21=v20+v20;\nfloat v22=v19*v11;\nfloat v26=spow(v01,v22);\nfloat v27=v21+v26;\nreturn v27;\n}\n\nfloat cc_contrast_blue(float v00,float v01,float v02,float v03)\n{\n\nfloat v05=v02+v01;\nfloat v06=v03*v02;\nfloat v08=spow(v05,v03);\nfloat v09=spow(v00,v03);\nfloat v14=v08+v06;\nfloat v19=v02+v02;\nfloat v21=v09-v14;\nfloat v25=spow(v19,v21);\nfloat v26=spow(v02,v25);\nreturn v26;\n}\n\n\n/*float cc_contrast_greyscale(float v00,float v01)\n{\nfloat v02=v00+v01;\nfloat v03=0.000793;\nfloat v04=0.187323;\nfloat v05=v00*v00;\nfloat v06=-1.249123;\nfloat v07=v06+v05;\nfloat v08=v03-v07;\nfloat v09=spow(v04,v04);\nfloat v10=v02*v09;\nfloat v11=v10-v00;\nfloat v12=spow(v08,v11);\nfloat v13=0.426466;\nfloat v14=v05*v05;\nfloat v15=spow(v00,v12);\nfloat v16=spow(v12,v14);\nfloat v17=v08*v14;\nfloat v18=max(v03,v15);\nfloat v19=v16+v18;\nfloat v20=av(v13,v19);\nfloat v21=v20*v15;\nfloat v22=v17+v21;\nfloat v23=v03+v00;\nfloat v24=spow(v22,v19);\nfloat v25=min(v23,v24);\nfloat v26=max(v18,v25);\nreturn v26;\n}*/\n\nfloat cc_contrast_greyscale(float v00,float v01)\n{\nfloat v02=v01*v01;\nfloat v03=min(v02,v00);\nfloat v04=v03+v00;\nfloat v05=0.723472;\nfloat v06=spow(v04,v03);\nfloat v07=spow(v06,v01);\nfloat v08=v07*v00;\nfloat v09=spow(v05,v08);\nfloat v10=spow(v00,v09);\nfloat v11=min(v10,v08);\nreturn v11;\n}\n\nvec2 Octane_GetIOR(float val)\n{\nfloat ni = 1.0;\nfloat R0 = (val - ni) / (val + ni);\nR0 *= R0;\nreturn vec2(R0,	0.299975*val+9.26843);\n}\n\nvec4 Octane_Color_Correction(vec4 inputcolorA, float hueA, float saturationA, vec4 brightnessA, float gammaA, float contrastA)\n{\nvec3 colCC = inputcolorA.rgb;\n\n\nvec3 grey=normalize(vec3(1.0,1.0,1.0));\nvec3 col1=normalize(cross(vec3(0.0,1.0,0.0),grey));\nvec3 col2=cross(col1,grey);\nfloat gr=dot(colCC,grey);\nfloat c1=dot(colCC,col1);\nfloat c2=dot(colCC,col2);\n\nfloat ang=hueA*3.14139265;\nfloat nc1=cos(ang)*c1+sin(ang)*c2;\nfloat nc2=-sin(ang)*c1+cos(ang)*c2;\n\nnc1*=saturationA-0.0001;\nnc2*=saturationA-0.0001;\ncolCC=gr*grey+nc1*col1+nc2*col2;\ncolCC = clamp(colCC, vec3(0.0), vec3(1.0));\n\ncolCC *= brightnessA.rgb;\n\n\ncolCC = pow(colCC.rgb, vec3(gammaA));\n\n\n\n\n\nvec3 contrasted = vec3(cc_contrast_greyscale(colCC.r,contrastA),\ncc_contrast_greyscale(colCC.g,contrastA),\ncc_contrast_greyscale(colCC.b,contrastA));\ncolCC = contrasted;\n\nreturn vec4(colCC, inputcolorA.a);\n}\n\nvec4 Octane_BlackBody(vec4 tex1, float v00)\n{\nfloat v01=v00-v00;\nfloat v02=ssqrt(v00);\nfloat v03=spow(v01,v01);\nfloat v04=v03+v03;\nfloat v05=ssqrt(v02);\nfloat v07=ssqrt(v05);\nfloat v08=v04*v04*v04;\nfloat v09=ssqrt(v08);\nfloat v10=v03+v09;\nfloat v11=v08-v05;\nfloat v12=ssqrt(v09);\nfloat v13=v07-v04;\nfloat v14=v01-v13;\nfloat v15=spow(v10,v14);\nfloat v16=spow(v13,v11);\nfloat v17=v04+v16;\nfloat v18=v17*v16;\nfloat v19=spow(v11,v12);\nfloat v20=v13*v13*v13;\nfloat v21=v15+v18;\nfloat v22=spow(v21,v15);\nfloat v23=v13*v22;\nfloat v24=v23*v20;\nfloat v25=v19+v22;\nreturn tex1*vec4(v25, v23, v24, 1.0);\n}\n\nvec4 Octane_PolygonSide(vec3 ngnorm, vec3 neyeDir, int nInvert)\n{\nif (nInvert != 0)\nreturn (dot(ngnorm, neyeDir) > 0.0) ? vec4(1.0) : vec4(0.0, 0.0, 0.0, 1.0);\nreturn (dot(ngnorm, neyeDir) < 0.0) ? vec4(1.0) : vec4(0.0, 0.0, 0.0, 1.0);\n}\n\nfloat Octane_Falloff_Map(vec3 ngnormA, vec3 neyeDirA, float minval, float maxval, float skewfactor)\n{\nngnormA = normalize(ngnormA);\n\nfloat dotnd = dot(neyeDirA, ngnormA);\nif (dotnd > 0.0)\ndotnd = -dotnd;\nfloat powangle = pow(acos(-dotnd) / (3.14159625*0.5), skewfactor);\nreturn minval + (maxval-minval) * powangle;\n}\n\nvec4 Octane_Portal(vec3 ngnormA, vec3 neyeDirA)\n{\nvec3 reflectDir = makeReflectDir(ngnormA, neyeDirA, 1.0);\nvec4 colA1 = textureCube(specularcachecubetexture, reflectDir);\ncolA1 = vec4(colA1.rgb+(1.0-colA1.a)*64.0, 1.0);\nreturn colA1;\n}\n\nvec2 Octahedron_GetUV( vec3 d )\n{\n\nd /= dot(abs(d), vec3(1.0));\n\nif ( d.z < 0.0 )\nd.xy = (1.0-abs(d.yx)) * sign(d.xy);\n\nd.xy = d.xy * 0.5 + 0.5;\nreturn d.xy;\n}\n\nvec4 Octahedron_ReadEnvMap(vec3 d, float fMapIdx)\n{\nvec2 uv = Octahedron_GetUV(d);\n\nfloat fPixelSize = 1.0/blurres;\nif (fMapIdx == 0.0)\n{\n\nfPixelSize *= 2.0;\nuv = uv*(0.5-2.0*fPixelSize)+fPixelSize;\n}\nelse\n{\n\nfPixelSize *= 4.0;\nuv = uv*(0.25-2.0*fPixelSize)+fPixelSize;\n\nfMapIdx += (fMapIdx < 2.5) ? 1.0 : 3.0;\nfMapIdx = clamp(fMapIdx, 2.0, 15.0);\nuv += (vec2(mod(fMapIdx, 4.0), floor(fMapIdx/4.0))*vec2(0.25));\n}\n\nreturn texture2D(texOctahedron, uv);\n}\n\nvec4 Octane_Glossy_Material(vec3 ngnormA, vec3 neyeDirA, vec4 diffusecolorA, vec4 specularcolorA, vec2 blurrinessA, vec2 iorA, vec4 emissioncolorA, float reffactor, float opacity)\n{\nngnormA = normalize(ngnormA);\n\n\nvec4 diffuseSum = textureCube(diffusecachecubetexture, ngnormA);\ndiffuseSum = vec4(diffuseSum.rgb+(1.0-diffuseSum.a)*64.0, 1.0);\n#if hdribias\ndiffuseSum.rgb = pow(diffuseSum.rgb, vec3(gamma));\n#endif\ndiffuseSum *= diffusecolorA;\n\n\nfloat fAcosAngle = clamp(-dot(neyeDirA, ngnormA), 0.0, 1.0);\nvec4 colA1, colB1;\nvec3 reflectDir = makeReflectDir(ngnormA, neyeDirA, reffactor);\nfloat blurfactor = (1.0+numblurmaps)*blurrinessA.x*(1.0-pow(acos(abs(fAcosAngle)) / (3.14159625*0.5), blurrinessA.y));\nfloat blurfraction = fract(blurfactor);\nif (blurfactor <= 1.0) {\n\ncolA1 = textureCube(specularcachecubetexture, reflectDir);\ncolB1 = Octahedron_ReadEnvMap(reflectDir, 0.0);\n} else {\ncolA1 = Octahedron_ReadEnvMap(reflectDir, floor(blurfactor)-1.0);\ncolB1 = Octahedron_ReadEnvMap(reflectDir, ceil(blurfactor)-1.0);\n}\ncolA1 = vec4(colA1.rgb+(1.0-colA1.a)*64.0, 1.0);\ncolB1 = vec4(colB1.rgb+(1.0-colB1.a)*64.0, 1.0);\nvec4 glossySum = (1.0-blurfraction)*colA1+blurfraction*colB1;\n#if hdribias\nglossySum = vec4(pow(glossySum.rgb, vec3(gamma)), 1.0);\n#endif\n\n\nfloat dotnd = dot(neyeDirA, ngnormA);\nif (dotnd > 0.0)\ndotnd = -dotnd;\nfloat powangle = pow(acos(-dotnd) / (3.14159625*0.5), iorA.y);\nif (iorA.x != 0.0) {\nglossySum *= specularcolorA;\nfloat fresnelFactorIntensity = iorA.x + (1.0 - iorA.x) * powangle;\nglossySum *= fresnelFactorIntensity;\n\nreturn vec4(opacity*(diffuseSum + glossySum + emissioncolorA).rgb, opacity);\n}\n\nreturn vec4(opacity*(mix(diffuseSum, glossySum, specularcolorA)+emissioncolorA).rgb, opacity);\n}\n\nvec4 Octane_Specular_Material(vec3 ngnormA, vec3 neyeDirA, vec4 reflectioncolorA, vec4 transmissionA, vec2 blurrinessA, vec2 iorA, float reffactor, float opacity)\n{\nngnormA = normalize(ngnormA);\n\n\nfloat fAcosAngle = clamp(-dot(neyeDirA, ngnormA), 0.0, 1.0);\nvec4 colA1, colB1;\nvec3 reflectDir = makeReflectDir(ngnormA, neyeDirA, reffactor);\nfloat blurfactor = (1.0+numblurmaps)*blurrinessA.x*(1.0-pow(acos(abs(fAcosAngle)) / (3.14159625*0.5), blurrinessA.y));\nfloat blurfraction = fract(blurfactor);\nif (blurfactor <= 1.0) {\n\ncolA1 = textureCube(specularcachecubetexture, reflectDir);\ncolB1 = Octahedron_ReadEnvMap(reflectDir, 0.0);\n} else {\ncolA1 = Octahedron_ReadEnvMap(reflectDir, floor(blurfactor)-1.0);\ncolB1 = Octahedron_ReadEnvMap(reflectDir, ceil(blurfactor)-1.0);\n}\ncolA1 = vec4(colA1.rgb+(1.0-colA1.a)*64.0, 1.0);\ncolB1 = vec4(colB1.rgb+(1.0-colB1.a)*64.0, 1.0);\nvec4 glossySum = (1.0-blurfraction)*colA1+blurfraction*colB1;\n#if hdribias\nglossySum = vec4(pow(glossySum.rgb, vec3(gamma)), 1.0);\n#endif\nglossySum *= reflectioncolorA;\n\n\nif (iorA.x != 0.0) {\nfloat dotnd = dot(neyeDirA, ngnormA);\nif (dotnd > 0.0)\ndotnd = -dotnd;\nfloat powangle = pow(acos(-dotnd) / (3.14159625*0.5), iorA.y);\nglossySum *= iorA.x + (1.0 - iorA.x) * powangle;\n}\n\nfloat alpha = opacity*(1.0-transmissionA.r);\nreturn vec4(opacity*(glossySum*reflectioncolorA).rgb, alpha);\n}\n\nvec4 Octane_Diffuse_Material(vec3 ngnormA, vec4 diffusecolorA, vec4 emissioncolorA, float opacity)\n{\nngnormA = normalize(ngnormA);\n\n\nvec4 diffuseSum = textureCube(diffusecachecubetexture, ngnormA);\ndiffuseSum = vec4(diffuseSum.rgb+(1.0-diffuseSum.a)*64.0, 1.0);\n#if hdribias\ndiffuseSum.rgb = pow(diffuseSum.rgb, vec3(gamma));\n#endif\ndiffuseSum *= diffusecolorA;\nreturn vec4(opacity*(diffuseSum+emissioncolorA).rgb, opacity);\n}\n\nvec4 Octane_Normalmap(vec3 agnorm, vec3 neyeDirA, sampler2D textureA, vec2 uvA, float powerA)\n{\nvec3 ngnorm = agnorm;\nvec3 bumpValue = (texture2D(textureA, uvA).xyz-0.498039)*2.0;\nbumpValue *= powerA;\nngnorm -= bumpValue.x * normalize(bu);\nngnorm += bumpValue.y * normalize(bv);\nngnorm = normalize(ngnorm);\n\nvec3 relectDir = makeReflectDir(ngnorm, neyeDirA, 1.0);\nfloat fDPReflect = dot(relectDir, agnorm);\nif (fDPReflect < 0.0)\n{\nngnorm -= agnorm*fDPReflect;\nngnorm = normalize(ngnorm);\n}\nreturn vec4(ngnorm, 1.0);\n}\n\nfloat Octane_RGBToFloat(vec3 col)\n{\nreturn (0.2989*col.r+0.5870*col.g+0.1140*col.b)/3.0;\n}\n\nvoid main(void)\n{\nstruct stState\n{\nvec3 pos;\nvec3 norm;\nvec3 eyedir;\nvec2 uv;\n} state;\n\nstate.norm = normalize(g_norm);\nstate.eyedir = normalize(eyeDir);\nstate.uv = tex1;\n\n\nMODULAR_FRAGMENT_INSERT\n\nif (ColCorrAndCamResp != 0)\n{\n\ngl_FragColor.rgb = exposure.rgb*ApplyColorCorrection(gl_FragColor.rgb);\n\n\nif (highlightcompression > 0.0)\ngl_FragColor.rgb = funchighlight(gl_FragColor.rgb, vec3(highlightcompression));\n\n#if (camresponse == 305)\ngl_FragColor.rgb = clamp(gl_FragColor.rgb, vec3(0.0), vec3(1.0));\ngl_FragColor.rgb = vec3(funcdscsred(gl_FragColor.r), funcdscsgreen(gl_FragColor.g), funcdscsblue(gl_FragColor.b));\n#endif\n\nif (gamma != 1.0)\ngl_FragColor.rgb = pow(gl_FragColor.rgb, vec3(1.0/gamma));\n\n#if hasLUTTexture\ngl_FragColor.rgb = ApplyLUT(gl_FragColor.rgb);\n#endif\n\nif (vignetting > 0.0)\ngl_FragColor.rgb = gl_FragColor.rgb*(1.0-((length(2.0*((gl_FragCoord.xy/viewportsize)-0.5))*0.707107)*vignetting));\n}\n}\n";var M_PI=3.141592653589793;var M_TWO_PI=2*M_PI;var M_HALF_PI=M_PI/2;var SHADER_TYPE_STANDARD=0;var SHADER_TYPE_GLASS=1;var SHADER_TYPE_AMBIENT=2;var SHADER_TYPE_MAX=3;var TEXTURE_MAP_ALPHATEX=0;var TEXTURE_MAP_DIFFUSETEX=1;var TEXTURE_MAP_DIFFUSEENV=2;var TEXTURE_MAP_GLOSSYTEX=3;var TEXTURE_MAP_GLOSSYENV=4;var TEXTURE_MAP_SPECULARTEX=5;var TEXTURE_MAP_SPECULARENV=6;var TEXTURE_MAP_BUMPTEX=7;var TEXTURE_MAP_BASETEX=8;var TEXTURE_MAP_ROUGHNESSTEX=9;var TEXTURE_MAP_PHYSICAL1=10;var TEXTURE_MAP_PHYSICAL2=11;var TEXTURE_MAP_PHYSICAL3=12;var TEXTURE_MAP_REFLECTIONTEX=13;var TEXTURE_MAP_ADDITIONALTEX=14;var TEXTURE_MAP_AMBOCCTEX=15;var TEXTURE_MAP_REFLECTIONTEX2=16;var TEXTURE_MAP_TRANSMISSIONTEX=17;var TEXTURE_MAP_LIGHTFIELDTEX=18;var TEXTURE_MAP_LUTTEX=19;var SHADER_DIFFUSETEX_MAP=1;var SHADER_DIFFUSEENV_MAP=2;var SHADER_GLOSSYTEX_MAP=4;var SHADER_GLOSSYENV_MAP=8;var SHADER_SPECULARTEX_MAP=16;var SHADER_SPECULARENV_MAP=32;var SHADER_ALPHA_MAP=64;var UNIFORM_TYPE_MATRIX=0;var UNIFORM_TYPE_VECTOR=1;var UNIFORM_TYPE_FLOAT=2;var UNIFORM_TYPE_ARRAY_VERTEX=3;var UNIFORM_TYPE_ARRAY_UV=4;var UNIFORM_TYPE_ARRAY_FLOAT=5;var UNIFORM_TYPE_INT=6;var UNIFORM_TYPE_FLOAT2=7;var UNIFORM_TYPE_VECTOR4=8;var UNIFORM_TYPE_MAT3=9;var FANIM_INTERPOLATION_STEP=0;var FANIM_INTERPOLATION_LINEAR=1;var FANIM_INTERPOLATION_BEZIER=2;var FANIM_INTERPOLATION_TCB=3;var FANIM_INFINITY_CONSTANT=0;var FANIM_INFINITY_LINEAR=1;var FANIM_INFINITY_CYCLE=2;var FANIM_INFINITY_CYCLE_RELATIVE=3;var FANIM_INFINITY_OSCILLATE=4;var infinityrt_identity=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1];function MatrixMultiply(c,b){var a=Array();a[0]=c[0]*b[0]+c[1]*b[4]+c[2]*b[8]+c[3]*b[12];a[1]=c[0]*b[1]+c[1]*b[5]+c[2]*b[9]+c[3]*b[13];a[2]=c[0]*b[2]+c[1]*b[6]+c[2]*b[10]+c[3]*b[14];a[3]=c[0]*b[3]+c[1]*b[7]+c[2]*b[11]+c[3]*b[15];a[4]=c[4]*b[0]+c[5]*b[4]+c[6]*b[8]+c[7]*b[12];a[5]=c[4]*b[1]+c[5]*b[5]+c[6]*b[9]+c[7]*b[13];a[6]=c[4]*b[2]+c[5]*b[6]+c[6]*b[10]+c[7]*b[14];a[7]=c[4]*b[3]+c[5]*b[7]+c[6]*b[11]+c[7]*b[15];a[8]=c[8]*b[0]+c[9]*b[4]+c[10]*b[8]+c[11]*b[12];a[9]=c[8]*b[1]+c[9]*b[5]+c[10]*b[9]+c[11]*b[13];a[10]=c[8]*b[2]+c[9]*b[6]+c[10]*b[10]+c[11]*b[14];a[11]=c[8]*b[3]+c[9]*b[7]+c[10]*b[11]+c[11]*b[15];a[12]=c[12]*b[0]+c[13]*b[4]+c[14]*b[8]+c[15]*b[12];a[13]=c[12]*b[1]+c[13]*b[5]+c[14]*b[9]+c[15]*b[13];a[14]=c[12]*b[2]+c[13]*b[6]+c[14]*b[10]+c[15]*b[14];a[15]=c[12]*b[3]+c[13]*b[7]+c[14]*b[11]+c[15]*b[15];return a}function MatrixTranslation(d,c,b){var a=Array();a[0]=1;a[4]=0;a[8]=0;a[12]=d;a[1]=0;a[5]=1;a[9]=0;a[13]=c;a[2]=0;a[6]=0;a[10]=1;a[14]=b;a[3]=0;a[7]=0;a[11]=0;a[15]=1;return a}function MatrixScaling(d,c,b){var a=Array();a[0]=d;a[4]=0;a[8]=0;a[12]=0;a[1]=0;a[5]=c;a[9]=0;a[13]=0;a[2]=0;a[6]=0;a[10]=b;a[14]=0;a[3]=0;a[7]=0;a[11]=0;a[15]=1;return a}function MatrixRotationAxis(a,g,d,b){var k=Math.sin(a);var f=Math.cos(a);var i=g;var h=d;var e=b;var j=Array();j[0]=i*i*(1-f)+f;j[4]=i*h*(1-f)-(e*k);j[8]=i*e*(1-f)+(h*k);j[12]=0;j[1]=h*i*(1-f)+(e*k);j[5]=h*h*(1-f)+f;j[9]=h*e*(1-f)-(i*k);j[13]=0;j[2]=e*i*(1-f)-(h*k);j[6]=e*h*(1-f)+(i*k);j[10]=e*e*(1-f)+f;j[14]=0;j[3]=0;j[7]=0;j[11]=0;j[15]=1;return j}function MatrixDet(a){return(a)[3]*(a)[6]*(a)[9]*(a)[12]-(a)[2]*(a)[7]*a[9]*(a)[12]-(a)[3]*(a)[5]*(a)[10]*(a)[12]+(a)[1]*(a)[7]*(a)[10]*(a)[12]+(a)[2]*(a)[5]*(a)[11]*(a)[12]-(a)[1]*(a)[6]*(a)[11]*(a)[12]-(a)[3]*(a)[6]*(a)[8]*(a)[13]+(a)[2]*(a)[7]*(a)[8]*(a)[13]+(a)[3]*(a)[4]*(a)[10]*(a)[13]-(a)[0]*(a)[7]*(a)[10]*(a)[13]-(a)[2]*(a)[4]*(a)[11]*(a)[13]+(a)[0]*(a)[6]*(a)[11]*(a)[13]+(a)[3]*(a)[5]*(a)[8]*(a)[14]-(a)[1]*(a)[7]*(a)[8]*(a)[14]-(a)[3]*(a)[4]*(a)[9]*(a)[14]+(a)[0]*(a)[7]*(a)[9]*(a)[14]+(a)[1]*(a)[4]*(a)[11]*(a)[14]-(a)[0]*(a)[5]*(a)[11]*(a)[14]-(a)[2]*(a)[5]*(a)[8]*(a)[15]+(a)[1]*(a)[6]*(a)[8]*(a)[15]+(a)[2]*(a)[4]*(a)[9]*(a)[15]-(a)[0]*(a)[6]*(a)[9]*(a)[15]-(a)[1]*(a)[4]*(a)[10]*(a)[15]+(a)[0]*(a)[5]*(a)[10]*(a)[15]}function PointTransform(d,b){var a=d[0];var g=d[1];var f=d[2];var c=d[3];var e=Array();e[0]=a*b[0]+g*b[4]+f*b[8]+c*b[12];e[1]=a*b[1]+g*b[5]+f*b[9]+c*b[13];e[2]=a*b[2]+g*b[6]+f*b[10]+c*b[14];e[3]=a*b[3]+g*b[7]+f*b[11]+c*b[15];return e}function PointDistance(d,c){return Math.sqrt((d[0]-c[0])*(d[0]-c[0])+(d[1]-c[1])*(d[1]-c[1])+(d[2]-c[2])*(d[2]-c[2]))}var infinityrt_calcNormal=function(d,b,a){var e=[d[0]-b[0],d[1]-b[1],d[2]-b[2]];var c=[b[0]-a[0],b[1]-a[1],b[2]-a[2]];return[e[1]*c[2]-e[2]*c[1],e[2]*c[0]-e[0]*c[2],e[0]*c[1]-e[1]*c[0]]};var infinityrt_normalize=function(a){var b=Math.sqrt((a[0]*a[0])+(a[1]*a[1])+(a[2]*a[2]));if(b==0){return[0,0,0]}return[a[0]/b,a[1]/b,a[2]/b]};var infinityrt_normalize2=function(e,c,a){var b=Math.sqrt((e*e)+(c*c)+(a*a));if(b==0){return[0,0,0]}return[e/b,c/b,a/b]};var infinityrt_length=function(a){return Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2])};var infinityrt_dp=function(b,a){return b[0]*a[0]+b[1]*a[1]+b[2]*a[2]};var infinityrt_angle=function(b,a){return Math.acos(infinityrt_dp(b,a)/(infinityrt_length(b)*infinityrt_length(a)))};var infinityrt_crossProduct=function(b,a){return[b[1]*a[2]-a[1]*b[2],b[2]*a[0]-a[2]*b[0],b[0]*a[1]-a[0]*b[1]]};var infinityrt_vertex_mul_const=function(b,a){return[b[0]*a,b[1]*a,b[2]*a]};var infinityrt_vertex_add=function(b,a){return[b[0]+a[0],b[1]+a[1],b[2]+a[2]]};var infinityrt_vertex_sub=function(b,a){return[b[0]-a[0],b[1]-a[1],b[2]-a[2]]};var infinityrt_vertex_scladd=function(c,b,a){return[c[0]+b[0]*a,c[1]+b[1]*a,c[2]+b[2]*a]};var infinityrt_vtx_eq=function(d,c){return(d[0]==c[0]&&d[1]==c[1]&&d[2]==c[2])};var infinityrt_uv_eq=function(d,c){return(d[0]==c[0]&&d[1]==c[1])};var infinityrt_perspective=function(d,c,f,b){var a=Math.tan(d*M_PI/360);var e=a*c;return[1/e,0,0,0,0,1/a,0,0,0,0,-(b+f)/(b-f),-1,0,0,-(2*b*f)/(b-f),0]};var infinityrt_lookat=function(d,a,c,g,f,b){var h=infinityrt_normalize([a[0]-d[0],a[1]-d[1],a[2]-d[2]]);var e=infinityrt_normalize(c);var l=infinityrt_crossProduct(h,e);l=infinityrt_normalize(l);var j=infinityrt_crossProduct(l,h);j=infinityrt_normalize(j);d=infinityrt_vertex_scladd(d,l,g[0]*f);d=infinityrt_vertex_scladd(d,j,g[1]*f);d=b.RestrictViewSpace(d);var i=[l[0],j[0],-h[0],0,l[1],j[1],-h[1],0,l[2],j[2],-h[2],0,0,0,0,1];var k=new infinityrt_transform();k.translate(-d[0],-d[1],-d[2]);k.pushMatrix(i);i=k.getResult();return i};var infinityrt_compileShader=function(e,d,a,c){var b;if(a=="x-shader/x-fragment"){b=e.createShader(e.FRAGMENT_SHADER)}else{if(a=="x-shader/x-vertex"){b=e.createShader(e.VERTEX_SHADER)}else{return null}}e.shaderSource(b,d);e.compileShader(b);if(c){if(!e.getShaderParameter(b,e.COMPILE_STATUS)){console.log("***Compile Status "+e.getShaderInfoLog(b));return null}}return b};var infinityrt_getShader=function(f,g,d){var b=document.getElementById(g);if(!b){return null}var e="";var a=b.firstChild;while(a){if(a.nodeType==3){e+=a.textContent}a=a.nextSibling}var c;if(b.type=="x-shader/x-fragment"){c=f.createShader(f.FRAGMENT_SHADER)}else{if(b.type=="x-shader/x-vertex"){c=f.createShader(f.VERTEX_SHADER)}else{return null}}f.shaderSource(c,e);f.compileShader(c);if(d){if(!f.getShaderParameter(c,f.COMPILE_STATUS)){console.log("***"+f.getShaderInfoLog(c));return null}}return c};if(!String.prototype.endsWith){String.prototype.endsWith=function(c,b){var a=this.toString();if(typeof b!=="number"||!isFinite(b)||Math.floor(b)!==b||b>a.length){b=a.length}b-=c.length;var d=a.indexOf(c,b);return d!==-1&&d===b}}function XMLGetNodeText(a){if(!a){return""}if(typeof(a.textContent)!="undefined"){return a.textContent}return a.firstChild.nodeValue}function check_webp_feature(c,e,d){var a={lossy:"UklGRiIAAABXRUJQVlA4IBYAAAAwAQCdASoBAAEADsD+JaQAA3AAAAAA",lossless:"UklGRhoAAABXRUJQVlA4TA0AAAAvAAAAEAcQERGIiP4HAA==",alpha:"UklGRkoAAABXRUJQVlA4WAoAAAAQAAAAAAAAAAAAQUxQSAwAAAARBxAR/Q9ERP8DAABWUDggGAAAABQBAJ0BKgEAAQAAAP4AAA3AAP7mtQAAAA==",animation:"UklGRlIAAABXRUJQVlA4WAoAAAASAAAAAAAAAAAAQU5JTQYAAAD/////AABBTk1GJgAAAAAAAAAAAAAAAAAAAGQAAABWUDhMDQAAAC8AAAAQBxAREYiI/gcA"};var b=new Image();b.onload=function(){var f=(b.width>0)&&(b.height>0);e(c,f)};b.onerror=function(){e(c,false)};if(!d._usingwkwebview){b.crossOrigin="anonymous"}b.src="data:image/webp;base64,"+a[c]}!function(b,a){"function"==typeof define&&define.amd?define([],a):"object"==typeof exports?module.exports=a():b.untar=a()}(this,function(){function g(m){function k(r){for(var o=0,n=l.length;n>o;++o){l[o](r)}q.push(r)}if("function"!=typeof Promise){throw new Error("Promise implementation not available in this environment.")}var l=[],q=[],a=new Promise(function(e,i){m(e,i,k)});a.progress=function(n){if("function"!=typeof n){throw new Error("cb is not a function.")}for(var i=0,r=q.length;r>i;++i){n(q[i])}return l.push(n),a};var p=a.then;return a.then=function(o,i,n){return p.call(a,o,i),void 0!==n&&a.progress(n),a},a}function d(a){if(!(a instanceof ArrayBuffer)){throw new TypeError("arrayBuffer is not an instance of ArrayBuffer.")}if(!c.Worker){throw new Error("Worker implementation is not available in this environment.")}return new g(function(n,l,p){var k=new Worker(j),m=[];k.onerror=function(i){l(i)},k.onmessage=function(e){switch(e=e.data,e.type){case"log":console[e.data.level]("Worker: "+e.data.msg);break;case"extract":var i=f(e.data);m.push(i),p(i);break;case"complete":n(m);break;case"error":l(new Error(e.data.message));break;default:l(new Error("Unknown message from worker: "+e.type))}},k.postMessage({type:"extract",buffer:a},[a])})}function f(a){return Object.defineProperties(a,b),a}var j,c=window||this,h=c.URL||c.webkitURL,b={blob:{get:function(){return this._blob||(this._blob=new Blob([this.buffer]))}},getBlobUrl:{value:function(){return this._blobUrl||(this._blobUrl=h.createObjectURL(this.blob))}},readAsString:{value:function(){for(var q=this.buffer,m=q.byteLength,p=1,u=new DataView(q),l=[],s=0;m>s;++s){var k=u.getUint8(s*p,!0);l.push(k)}return this._string=String.fromCharCode.apply(null,l)}},readAsJSON:{value:function(){return JSON.parse(this.readAsString())}}};return j=(window||this).URL.createObjectURL(new Blob(['"use strict";function UntarWorker(){}function TarFile(){}function UntarStream(e){this._bufferView=new DataView(e),this._position=0}function UntarFileStream(e){this._stream=new UntarStream(e)}if(UntarWorker.prototype={onmessage:function(e){try{if("extract"!==e.data.type)throw new Error("Unknown message type: "+e.data.type);this.untarBuffer(e.data.buffer)}catch(t){this.postError(t)}},postError:function(e){this.postMessage({type:"error",data:{message:e.message}})},postLog:function(e,t){this.postMessage({type:"log",data:{level:e,msg:t}})},untarBuffer:function(e){try{for(var t=new UntarFileStream(e);t.hasNext();){var r=t.next();this.postMessage({type:"extract",data:r},[r.buffer])}this.postMessage({type:"complete"})}catch(i){this.postError(i)}},postMessage:function(e,t){self.postMessage(e,t)}},"undefined"!=typeof self){var worker=new UntarWorker;self.onmessage=function(e){worker.onmessage(e)}}UntarStream.prototype={readString:function(e){for(var t=1,r=e*t,i=[],n=0;e>n;++n){var s=this._bufferView.getUint8(this.position()+n*t,!0);if(0===s)break;i.push(s)}return this.seek(r),String.fromCharCode.apply(null,i)},readBuffer:function(e){var t;if("function"==typeof ArrayBuffer.prototype.slice)t=this._bufferView.buffer.slice(this.position(),this.position()+e);else{t=new ArrayBuffer(e);var r=new Uint8Array(t),i=new Uint8Array(this._bufferView.buffer,this.position(),e);r.set(i)}return this.seek(e),t},seek:function(e){this._position+=e},peekUint32:function(){return this._bufferView.getUint32(this.position(),!0)},position:function(e){return void 0===e?this._position:void(this._position=e)},size:function(){return this._bufferView.byteLength}},UntarFileStream.prototype={hasNext:function(){return this._stream.position()+4<this._stream.size()&&0!==this._stream.peekUint32()},next:function(){var e=this._stream,t=new TarFile,r=e.position(),i=r+512;t.name=e.readString(100),t.mode=e.readString(8),t.uid=e.readString(8),t.gid=e.readString(8),t.size=parseInt(e.readString(12),8),t.modificationTime=parseInt(e.readString(12),8),t.checksum=e.readString(8),t.type=e.readString(1),t.linkname=e.readString(100),t.ustarFormat=e.readString(6),t.ustarFormat.indexOf("ustar")>-1&&(t.version=e.readString(2),t.uname=e.readString(32),t.gname=e.readString(32),t.devmajor=e.readString(8),t.devminor=e.readString(8),t.namePrefix=e.readString(155),t.namePrefix.length>0&&(t.name=t.namePrefix+t.name)),e.position(i),"0"===t.type||"\x00"===t.type?t.buffer=e.readBuffer(t.size):5==t.type,void 0===t.buffer&&(t.buffer=new ArrayBuffer(0));var n=i+t.size;return t.size%512!==0&&(n+=512-t.size%512),e.position(n),t}};'])),d});infinityrt_transform=function(a){return this.clearStack()};infinityrt_transform.prototype.setIdentity=function(){this.m_stack[this.c_stack]=this.getIdentity();if(this.valid==this.c_stack&&this.c_stack){this.valid--}return this};infinityrt_transform.prototype.getIdentity=function(){return[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]};infinityrt_transform.prototype.invalidate=function(){this.valid=0;this.result=null;return this};infinityrt_transform.prototype.getResult=function(){if(!this.c_stack){return this.m_stack[0]}if(this.valid!=this.c_stack){if(this.valid>this.c_stack){while(this.valid>this.c_stack+1){this.valid--;this.m_cache.pop()}}else{for(var a=this.valid;a<=this.c_stack;a++){this.m_cache[a]=(a==0)?this.m_stack[0]:this.multiply4_4by4_4(this.m_cache[a-1],this.m_stack[a]);this.valid++}}this.result=this.m_cache[this.valid-1]}return this.result};infinityrt_transform.prototype.pushMatrix=function(a){this.c_stack++;this.m_stack.push(a?a:this.getIdentity());return this};infinityrt_transform.prototype.popMatrix=function(){if(this.c_stack==0){return this}this.c_stack--;return this};infinityrt_transform.prototype.clearStack=function(){this.m_stack=[];this.m_cache=[];this.c_stack=0;this.valid=0;this.result=null;if(typeof(init_mat)!="undefined"){this.m_stack[0]=init_mat}else{this.setIdentity()}return this};infinityrt_transform.prototype.multiply4_4by4_4=function(c,b){var a=[];a[0]=b[0]*c[0]+b[4]*c[1]+b[8]*c[2]+b[12]*c[3];a[1]=b[1]*c[0]+b[5]*c[1]+b[9]*c[2]+b[13]*c[3];a[2]=b[2]*c[0]+b[6]*c[1]+b[10]*c[2]+b[14]*c[3];a[3]=b[3]*c[0]+b[7]*c[1]+b[11]*c[2]+b[15]*c[3];a[4]=b[0]*c[4]+b[4]*c[5]+b[8]*c[6]+b[12]*c[7];a[5]=b[1]*c[4]+b[5]*c[5]+b[9]*c[6]+b[13]*c[7];a[6]=b[2]*c[4]+b[6]*c[5]+b[10]*c[6]+b[14]*c[7];a[7]=b[3]*c[4]+b[7]*c[5]+b[11]*c[6]+b[15]*c[7];a[8]=b[0]*c[8]+b[4]*c[9]+b[8]*c[10]+b[12]*c[11];a[9]=b[1]*c[8]+b[5]*c[9]+b[9]*c[10]+b[13]*c[11];a[10]=b[2]*c[8]+b[6]*c[9]+b[10]*c[10]+b[14]*c[11];a[11]=b[3]*c[8]+b[7]*c[9]+b[11]*c[10]+b[15]*c[11];a[12]=b[0]*c[12]+b[4]*c[13]+b[8]*c[14]+b[12]*c[15];a[13]=b[1]*c[12]+b[5]*c[13]+b[9]*c[14]+b[13]*c[15];a[14]=b[2]*c[12]+b[6]*c[13]+b[10]*c[14]+b[14]*c[15];a[15]=b[3]*c[12]+b[7]*c[13]+b[11]*c[14]+b[15]*c[15];return a};infinityrt_transform.prototype.m_mat=infinityrt_transform.prototype.multiply4_4by4_4;infinityrt_transform.prototype.multiply1_4by4_4=function(c,b){var a=[];a[0]=b[0]*c[0]+b[4]*c[1]+b[8]*c[2]+b[12]*c[3];a[1]=b[1]*c[0]+b[5]*c[1]+b[9]*c[2]+b[13]*c[3];a[2]=b[2]*c[0]+b[6]*c[1]+b[10]*c[2]+b[14]*c[3];a[3]=b[3]*c[0]+b[7]*c[1]+b[11]*c[2]+b[15]*c[3];return a};infinityrt_transform.prototype.m_vector=infinityrt_transform.prototype.multiply1_4by4_4;infinityrt_transform.prototype.m_point=infinityrt_transform.prototype.multiply1_3by4_4=function(c,b){var a=[];a[0]=b[0]*c[0]+b[4]*c[1]+b[8]*c[2]+b[12];a[1]=b[1]*c[0]+b[5]*c[1]+b[9]*c[2]+b[13];a[2]=b[2]*c[0]+b[6]*c[1]+b[10]*c[2]+b[14];return a};infinityrt_transform.prototype.translate=function(b,d,c){if(typeof(b)=="object"){return this.translate(b[0],b[1],b[2])}var a=this.getIdentity();a[12]=b;a[13]=d;a[14]=c;this.m_stack[this.c_stack]=this.multiply4_4by4_4(this.m_stack[this.c_stack],a);if(this.valid==this.c_stack&&this.c_stack){this.valid--}return this};infinityrt_transform.prototype.scale=function(b,d,c){if(typeof(b)=="object"){return this.scale(b[0],b[1],b[2])}var a=this.getIdentity();a[0]=b;a[5]=d;a[10]=c;this.m_stack[this.c_stack]=this.multiply4_4by4_4(this.m_stack[this.c_stack],a);if(this.valid==this.c_stack&&this.c_stack){this.valid--}return this};infinityrt_transform.prototype.rotate=function(d,i,h,g){if(typeof(d)=="object"){this.rotate(d[2],0,0,1);this.rotate(d[1],0,1,0);this.rotate(d[0],1,0,0);return this}var e,f;if(i||h||g){e=Math.sin(d*(M_PI/180));f=Math.cos(d*(M_PI/180))}if(i){var c=this.getIdentity();c[5]=f*i;c[9]=e*i;c[6]=-e*i;c[10]=f*i;this.m_stack[this.c_stack]=this.multiply4_4by4_4(this.m_stack[this.c_stack],c)}if(h){var b=this.getIdentity();b[0]=f*h;b[8]=-e*h;b[2]=e*h;b[10]=f*h;this.m_stack[this.c_stack]=this.multiply4_4by4_4(this.m_stack[this.c_stack],b)}if(g){var a=this.getIdentity();a[0]=f*g;a[4]=e*g;a[1]=-e*g;a[5]=f*g;this.m_stack[this.c_stack]=this.multiply4_4by4_4(this.m_stack[this.c_stack],a)}if(this.valid==this.c_stack&&this.c_stack){this.valid--}return this};infinityrt_object=function(){this.points=[];this.point_normals=[];this.uvs=[];this.currentMaterial=0;this.compiled=null;this.visible=1;this.defer=false;this.compresseddata=null;this.meshloaded=false;this.indices=[];this._localbbmax=[0,0,0];this._localbbmin=[0,0,0];this._localmidpt=[0,0,0]};infinityrt_object.prototype.calcMidPt=function(){this._localmidpt[0]=(this._localbbmax[0]+this._localbbmin[0])*0.5;this._localmidpt[1]=(this._localbbmax[1]+this._localbbmin[1])*0.5;this._localmidpt[2]=(this._localbbmax[2]+this._localbbmin[2])*0.5};infinityrt_object.prototype.addPoints=function(a){this.points=a};infinityrt_object.prototype.addNormals=function(a){this.point_normals=a};infinityrt_object.prototype.addUVs=function(a){this.uvs=a};infinityrt_object.prototype.setFaceMaterial=function(a){this.currentMaterial=(typeof(a)=="object")?a.material_id:a};infinityrt_object.prototype.addIndices=function(a){this.indices=a};infinityrt_object.prototype.CalcSurfTangents=function(){if(typeof(this.uvs)=="undefined"||this.uvs.length==0){return}this.tanus=[];this.tanvs=[];var g=this.indices.length/3;for(var r=0;r<g;r++){var k=[],j=[],h=[],m=[],l=[];for(var f=0;f<3;f++){var a=this.indices[3*r+f];var n=a*3,o=a*2;k[f]=this.points[n];j[f]=this.points[n+1];h[f]=this.points[n+2];if(typeof(this.uvs[o])!="undefined"){m[f]=this.uvs[o];l[f]=this.uvs[o+1]}else{m[f]=0;l[f]=0}}var t=[],s=[];var q=[],p=[];t[0]=k[1]-k[0];t[1]=j[1]-j[0];t[2]=h[1]-h[0];q[0]=m[1]-m[0];q[1]=l[1]-l[0];s[0]=k[2]-k[0];s[1]=j[2]-j[0];s[2]=h[2]-h[0];p[0]=m[2]-m[0];p[1]=l[2]-l[0];var b=[],e=[];b[0]=p[1]*t[0]-q[1]*s[0];b[1]=p[1]*t[1]-q[1]*s[1];b[2]=p[1]*t[2]-q[1]*s[2];b=infinityrt_normalize(b);e[0]=p[0]*t[0]-q[0]*s[0];e[1]=p[0]*t[1]-q[0]*s[1];e[2]=p[0]*t[2]-q[0]*s[2];e=infinityrt_normalize(e);for(var f=0;f<3;f++){var a=this.indices[3*r+f];var n=a*3,o=a*2;if(typeof(this.tanus[n])=="undefined"){this.tanus[n]=b[0];this.tanus[n+1]=b[1];this.tanus[n+2]=b[2];this.tanvs[n]=e[0];this.tanvs[n+1]=e[1];this.tanvs[n+2]=e[2]}else{this.tanus[n]+=b[0];this.tanus[n+1]+=b[1];this.tanus[n+2]+=b[2];this.tanvs[n]+=e[0];this.tanvs[n+1]+=e[1];this.tanvs[n+2]+=e[2]}}}for(var r=0;r<this.tanus.length;r+=3){if(typeof(this.tanus[r])!=="undefined"){var d=infinityrt_normalize2(this.tanus[r],this.tanus[r+1],this.tanus[r+2]);var c=infinityrt_normalize2(this.tanvs[r],this.tanvs[r+1],this.tanvs[r+2]);this.tanus[r]=d[0];this.tanus[r+1]=d[1];this.tanus[r+2]=d[2];this.tanvs[r]=c[0];this.tanvs[r+1]=c[1];this.tanvs[r+2]=c[2]}}};infinityrt_object.prototype.CreateDummySurfTangents=function(){this.tanvs=this.tanus=this.points};infinityrt_object.prototype.loadToCard=function(a){if(this.indices.length==0){return}this.compiled=new Object();this.compiled.gl_points=a.gl.createBuffer();a.gl.bindBuffer(a.gl.ARRAY_BUFFER,this.compiled.gl_points);a.gl.bufferData(a.gl.ARRAY_BUFFER,this.points,a.gl.STATIC_DRAW);this.compiled.gl_normals=a.gl.createBuffer();a.gl.bindBuffer(a.gl.ARRAY_BUFFER,this.compiled.gl_normals);a.gl.bufferData(a.gl.ARRAY_BUFFER,this.point_normals,a.gl.STATIC_DRAW);this.compiled.gl_uvs=a.gl.createBuffer();a.gl.bindBuffer(a.gl.ARRAY_BUFFER,this.compiled.gl_uvs);a.gl.bufferData(a.gl.ARRAY_BUFFER,this.uvs,a.gl.STATIC_DRAW);if(typeof(this.tanus)!="undefined"){this.compiled.gl_tanus=a.gl.createBuffer();a.gl.bindBuffer(a.gl.ARRAY_BUFFER,this.compiled.gl_tanus);a.gl.bufferData(a.gl.ARRAY_BUFFER,new Float32Array(this.tanus),a.gl.STATIC_DRAW);this.compiled.gl_tanvs=a.gl.createBuffer();a.gl.bindBuffer(a.gl.ARRAY_BUFFER,this.compiled.gl_tanvs);a.gl.bufferData(a.gl.ARRAY_BUFFER,new Float32Array(this.tanvs),a.gl.STATIC_DRAW)}var b=(this.points.length/3)>65535;var c=b?Uint32Array:Uint16Array;this.type=b?a.gl.UNSIGNED_INT:a.gl.UNSIGNED_SHORT;this.compiled.gl_elements=a.gl.createBuffer();a.gl.bindBuffer(a.gl.ELEMENT_ARRAY_BUFFER,this.compiled.gl_elements);a.gl.bufferData(a.gl.ELEMENT_ARRAY_BUFFER,new c(this.indices),a.gl.STATIC_DRAW)};infinityrt_object.prototype.unload=function(a){if(this.compiled==null){return}var b=a.gl;b.deleteBuffer(this.compiled.gl_elements);this.compiled.gl_elements=null;if(typeof(this.tanus)!="undefined"){b.deleteBuffer(this.compiled.gl_tanus);this.compiled.gl_tanus=null;b.deleteBuffer(this.compiled.gl_tanvs);this.compiled.gl_tanvs=null}b.deleteBuffer(this.compiled.gl_uvs);this.compiled.gl_uvs=null;b.deleteBuffer(this.compiled.gl_normals);this.compiled.gl_normals=null;b.deleteBuffer(this.compiled.gl_points);this.compiled.gl_points=null};infinityrt_instance=function(a,b){this.matrix=infinityrt_identity.slice(0);this.usermatrix=infinityrt_identity.slice(0);this.children=[];this.mesh=null;this.visible=1;this._fPolygonOffset=0;this._fAlphaOffset=0;this.visibleGlow=0;this.visibleRefract=false;this._bIncludeInPlanarReflect=false;this.doublesided=false;this.walkedVisible=1;this.parent=a;var c=b._lstInstances.length;this._instancecol=[(c&255)/255,((c>>8)&255)/255,((c>>16)&255)/255,1];b._lstInstances.push(this)};infinityrt_instance.prototype.setIdentity=function(){this.usermatrix=infinityrt_identity.slice(0)};infinityrt_instance.prototype.setTranslation=function(a){this.usermatrix[12]=a[0];this.usermatrix[13]=a[1];this.usermatrix[14]=a[2]};infinityrt_instance.prototype.addTranslation=function(b){var a=MatrixTranslation(b[0],b[1],b[2]);this.usermatrix=MatrixMultiply(a,this.usermatrix)};infinityrt_instance.prototype.addRotation=function(c,b){var a=MatrixRotationAxis(c/180*M_PI,b[0],b[1],b[2]);this.usermatrix=MatrixMultiply(a,this.usermatrix)};infinityrt_instance.prototype.addScale=function(b){var a=MatrixScaling(b[0],b[1],b[2]);this.usermatrix=MatrixMultiply(a,this.usermatrix)};infinityrt_material=function(a,b){this.scene=b;this.material_id=b._Materials.length;this.name=a;this.diffusecolor=[0,0,0];this.glossycolor=[0,0,0];this.specularcolor=[0,0,0];this.bumpuserscale=1;this.basecolor=[0,0,0];this._colPlanarReflect=[0,0,0];this.fresnel=0;this.degree_0_specular=0.2;this.degree_90_specular=1;this.brdf_curve=5;this.ior_R0DG=1.3;this.ior_R0Intensity=1.3;this.ior_R0Clear=1.3;this.iorDiffuse_flip=0;this.iorIntensity_flip=0;this.iorClear_flip=0;this.opacity=1;this.invertreflectiony=1;this.mipmapbias=0;this.roughness=1;this.sharpspecularlimit=0;this.reflectionplanescale=1;this._rpInstTexId=null;this.additionalcolor=[0,0,0];this.roughnessenvmaplevels=[0,0,0];this.exposure=[1,1,1];this.glowbias=[1,1,1];this.textures=[];this.shader=[];this.highlightcompression=0;this.vignetting=0;this.gamma=2.2;this.hdribias=0;this.ColCorrAndCamResp=1;this.usespecularroughnessenvmap=true;this._requiresTangents=false;this._needsAttribsAndUniforms=true;this._transparent=false;this.amboccParamValue=[0,0,0];this._2ndref=[0,0];this.alphacolor=1;this.decalalpha=0;this.sphericalwhirl=0;this._strMaterialPtr="";this._pMaterialPtr=null;this.scene._Materials.push(this);if(typeof(a)!="undefined"){this.scene._Material_ref[a]=this}};infinityrt_material.prototype.unload=function(){this.shader=[]};infinityrt_material.prototype.setTexture=function(a,b){if(typeof(b)=="undefined"){b=0}this.textures[b]=a};infinityrt_intToFloatArray=function(a){var b=[];b[2]=(a&255)/255;b[1]=((a>>8)&255)/255;b[0]=((a>>16)&255)/255;return b};infinityrt_material.prototype.getShaderHeader=function(a){var c="";if(this._rpInstTexId!=null){for(var b=0;b<this._rpInstTexId.length;b++){c+="\n#define reflectionplanetexval"+b+" "+this._rpInstTexId[b]}}return"#define hasAlphaTexture "+((typeof(this.textures[TEXTURE_MAP_ALPHATEX])!="undefined")?1:0)+"\n#define hasDiffuseTexture "+((typeof(this.textures[TEXTURE_MAP_DIFFUSETEX])!="undefined")?1:0)+"\n#define hasSpecularEnv "+((typeof(this.textures[TEXTURE_MAP_SPECULARENV])!="undefined")?1:0)+"\n#define hasSpecularTexture "+((typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined")?1:0)+"\n#define hasGlossyEnv "+((typeof(this.textures[TEXTURE_MAP_GLOSSYENV])!="undefined")?1:0)+"\n#define hasGlossyTexture "+((typeof(this.textures[TEXTURE_MAP_GLOSSYTEX])!="undefined")?1:0)+"\n#define hasDiffuseEnv "+((typeof(this.textures[TEXTURE_MAP_DIFFUSEENV])!="undefined")?1:0)+"\n#define hasBumpTexture "+((typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined")||(this.type=="Modular")?1:0)+"\n#define hasBaseTexture "+((typeof(this.textures[TEXTURE_MAP_BASETEX])!="undefined")?1:0)+"\n#define hasRoughnessTexture "+((typeof(this.textures[TEXTURE_MAP_ROUGHNESSTEX])!="undefined")?1:0)+"\n#define hasIntensityTexture "+((typeof(this.textures[TEXTURE_MAP_GLOSSYTEX])!="undefined")?1:0)+"\n#define hasReflectionTex "+((typeof(this.textures[TEXTURE_MAP_REFLECTIONTEX])!="undefined")||(this.type=="Glass_Refracted")?1:0)+"\n#define hasAdditionalTexture "+((typeof(this.textures[TEXTURE_MAP_ADDITIONALTEX])!="undefined")?1:0)+"\n#define hasAmbOccTexture "+((typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined")?1:0)+"\n#define hasAmbOccTextureParam "+((typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined"&&this.textures[TEXTURE_MAP_AMBOCCTEX].type=="Parameterised")?1:0)+"\n#define hasTransmissionTexture "+((typeof(this.textures[TEXTURE_MAP_TRANSMISSIONTEX])!="undefined")?1:0)+"\n#define hasLightfieldTexture "+((typeof(this.textures[TEXTURE_MAP_LIGHTFIELDTEX])!="undefined")?1:0)+"\n#define hasLUTTexture "+((typeof(this.textures[TEXTURE_MAP_LUTTEX])!="undefined")?1:0)+"\n#define usespecularroughnessenvmap "+(this.usespecularroughnessenvmap?1:0)+"\n#define camresponse "+this.scene.camresponse+"\n#define encodeenvmapsinmono "+this.scene._encodeenvmapsinmono+"\n#define hdribias "+this.hdribias+"\n#define hasBrightReflections "+this.scene.hasBrightReflections+"\n#define numreflectionplanes "+this.numreflectionplanes+"\n#define has2ndRef "+((this._2ndref[0]!=0&&this._2ndref[1]!=0)?1:0)+"\n#define decalalpha "+this.decalalpha+"\n#define sphericalwhirl "+this.sphericalwhirl+c+"\n\n"};infinityrt_material.prototype.bindObject=function(a,b){var c=this.scene.gl;if(typeof(b)=="undefined"){b=0}if(typeof(a.tanus)!="undefined"){c.bindBuffer(c.ARRAY_BUFFER,a.compiled.gl_tanus);c.vertexAttribPointer(this.shader[b].uniforms.aSurfTanU,3,c.FLOAT,false,0,0);c.bindBuffer(c.ARRAY_BUFFER,a.compiled.gl_tanvs);c.vertexAttribPointer(this.shader[b].uniforms.aSurfTanV,3,c.FLOAT,false,0,0)}c.bindBuffer(c.ARRAY_BUFFER,a.compiled.gl_points);c.vertexAttribPointer(this.shader[b].uniforms.aVertexPosition,3,c.FLOAT,false,0,0);if(this.shader[b].uniforms.aTextureCoord!=-1){c.bindBuffer(c.ARRAY_BUFFER,a.compiled.gl_uvs);c.vertexAttribPointer(this.shader[b].uniforms.aTextureCoord,2,c.FLOAT,false,0,0)}if(this.shader[b].uniforms.aNormal!=-1){c.bindBuffer(c.ARRAY_BUFFER,a.compiled.gl_normals);c.vertexAttribPointer(this.shader[b].uniforms.aNormal,3,c.FLOAT,false,0,0)}c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,a.compiled.gl_elements)};infinityrt_material.prototype.compile=function(a){if(typeof(a)=="undefined"){a=0}if(typeof(this.shader[a])=="undefined"){var c=this.getShaderHeader(a);if(this.type=="Glass"){this.shader[a]=new infinityrt_shader(c+this.scene.CoreShader_vs,c+this.scene.GlassShader_fs,this.scene.gl,false)}else{if(this.type=="Ambient"){this.shader[a]=new infinityrt_shader(c+this.scene.CoreShader_vs,c+this.scene.AmbientShader_fs,this.scene.gl,false)}else{if(this.type=="Physical"){this.shader[a]=new infinityrt_shader(c+this.scene.CoreShader_vs,c+this.scene.PhysicalShader_fs,this.scene.gl,false)}else{if(this.type=="Match"){this.shader[a]=new infinityrt_shader(c+this.scene.CoreShader_vs,c+this.scene.MatchShader_fs,this.scene.gl,false)}else{if(this.type=="Glass_Refracted"){this.shader[a]=new infinityrt_shader(c+this.scene.CoreShader_vs,c+this.scene.GlassRefractedShader_fs,this.scene.gl,false)}else{if(this.type=="Modular"){var b=this.scene.ModularShader_fs;b=ReplaceAll(b,"MODULAR_FRAGMENT_HEADER_INSERT",this._fragheaderinsert);b=ReplaceAll(b,"MODULAR_FRAGMENT_INSERT",this._fraginsert);this.shader[a]=new infinityrt_shader(c+this.scene.CoreShader_vs,c+b,this.scene.gl,false)}else{this.shader[a]=new infinityrt_shader(c+this.scene.CoreShader_vs,c+this.scene.CoreShader_fs,this.scene.gl,false)}}}}}}this._needsAttribsAndUniforms=true}};infinityrt_material.prototype.InitAttribsAndUniforms=function(a){if(typeof(this.shader[a])=="undefined"){this.compile()}this.shader[a].checkCompilation()};infinityrt_material.prototype.use=function(j){if(typeof(j)=="undefined"){j=0}if(this._needsAttribsAndUniforms){this.InitAttribsAndUniforms(j);this._needsAttribsAndUniforms=false;if(this.shader[j].vertexShader!=null){this.shader[j].checkCompilation()}if(this.type=="Glass"){if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.shader[j].addInt("bumptexture");this.shader[j].addMat3("bumpUVT",this.textures[TEXTURE_MAP_BUMPTEX]._uvTransform);this.shader[j].addFloat("bumpuserscale",this.bumpuserscale);this.shader[j].addVertexArray("aSurfTanU");this.shader[j].addVertexArray("aSurfTanV")}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.shader[j].addInt("speculartexture");this.shader[j].addMat3("specularUVT",this.textures[TEXTURE_MAP_SPECULARTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_SPECULARENV])!="undefined"){this.shader[j].addInt("specularenv")}this.shader[j].addVector("specularcolor",this.specularcolor);this.shader[j].addFloat("degree_0_specular",this.degree_0_specular);this.shader[j].addFloat("degree_90_specular",this.degree_90_specular);this.shader[j].addFloat("brdf_curve",this.brdf_curve);if(typeof(this.textures[TEXTURE_MAP_BASETEX])!="undefined"){this.shader[j].addInt("basetexture");this.shader[j].addMat3("baseUVT",this.textures[TEXTURE_MAP_BASETEX]._uvTransform)}this.shader[j].addVector("basecolor",this.basecolor);this.shader[j].addVector("exposure",this.exposure);this.shader[j].addFloat("gamma",this.gamma);this.shader[j].addFloat("highlightcompression",this.highlightcompression);this.shader[j].addFloat("vignetting",this.vignetting);this.shader[j].addVector("planarreflectstrength",this._colPlanarReflect);this.shader[j].addInt("texPlanarReflect")}else{if(this.type=="Ambient"){if(typeof(this.textures[TEXTURE_MAP_DIFFUSETEX])!="undefined"){this.shader[j].addInt("diffusetexture");this.shader[j].addMat3("diffuseUVT",this.textures[TEXTURE_MAP_DIFFUSETEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined"){this.shader[j].addInt("ambocctexture");this.shader[j].addMat3("amboccUVT",this.textures[TEXTURE_MAP_AMBOCCTEX]._uvTransform)}this.shader[j].addVector("diffusecolor",this.diffusecolor);this.shader[j].addFloat("gamma",this.gamma);this.shader[j].addFloat("highlightcompression",this.highlightcompression);this.shader[j].addFloat("vignetting",this.vignetting);this.shader[j].addVector("planarreflectstrength",this._colPlanarReflect);this.shader[j].addInt("texPlanarReflect")}else{if(this.type=="Physical"){if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.shader[j].addInt("bumptexture");this.shader[j].addMat3("bumpUVT",this.textures[TEXTURE_MAP_BUMPTEX]._uvTransform);this.shader[j].addFloat("bumpuserscale",this.bumpuserscale);this.shader[j].addVertexArray("aSurfTanU");this.shader[j].addVertexArray("aSurfTanV")}if(typeof(this.textures[TEXTURE_MAP_ALPHATEX])!="undefined"){this.shader[j].addInt("alphatexture");this.shader[j].addMat3("alphaUVT",this.textures[TEXTURE_MAP_ALPHATEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_DIFFUSETEX])!="undefined"){this.shader[j].addInt("diffusetexture");this.shader[j].addMat3("diffuseUVT",this.textures[TEXTURE_MAP_DIFFUSETEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_DIFFUSEENV])!="undefined"){this.shader[j].addInt("diffuseenv")}if(typeof(this.textures[TEXTURE_MAP_ROUGHNESSTEX])!="undefined"){this.shader[j].addInt("roughnesstexture");this.shader[j].addMat3("roughnessUVT",this.textures[TEXTURE_MAP_ROUGHNESSTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_PHYSICAL1])!="undefined"){this.shader[j].addInt("channelcache1cubetexture")}if(typeof(this.textures[TEXTURE_MAP_PHYSICAL2])!="undefined"){this.shader[j].addInt("channelcache2cubetexture")}if(typeof(this.textures[TEXTURE_MAP_PHYSICAL3])!="undefined"){this.shader[j].addInt("channelcache3cubetexture")}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.shader[j].addInt("speculartexture");this.shader[j].addMat3("specularUVT",this.textures[TEXTURE_MAP_SPECULARTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_SPECULARENV])!="undefined"){this.shader[j].addInt("specularenv")}if(typeof(this.textures[TEXTURE_MAP_ADDITIONALTEX])!="undefined"){this.shader[j].addInt("additionaltexture");this.shader[j].addMat3("additionalUVT",this.textures[TEXTURE_MAP_ADDITIONALTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined"){this.shader[j].addInt("ambocctexture");this.shader[j].addMat3("amboccUVT",this.textures[TEXTURE_MAP_AMBOCCTEX]._uvTransform)}this.shader[j].addVector("additionalcolor",this.additionalcolor);this.shader[j].addFloat("roughness",this.roughness);this.shader[j].addVector("diffusecolor",this.diffusecolor);this.shader[j].addVector("intensitycolor",this.glossycolor);if(typeof(this.textures[TEXTURE_MAP_GLOSSYTEX])!="undefined"){this.shader[j].addInt("intensitytexture");this.shader[j].addMat3("intensityUVT",this.textures[TEXTURE_MAP_GLOSSYTEX]._uvTransform)}this.shader[j].addVector("specularcolor",this.specularcolor);this.shader[j].addFloat("ior_R0DG",this.ior_R0DG);this.shader[j].addFloat("ior_R0Clear",this.ior_R0Clear);this.shader[j].addFloat("invertreflectiony",this.invertreflectiony);if(typeof(this.textures[TEXTURE_MAP_REFLECTIONTEX])!="undefined"){this.shader[j].addInt("reflectionplaneTex");this.shader[j].addInt("reflectionplaneTex2");if(this.numreflectionplanes>0){this._rpInst=[]}for(var f=0;f<this.numreflectionplanes;f++){this.shader[j].addMatrix("reflectionplanematrix["+f+"]");this._rpInst[f]=this.scene.getInstanceByName(this._rpInstName[f],this.scene)}this.shader[j].addFloat("reflectionplanescale",this.reflectionplanescale)}this.shader[j].addInt("refractionmode",0);this.shader[j].addFloat("gamma",this.gamma);this.shader[j].addFloat("highlightcompression",this.highlightcompression);this.shader[j].addFloat("vignetting",this.vignetting)}else{if(this.type=="Match"){if(this.sphericalwhirl){this.shader[j].addFloat("bumpuserscale",this.bumpuserscale);this.shader[j].addVertexArray("aSurfTanU");this.shader[j].addVertexArray("aSurfTanV")}else{if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.shader[j].addInt("bumptexture");this.shader[j].addMat3("bumpUVT",this.textures[TEXTURE_MAP_BUMPTEX]._uvTransform);this.shader[j].addFloat("bumpuserscale",this.bumpuserscale);this.shader[j].addVertexArray("aSurfTanU");this.shader[j].addVertexArray("aSurfTanV")}}if(typeof(this.textures[TEXTURE_MAP_ALPHATEX])!="undefined"){this.shader[j].addInt("alphatexture");this.shader[j].addMat3("alphaUVT",this.textures[TEXTURE_MAP_ALPHATEX]._uvTransform)}this.shader[j].addFloat("alphacolor",this.alphacolor);if(typeof(this.textures[TEXTURE_MAP_DIFFUSETEX])!="undefined"){this.shader[j].addInt("diffusetexture");this.shader[j].addMat3("diffuseUVT",this.textures[TEXTURE_MAP_DIFFUSETEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_DIFFUSEENV])!="undefined"){this.shader[j].addInt("diffuseenv")}if(typeof(this.textures[TEXTURE_MAP_ROUGHNESSTEX])!="undefined"){this.shader[j].addInt("roughnesstexture");this.shader[j].addMat3("roughnessUVT",this.textures[TEXTURE_MAP_ROUGHNESSTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_PHYSICAL1])!="undefined"){this.shader[j].addInt("channelcache1cubetexture")}if(typeof(this.textures[TEXTURE_MAP_PHYSICAL2])!="undefined"){this.shader[j].addInt("channelcache2cubetexture")}if(typeof(this.textures[TEXTURE_MAP_PHYSICAL3])!="undefined"){this.shader[j].addInt("channelcache3cubetexture")}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.shader[j].addInt("speculartexture");this.shader[j].addMat3("specularUVT",this.textures[TEXTURE_MAP_SPECULARTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_SPECULARENV])!="undefined"){this.shader[j].addInt("specularenv")}this.shader[j].addFloat("roughness",this.roughness);this.shader[j].addFloat("sharpspecularlimit",this.sharpspecularlimit);this.shader[j].addVector("mapblurlevel",this.roughnessenvmaplevels);this.shader[j].addVector("diffusecolor",this.diffusecolor);this.shader[j].addVector("intensitycolor",this.glossycolor);if(typeof(this.textures[TEXTURE_MAP_GLOSSYTEX])!="undefined"){this.shader[j].addInt("intensitytexture");this.shader[j].addMat3("intensityUVT",this.textures[TEXTURE_MAP_GLOSSYTEX]._uvTransform)}this.shader[j].addVector("specularcolor",this.specularcolor);this.shader[j].addFloat("ior_R0DG",this.ior_R0DG);this.shader[j].addFloat("ior_R0Intensity",this.ior_R0Intensity);this.shader[j].addFloat("ior_R0Clear",this.ior_R0Clear);this.shader[j].addInt("ior_R0DGFlip",this.iorDiffuse_flip);this.shader[j].addInt("ior_R0IntensityFlip",this.iorIntensity_flip);this.shader[j].addInt("ior_R0ClearFlip",this.iorClear_flip);this.shader[j].addFloat("invertreflectiony",this.invertreflectiony);if(typeof(this.textures[TEXTURE_MAP_REFLECTIONTEX])!="undefined"){this.shader[j].addInt("reflectionplaneTex");this.shader[j].addInt("reflectionplaneTex2");if(this.numreflectionplanes>0){this._rpInst=[]}for(var f=0;f<this.numreflectionplanes;f++){this.shader[j].addMatrix("reflectionplanematrix["+f+"]");this._rpInst[f]=this.scene.getInstanceByName(this._rpInstName[f],this.scene)}this.shader[j].addFloat("reflectionplanescale")}if(typeof(this.textures[TEXTURE_MAP_ADDITIONALTEX])!="undefined"){this.shader[j].addInt("additionaltexture");this.shader[j].addMat3("additionalUVT",this.textures[TEXTURE_MAP_ADDITIONALTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined"){this.shader[j].addInt("ambocctexture");this.shader[j].addMat3("amboccUVT",this.textures[TEXTURE_MAP_AMBOCCTEX]._uvTransform);if(this.textures[TEXTURE_MAP_AMBOCCTEX].type=="Parameterised"){this.shader[j].addVector("amboccParamValue",this.amboccParamValue)}}if(typeof(this.textures[TEXTURE_MAP_LIGHTFIELDTEX])!="undefined"){this.shader[j].addInt("lightfieldtex");this.shader[j].addFloat2("lightfielddim");this.shader[j].addFloat2("lightfielddimbytile")}this.shader[j].addVector("additionalcolor",this.additionalcolor);this.shader[j].addInt("refractionmode",0);this.shader[j].addInt("hasIORDG",(this.ior_R0DG!=0)?1:0);this.shader[j].addInt("hasIORIntensity",(this.ior_R0Intensity!=0)?1:0);this.shader[j].addInt("hasIORClear",(this.ior_R0Clear!=0)?1:0);this.shader[j].addVector("exposure",this.exposure);this.shader[j].addFloat("gamma",this.gamma);this.shader[j].addFloat("highlightcompression",this.highlightcompression);this.shader[j].addFloat("vignetting",this.vignetting)}else{if(this.type=="Glass_Refracted"){if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.shader[j].addInt("bumptexture");this.shader[j].addMat3("bumpUVT",this.textures[TEXTURE_MAP_BUMPTEX]._uvTransform);this.shader[j].addFloat("bumpuserscale",this.bumpuserscale);this.shader[j].addVertexArray("aSurfTanU");this.shader[j].addVertexArray("aSurfTanV")}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.shader[j].addInt("speculartexture");this.shader[j].addMat3("specularUVT",this.textures[TEXTURE_MAP_SPECULARTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_SPECULARENV])!="undefined"){this.shader[j].addInt("specularenv")}this.shader[j].addVector("specularcolor",this.specularcolor);this.shader[j].addFloat("ior_R0Intensity",this.ior_R0Intensity);this.shader[j].addFloat("ior_R0Clear",this.ior_R0Clear);this.shader[j].addInt("ior_R0IntensityFlip",this.iorIntensity_flip);this.shader[j].addInt("ior_R0ClearFlip",this.iorClear_flip);this.shader[j].addFloat("brdf_curve",this.brdf_curve);if(typeof(this.textures[TEXTURE_MAP_BASETEX])!="undefined"){this.shader[j].addInt("basetexture");this.shader[j].addMat3("baseUVT",this.textures[TEXTURE_MAP_BASETEX]._uvTransform)}this.shader[j].addVector("basecolor",this.basecolor);this.shader[j].addInt("refractiontexture");this.shader[j].addFloat("refractscale",this.refractscale);this.shader[j].addFloat("refractthinness",this.refractthinness);this.shader[j].addVector("camx");this.shader[j].addVector("camy");this.shader[j].addVector("camz");if(typeof(this.textures[TEXTURE_MAP_TRANSMISSIONTEX])!="undefined"){this.shader[j].addInt("transmissiontexture");this.shader[j].addMat3("transmissionUVT",this.textures[TEXTURE_MAP_TRANSMISSIONTEX]._uvTransform)}this.shader[j].addVector("transmissioncolor",this.transmissioncolor);this.shader[j].addInt("hasIORIntensity",(this.ior_R0Intensity!=0)?1:0);this.shader[j].addInt("hasIORClear",(this.ior_R0Clear!=0)?1:0);this.shader[j].addVector("exposure",this.exposure);if(this._2ndref[0]!=0&&this._2ndref[1]!=0){this.shader[j].addFloat2("v2ndRef",this._2ndref)}this.shader[j].addFloat("gamma",this.gamma);this.shader[j].addFloat("highlightcompression",this.highlightcompression);this.shader[j].addFloat("vignetting",this.vignetting)}else{if(this.type=="Modular"){this.shader[j].addVertexArray("aSurfTanU");this.shader[j].addVertexArray("aSurfTanV");for(var i=0;i<this._unis.length;i++){var a=this._unis[i];if(a.type=="float"){this.shader[j].addFloat(a.name,a.val)}else{if(a.type=="int"){this.shader[j].addInt(a.name,a.val)}else{if(a.type=="vec3"){this.shader[j].addVector(a.name,a.val.split(","))}else{if(a.type=="vec4"){this.shader[j].addVector4(a.name,a.val.split(","))}else{if(a.type=="sampler"){this.shader[j].addInt(a.name)}else{if(a.type=="mat3"){this.shader[j].addMat3(a.name,a.val.split(","))}else{console.log("Modular Shader Uniform type unknown '"+a.type+"'")}}}}}}}}else{if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.shader[j].addInt("bumptexture");this.shader[j].addMat3("bumpUVT",this.textures[TEXTURE_MAP_BUMPTEX]._uvTransform);this.shader[j].addFloat("bumpuserscale",this.bumpuserscale);this.shader[j].addVertexArray("aSurfTanU");this.shader[j].addVertexArray("aSurfTanV")}if(typeof(this.textures[TEXTURE_MAP_ALPHATEX])!="undefined"){this.shader[j].addInt("alphatexture");this.shader[j].addMat3("alphaUVT",this.textures[TEXTURE_MAP_ALPHATEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_DIFFUSETEX])!="undefined"){this.shader[j].addInt("diffusetexture");this.shader[j].addMat3("diffuseUVT",this.textures[TEXTURE_MAP_DIFFUSETEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_DIFFUSEENV])!="undefined"){this.shader[j].addInt("diffuseenv")}if(typeof(this.textures[TEXTURE_MAP_GLOSSYTEX])!="undefined"){this.shader[j].addInt("glossytexture");this.shader[j].addMat3("glossyUVT",this.textures[TEXTURE_MAP_GLOSSYTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_GLOSSYENV])!="undefined"){this.shader[j].addInt("glossyenv")}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.shader[j].addInt("speculartexture");this.shader[j].addMat3("specularUVT",this.textures[TEXTURE_MAP_SPECULARTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_SPECULARENV])!="undefined"){this.shader[j].addInt("specularenv")}if(typeof(this.textures[TEXTURE_MAP_ADDITIONALTEX])!="undefined"){this.shader[j].addInt("additionaltexture");this.shader[j].addMat3("additionalUVT",this.textures[TEXTURE_MAP_ADDITIONALTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined"){this.shader[j].addInt("ambocctexture");this.shader[j].addMat3("amboccUVT",this.textures[TEXTURE_MAP_AMBOCCTEX]._uvTransform)}this.shader[j].addVector("additionalcolor",this.additionalcolor);this.shader[j].addVector("diffusecolor",this.diffusecolor);this.shader[j].addVector("glossycolor",this.glossycolor);this.shader[j].addVector("specularcolor",this.specularcolor);this.shader[j].addInt("fresnel",this.fresnel);this.shader[j].addFloat("degree_0_specular",this.degree_0_specular);this.shader[j].addFloat("degree_90_specular",this.degree_90_specular);this.shader[j].addFloat("brdf_curve",this.brdf_curve);this.shader[j].addFloat("invertreflectiony",this.invertreflectiony);this.shader[j].addInt("refractionmode",0);this.shader[j].addFloat("gamma",this.gamma);this.shader[j].addFloat("highlightcompression",this.highlightcompression);this.shader[j].addFloat("vignetting",this.vignetting)}}}}}}this.shader[j].addVector("uCamPos");this.shader[j].addVertexArray("aVertexPosition");this.shader[j].addVertexArray("aNormal");this.shader[j].addMatrix("uMVPMatrix");this.shader[j].addMatrix("uOMatrix");this.shader[j].addUVArray("aTextureCoord");this.shader[j].addFloat2("jitter");this.shader[j].addFloat2("viewportsize");this.shader[j].addInt("ColCorrAndCamResp",this.ColCorrAndCamResp);this.shader[j].addFloat("cc_brightness",this.scene._cc_brightness);this.shader[j].addFloat("cc_contrast",this.scene._cc_contrast);this.shader[j].addFloat("cc_saturation",this.scene._cc_saturation);this.shader[j].addVector("cc_tint",this.scene._cc_tint);this.shader[j].addFloat("mipmapbias",this.mipmapbias);if(typeof(this.textures[TEXTURE_MAP_LUTTEX])!="undefined"){this.shader[j].addInt("lutTex")}this.shader[j].init()}this.shader[j].use();this.activeTexUnits=[];this.nTexUnit=0;if(this.type=="Glass"){if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_BUMPTEX,"bumptexture")}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_SPECULARTEX,"speculartexture")}if(typeof(this.textures[TEXTURE_MAP_SPECULARENV])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_SPECULARENV,"specularenv")}if(typeof(this.textures[TEXTURE_MAP_BASETEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_BASETEX,"basetexture")}if(this.scene._renderingGlowPass){this.shader[j].setVector("exposure",this.glowbias)}else{this.shader[j].setVector("exposure",this.exposure)}if(this.scene._fboPlanarReflect!=null){this.ApplyPlanarReflectTex(j)}}else{if(this.type=="Ambient"){if(typeof(this.textures[TEXTURE_MAP_DIFFUSETEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_DIFFUSETEX,"diffusetexture")}if(typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_AMBOCCTEX,"ambocctexture")}if(this.scene._fboPlanarReflect!=null){this.ApplyPlanarReflectTex(j)}}else{if(this.type=="Physical"){if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_BUMPTEX,"bumptexture")}if(typeof(this.textures[TEXTURE_MAP_ALPHATEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_ALPHATEX,"alphatexture")}if(typeof(this.textures[TEXTURE_MAP_DIFFUSETEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_DIFFUSETEX,"diffusetexture")}if(typeof(this.textures[TEXTURE_MAP_DIFFUSEENV])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_DIFFUSEENV,"diffuseenv")}if(typeof(this.textures[TEXTURE_MAP_ROUGHNESSTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_ROUGHNESSTEX,"roughnesstexture")}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_SPECULARTEX,"speculartexture")}if(typeof(this.textures[TEXTURE_MAP_SPECULARENV])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_SPECULARENV,"specularenv")}if(typeof(this.textures[TEXTURE_MAP_PHYSICAL1])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_PHYSICAL1,"channelcache1cubetexture")}if(typeof(this.textures[TEXTURE_MAP_PHYSICAL2])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_PHYSICAL2,"channelcache2cubetexture")}if(typeof(this.textures[TEXTURE_MAP_PHYSICAL3])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_PHYSICAL3,"channelcache3cubetexture")}if(typeof(this.textures[TEXTURE_MAP_ADDITIONALTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_ADDITIONALTEX,"additionaltexture")}if(typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_AMBOCCTEX,"ambocctexture")}if(typeof(this.textures[TEXTURE_MAP_GLOSSYTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_GLOSSYTEX,"intensitytexture")}if(typeof(this.textures[TEXTURE_MAP_REFLECTIONTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_REFLECTIONTEX,"reflectionplaneTex");if(typeof(this.textures[TEXTURE_MAP_REFLECTIONTEX2])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_REFLECTIONTEX2,"reflectionplaneTex2")}for(var f=0;f<this.numreflectionplanes;f++){var d=MatrixMultiply(this._lstrpmatrix[f],this._rpInst[f].ltog_matrix);this.shader[j].setMatrix("reflectionplanematrix["+f+"]",d)}}}else{if(this.type=="Match"){if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_BUMPTEX,"bumptexture")}if(typeof(this.textures[TEXTURE_MAP_ALPHATEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_ALPHATEX,"alphatexture")}if(typeof(this.textures[TEXTURE_MAP_DIFFUSETEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_DIFFUSETEX,"diffusetexture")}if(typeof(this.textures[TEXTURE_MAP_DIFFUSEENV])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_DIFFUSEENV,"diffuseenv")}if(typeof(this.textures[TEXTURE_MAP_ROUGHNESSTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_ROUGHNESSTEX,"roughnesstexture")}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_SPECULARTEX,"speculartexture")}if(typeof(this.textures[TEXTURE_MAP_SPECULARENV])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_SPECULARENV,"specularenv")}if(typeof(this.textures[TEXTURE_MAP_PHYSICAL1])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_PHYSICAL1,"channelcache1cubetexture")}if(typeof(this.textures[TEXTURE_MAP_PHYSICAL2])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_PHYSICAL2,"channelcache2cubetexture")}if(typeof(this.textures[TEXTURE_MAP_PHYSICAL3])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_PHYSICAL3,"channelcache3cubetexture")}if(typeof(this.textures[TEXTURE_MAP_GLOSSYTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_GLOSSYTEX,"intensitytexture")}if(typeof(this.textures[TEXTURE_MAP_REFLECTIONTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_REFLECTIONTEX,"reflectionplaneTex");this.shader[j].setFloat("reflectionplanescale",this.reflectionplanescale);for(var f=0;f<this.numreflectionplanes;f++){var d=MatrixMultiply(this._lstrpmatrix[f],this._rpInst[f].ltog_matrix);this.shader[j].setMatrix("reflectionplanematrix["+f+"]",d)}}if(typeof(this.textures[TEXTURE_MAP_REFLECTIONTEX2])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_REFLECTIONTEX2,"reflectionplaneTex2")}if(typeof(this.textures[TEXTURE_MAP_ADDITIONALTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_ADDITIONALTEX,"additionaltexture")}if(typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_AMBOCCTEX,"ambocctexture");if(this.textures[TEXTURE_MAP_AMBOCCTEX].type=="Parameterised"){this.shader[j].addVector("amboccParamValue",this.amboccParamValue)}}if(typeof(this.textures[TEXTURE_MAP_LIGHTFIELDTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_LIGHTFIELDTEX,"lightfieldtex");var h=this.textures[TEXTURE_MAP_LIGHTFIELDTEX];var b=16;if(h._size[0]>h._size[1]){var c=Math.ceil(b*(h._size[1]/h._size[0]));this.shader[j].setFloat2("lightfielddim",[b,c]);this.shader[j].setFloat2("lightfielddimbytile",[b-1,c-1])}else{var e=Math.ceil(b*(h._size[0]/h._size[1]));this.shader[j].setFloat2("lightfielddim",[e,b]);this.shader[j].setFloat2("lightfielddimbytile",[e-1,b-1])}}if(this.scene._renderingGlowPass){this.shader[j].setVector("exposure",this.glowbias)}else{this.shader[j].setVector("exposure",this.exposure)}}else{if(this.type=="Glass_Refracted"){if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_BUMPTEX,"bumptexture")}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_SPECULARTEX,"speculartexture")}if(typeof(this.textures[TEXTURE_MAP_SPECULARENV])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_SPECULARENV,"specularenv")}if(typeof(this.textures[TEXTURE_MAP_BASETEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_BASETEX,"basetexture")}if(typeof(this.textures[TEXTURE_MAP_TRANSMISSIONTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_TRANSMISSIONTEX,"transmissiontexture")}if(this.scene._renderingGlowPass){this.shader[j].setVector("exposure",this.glowbias)}else{this.shader[j].setVector("exposure",this.exposure)}}else{if(this.type=="Modular"){this.shader[j].setFloat2("rendersize",[this.scene.viewwidth,this.scene.viewheight]);for(var i=0;i<this._unis.length;i++){var a=this._unis[i];if(a.type=="sampler"){var g=this.activeTexUnits[a.val];if(typeof(g)=="undefined"){g=this.activeTexUnits[a.val]=this.nTexUnit;this.nTexUnit++}this.scene._Texture_ref[a.val].use(this.scene.gl.TEXTURE0+g);this.shader[j].setInt(a.name,g)}}}else{if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_BUMPTEX,"bumptexture")}if(typeof(this.textures[TEXTURE_MAP_ALPHATEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_ALPHATEX,"alphatexture")}if(typeof(this.textures[TEXTURE_MAP_DIFFUSETEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_DIFFUSETEX,"diffusetexture")}if(typeof(this.textures[TEXTURE_MAP_DIFFUSEENV])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_DIFFUSEENV,"diffuseenv")}if(typeof(this.textures[TEXTURE_MAP_GLOSSYTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_GLOSSYTEX,"glossytexture")}if(typeof(this.textures[TEXTURE_MAP_GLOSSYENV])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_GLOSSYENV,"glossyenv")}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_SPECULARTEX,"speculartexture")}if(typeof(this.textures[TEXTURE_MAP_SPECULARENV])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_SPECULARENV,"specularenv")}if(typeof(this.textures[TEXTURE_MAP_ADDITIONALTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_ADDITIONALTEX,"additionaltexture")}if(typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_AMBOCCTEX,"ambocctexture")}}}}}}}if(typeof(this.textures[TEXTURE_MAP_LUTTEX])!="undefined"){this.ApplyTexToActiveUnit(j,TEXTURE_MAP_LUTTEX,"lutTex")}};infinityrt_material.prototype.ApplyPlanarReflectTex=function(a){var b=this.activeTexUnits.texPlanarReflect;if(typeof(b)=="undefined"){b=this.activeTexUnits.texPlanarReflect=this.nTexUnit;this.nTexUnit++}var c=this.scene.gl;c.activeTexture(c.TEXTURE0+b);c.bindTexture(c.TEXTURE_2D,this.scene._fboPlanarReflect._nFBOTex);this.shader[a].setInt("texPlanarReflect",b)};infinityrt_material.prototype.NeutralMaterial_ToneMapSettings=function(a){this.shader[0].setInt("ColCorrAndCamResp",(a)?0:this.ColCorrAndCamResp)};infinityrt_material.prototype.UpdateUniforms=function(a){if(typeof(a)=="undefined"){a=0}this.shader[a].use();if(this.type=="Glass"){if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.shader[a].setMat3("bumpUVT",this.textures[TEXTURE_MAP_BUMPTEX]._uvTransform);this.shader[a].setFloat("bumpuserscale",this.bumpuserscale)}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.shader[a].setMat3("specularUVT",this.textures[TEXTURE_MAP_SPECULARTEX]._uvTransform)}this.shader[a].setVector("specularcolor",this.specularcolor);this.shader[a].setFloat("degree_0_specular",this.degree_0_specular);this.shader[a].setFloat("degree_90_specular",this.degree_90_specular);this.shader[a].setFloat("brdf_curve",this.brdf_curve);if(typeof(this.textures[TEXTURE_MAP_BASETEX])!="undefined"){this.shader[a].setMat3("baseUVT",this.textures[TEXTURE_MAP_BASETEX]._uvTransform)}this.shader[a].setVector("basecolor",this.basecolor);this.shader[a].setVector("exposure",this.exposure)}else{if(this.type=="Ambient"){if(typeof(this.textures[TEXTURE_MAP_DIFFUSETEX])!="undefined"){this.shader[a].setMat3("diffuseUVT",this.textures[TEXTURE_MAP_DIFFUSETEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined"){this.shader[a].setMat3("amboccUVT",this.textures[TEXTURE_MAP_AMBOCCTEX]._uvTransform)}this.shader[a].setVector("diffusecolor",this.diffusecolor);this.shader[a].setInt("ColCorrAndCamResp",this.ColCorrAndCamResp)}else{if(this.type=="Physical"){if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.shader[a].setMat3("bumpUVT",this.textures[TEXTURE_MAP_BUMPTEX]._uvTransform);this.shader[a].setFloat("bumpuserscale",this.bumpuserscale)}if(typeof(this.textures[TEXTURE_MAP_ALPHATEX])!="undefined"){this.shader[a].setMat3("alphaUVT",this.textures[TEXTURE_MAP_ALPHATEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_DIFFUSETEX])!="undefined"){this.shader[a].setMat3("diffuseUVT",this.textures[TEXTURE_MAP_DIFFUSETEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_ROUGHNESSTEX])!="undefined"){this.shader[a].setMat3("roughnessUVT",this.textures[TEXTURE_MAP_ROUGHNESSTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.shader[a].setMat3("specularUVT",this.textures[TEXTURE_MAP_SPECULARTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_ADDITIONALTEX])!="undefined"){this.shader[a].setMat3("additionalUVT",this.textures[TEXTURE_MAP_ADDITIONALTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined"){this.shader[a].setMat3("amboccUVT",this.textures[TEXTURE_MAP_AMBOCCTEX]._uvTransform)}this.shader[a].setVector("additionalcolor",this.additionalcolor);this.shader[a].setFloat("roughness",this.roughness);this.shader[a].setVector("diffusecolor",this.diffusecolor);this.shader[a].setVector("intensitycolor",this.glossycolor);if(typeof(this.textures[TEXTURE_MAP_GLOSSYTEX])!="undefined"){this.shader[a].setMat3("intensityUVT",this.textures[TEXTURE_MAP_GLOSSYTEX]._uvTransform)}this.shader[a].setVector("specularcolor",this.specularcolor);this.shader[a].setFloat("ior_R0DG",this.ior_R0DG);this.shader[a].setFloat("ior_R0Clear",this.ior_R0Clear);this.shader[a].setFloat("invertreflectiony",this.invertreflectiony);this.shader[a].setInt("refractionmode",0)}else{if(this.type=="Match"){if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.shader[a].setMat3("bumpUVT",this.textures[TEXTURE_MAP_BUMPTEX]._uvTransform);this.shader[a].setFloat("bumpuserscale",this.bumpuserscale)}if(typeof(this.textures[TEXTURE_MAP_ALPHATEX])!="undefined"){this.shader[a].setMat3("alphaUVT",this.textures[TEXTURE_MAP_ALPHATEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_DIFFUSETEX])!="undefined"){this.shader[a].setMat3("diffuseUVT",this.textures[TEXTURE_MAP_DIFFUSETEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_ROUGHNESSTEX])!="undefined"){this.shader[a].setMat3("roughnessUVT",this.textures[TEXTURE_MAP_ROUGHNESSTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.shader[a].setMat3("specularUVT",this.textures[TEXTURE_MAP_SPECULARTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_SPECULARENV])!="undefined"){this.shader[a].setInt("specularenv")}this.shader[a].setFloat("roughness",this.roughness);this.shader[a].setFloat("sharpspecularlimit",this.sharpspecularlimit);this.shader[a].setVector("mapblurlevel",this.roughnessenvmaplevels);this.shader[a].setVector("diffusecolor",this.diffusecolor);this.shader[a].setVector("intensitycolor",this.glossycolor);if(typeof(this.textures[TEXTURE_MAP_GLOSSYTEX])!="undefined"){this.shader[a].setMat3("intensityUVT",this.textures[TEXTURE_MAP_GLOSSYTEX]._uvTransform)}this.shader[a].setVector("specularcolor",this.specularcolor);this.shader[a].setFloat("ior_R0DG",this.ior_R0DG);this.shader[a].setFloat("ior_R0Intensity",this.ior_R0Intensity);this.shader[a].setFloat("ior_R0Clear",this.ior_R0Clear);this.shader[a].setInt("ior_R0DGFlip",this.iorDiffuse_flip);this.shader[a].setInt("ior_R0IntensityFlip",this.iorIntensity_flip);this.shader[a].setInt("ior_R0ClearFlip",this.iorClear_flip);this.shader[a].setFloat("invertreflectiony",this.invertreflectiony);if(typeof(this.textures[TEXTURE_MAP_ADDITIONALTEX])!="undefined"){this.shader[a].setMat3("additionalUVT",this.textures[TEXTURE_MAP_ADDITIONALTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined"){this.shader[a].setMat3("amboccUVT",this.textures[TEXTURE_MAP_AMBOCCTEX]._uvTransform);if(this.textures[TEXTURE_MAP_AMBOCCTEX].type=="Parameterised"){this.shader[a].setVector("amboccParamValue",this.amboccParamValue)}}this.shader[a].setVector("additionalcolor",this.additionalcolor);this.shader[a].setInt("refractionmode",0);this.shader[a].setInt("hasIORDG",(this.ior_R0DG!=0)?1:0);this.shader[a].setInt("hasIORIntensity",(this.ior_R0Intensity!=0)?1:0);this.shader[a].setInt("hasIORClear",(this.ior_R0Clear!=0)?1:0);this.shader[a].setVector("exposure",this.exposure)}else{if(this.type=="Glass_Refracted"){if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.shader[a].setMat3("bumpUVT",this.textures[TEXTURE_MAP_BUMPTEX]._uvTransform);this.shader[a].setFloat("bumpuserscale",this.bumpuserscale)}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.shader[a].setMat3("specularUVT",this.textures[TEXTURE_MAP_SPECULARTEX]._uvTransform)}this.shader[a].setVector("specularcolor",this.specularcolor);this.shader[a].setFloat("ior_R0Intensity",this.ior_R0Intensity);this.shader[a].setFloat("ior_R0Clear",this.ior_R0Clear);this.shader[a].setInt("ior_R0IntensityFlip",this.iorIntensity_flip);this.shader[a].setInt("ior_R0ClearFlip",this.iorClear_flip);this.shader[a].setFloat("brdf_curve",this.brdf_curve);if(typeof(this.textures[TEXTURE_MAP_BASETEX])!="undefined"){this.shader[a].setMat3("baseUVT",this.textures[TEXTURE_MAP_BASETEX]._uvTransform)}this.shader[a].setVector("basecolor",this.basecolor);this.shader[a].setFloat("refractscale",this.refractscale);this.shader[a].setFloat("refractthinness",this.refractthinness);if(typeof(this.textures[TEXTURE_MAP_TRANSMISSIONTEX])!="undefined"){this.shader[a].setMat3("transmissionUVT",this.textures[TEXTURE_MAP_TRANSMISSIONTEX]._uvTransform)}this.shader[a].setVector("transmissioncolor",this.transmissioncolor);this.shader[a].setInt("hasIORIntensity",(this.ior_R0Intensity!=0)?1:0);this.shader[a].setInt("hasIORClear",(this.ior_R0Clear!=0)?1:0);this.shader[a].setVector("exposure",this.exposure);if(this._2ndref[0]!=0&&this._2ndref[1]!=0){this.shader[a].setFloat2("v2ndRef",this._2ndref)}}else{if(typeof(this.textures[TEXTURE_MAP_BUMPTEX])!="undefined"){this.shader[a].setMat3("bumpUVT",this.textures[TEXTURE_MAP_BUMPTEX]._uvTransform);this.shader[a].setFloat("bumpuserscale",this.bumpuserscale)}if(typeof(this.textures[TEXTURE_MAP_ALPHATEX])!="undefined"){this.shader[a].setMat3("alphaUVT",this.textures[TEXTURE_MAP_ALPHATEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_DIFFUSETEX])!="undefined"){this.shader[a].setMat3("diffuseUVT",this.textures[TEXTURE_MAP_DIFFUSETEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_GLOSSYTEX])!="undefined"){this.shader[a].setMat3("glossyUVT",this.textures[TEXTURE_MAP_GLOSSYTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_SPECULARTEX])!="undefined"){this.shader[a].setMat3("specularUVT",this.textures[TEXTURE_MAP_SPECULARTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_ADDITIONALTEX])!="undefined"){this.shader[a].setMat3("additionalUVT",this.textures[TEXTURE_MAP_ADDITIONALTEX]._uvTransform)}if(typeof(this.textures[TEXTURE_MAP_AMBOCCTEX])!="undefined"){this.shader[a].setMat3("amboccUVT",this.textures[TEXTURE_MAP_AMBOCCTEX]._uvTransform)}this.shader[a].setVector("additionalcolor",this.additionalcolor);this.shader[a].setVector("diffusecolor",this.diffusecolor);this.shader[a].setVector("glossycolor",this.glossycolor);this.shader[a].setVector("specularcolor",this.specularcolor);this.shader[a].setInt("fresnel",this.fresnel);this.shader[a].setFloat("degree_0_specular",this.degree_0_specular);this.shader[a].setFloat("degree_90_specular",this.degree_90_specular);this.shader[a].setFloat("brdf_curve",this.brdf_curve);this.shader[a].setFloat("invertreflectiony",this.invertreflectiony);this.shader[a].setInt("refractionmode",0)}}}}}this.shader[a].setFloat("highlightcompression",this.highlightcompression);this.shader[a].setFloat("gamma",this.gamma);this.shader[a].setFloat("mipmapbias",this.mipmapbias)};infinityrt_material.prototype.ApplyTexToActiveUnit=function(b,a,e){var c=this.textures[a].name;var d=this.activeTexUnits[c];if(typeof(d)=="undefined"){d=this.activeTexUnits[c]=this.nTexUnit;this.nTexUnit++}this.textures[a].use(this.scene.gl.TEXTURE0+d);this.shader[b].setInt(e,d)};infinityrt_shader=function(b,c,a,d){if(typeof(d)=="undefined"){d=true}this.gl=a;this.attribs=[];this.uniforms=[];this.uniform_type=[];if(b.indexOf("\n")!=-1){this.vertexShader=infinityrt_compileShader(this.gl,b,"x-shader/x-vertex",d)}else{this.vertexShader=infinityrt_getShader(this.gl,b,d)}if(c.indexOf("\n")!=-1){this.fragmentShader=infinityrt_compileShader(this.gl,c,"x-shader/x-fragment",d)}else{this.fragmentShader=infinityrt_getShader(this.gl,c,d)}this.shader=this.gl.createProgram();this.gl.attachShader(this.shader,this.vertexShader);this.gl.attachShader(this.shader,this.fragmentShader);this.gl.linkProgram(this.shader);if(d){this.checkCompilation()}};infinityrt_shader.prototype.checkCompilation=function(){var a=true;if(!this.gl.getProgramParameter(this.shader,this.gl.LINK_STATUS)){a=false;if(this.vertexShader&&!this.gl.getShaderParameter(this.vertexShader,this.gl.COMPILE_STATUS)){console.log("Vertex shader compile error:",this.gl.getShaderInfoLog(this.vertexShader))}else{if(this.fragmentShader&&!this.gl.getShaderParameter(this.fragmentShader,this.gl.COMPILE_STATUS)){console.log("Fragment shader compile error:",this.gl.getShaderInfoLog(this.fragmentShader))}else{console.log("***Could not initialise shader "+this.gl.getProgramInfoLog(this.shader))}}}this.gl.deleteShader(this.vertexShader);this.gl.deleteShader(this.fragmentShader);this.vertexShader=null;return a};infinityrt_shader.prototype.addMatrix=function(a){this.use();this.uniforms[a]=this.gl.getUniformLocation(this.shader,a);this.uniform_type[a]=UNIFORM_TYPE_MATRIX};infinityrt_shader.prototype.addMat3=function(a,b){this.use();this.uniforms[a]=this.gl.getUniformLocation(this.shader,a);this.uniform_type[a]=UNIFORM_TYPE_MAT3;if(typeof(b)!="undefined"){this.setMat3(a,b)}};infinityrt_shader.prototype.addVector=function(a,b){this.use();this.uniforms[a]=this.gl.getUniformLocation(this.shader,a);this.uniform_type[a]=UNIFORM_TYPE_VECTOR;if(typeof(b)!="undefined"){this.setVector(a,b)}};infinityrt_shader.prototype.addVector4=function(a,b){this.use();this.uniforms[a]=this.gl.getUniformLocation(this.shader,a);this.uniform_type[a]=UNIFORM_TYPE_VECTOR4;if(typeof(b)!="undefined"){this.setVector4(a,b)}};infinityrt_shader.prototype.addFloat=function(a,b){this.use();this.uniforms[a]=this.gl.getUniformLocation(this.shader,a);this.uniform_type[a]=UNIFORM_TYPE_FLOAT;if(typeof(b)!="undefined"){this.setFloat(a,b)}};infinityrt_shader.prototype.addFloat2=function(a,b){this.use();this.uniforms[a]=this.gl.getUniformLocation(this.shader,a);this.uniform_type[a]=UNIFORM_TYPE_FLOAT2;if(typeof(b)!="undefined"){this.setFloat2(a,b)}};infinityrt_shader.prototype.addVertexArray=function(a){this.use();this.attribs[a]=this.uniforms[a]=this.gl.getAttribLocation(this.shader,a);this.uniform_type[a]=UNIFORM_TYPE_ARRAY_VERTEX};infinityrt_shader.prototype.addUVArray=function(a){this.use();this.attribs[a]=this.uniforms[a]=this.gl.getAttribLocation(this.shader,a);this.uniform_type[a]=UNIFORM_TYPE_ARRAY_UV};infinityrt_shader.prototype.addInt=function(b,c){this.use();var a=this.gl.getUniformLocation(this.shader,b);if(a==null){return}this.uniforms[b]=a;this.uniform_type[b]=UNIFORM_TYPE_INT;if(typeof(c)!="undefined"){this.setInt(b,c)}};infinityrt_shader.prototype.use=function(){this.gl.useProgram(this.shader)};infinityrt_shader.prototype.init=function(a){if(typeof(a)=="undefined"){a=true}for(var b in this.uniforms){switch(this.uniform_type[b]){case UNIFORM_TYPE_MATRIX:case UNIFORM_TYPE_MAT3:break;case UNIFORM_TYPE_VECTOR:case UNIFORM_TYPE_VECTOR4:break;case UNIFORM_TYPE_FLOAT:case UNIFORM_TYPE_FLOAT2:break;case UNIFORM_TYPE_ARRAY_VERTEX:case UNIFORM_TYPE_ARRAY_UV:case UNIFORM_TYPE_ARRAY_FLOAT:if(this.uniforms[b]!=-1){if(a){this.gl.enableVertexAttribArray(this.uniforms[b])}else{this.gl.disableVertexAttribArray(this.uniforms[b])}}break;default:break}}};infinityrt_shader.prototype.attribinit=function(a,c){for(var b in this.attribs){if(this.uniforms[b]!=-1){if(a){this.gl.enableVertexAttribArray(this.uniforms[b])}else{this.gl.disableVertexAttribArray(this.uniforms[b])}}}};infinityrt_shader.prototype.setMat3=function(b,a){this.gl.uniformMatrix3fv(this.uniforms[b],false,a)};infinityrt_shader.prototype.setMatrix=function(b,a){this.gl.uniformMatrix4fv(this.uniforms[b],false,a)};infinityrt_shader.prototype.setInt=function(a,b){this.gl.uniform1i(this.uniforms[a],b)};infinityrt_shader.prototype.setFloat=function(a,b){this.gl.uniform1f(this.uniforms[a],b)};infinityrt_shader.prototype.setFloat2=function(a,b){this.gl.uniform2f(this.uniforms[a],b[0],b[1])};infinityrt_shader.prototype.setVector=function(a,b){this.gl.uniform3fv(this.uniforms[a],b)};infinityrt_shader.prototype.setVector4=function(a,b){this.gl.uniform4fv(this.uniforms[a],b)};infinityrt_texture_lzma=function(a){this.data=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);this.offset=0;this.len=this.data.length};infinityrt_texture_lzma.prototype.writeByte=function(a){this.data[this.offset]=a;this.offset++};infinityrt_texture=function(c,h,g,b,f){try{this.tex_id=f._Textures.length;this.name=c;this.type=h;this._scene=f;this.loaded=false;this._wrap="clamp";this.mipmap=false;this._ismonochrome=false;this.lvl=1;this.blksd=0;this._uvTransform=[1,0,0,0,1,0,0,0,1];this._img_path=g;if(b!=null){this._lstFiles=[];for(var a=0;a<b.length;a++){this._lstFiles.push(b[a].firstChild.nodeValue);if(!f._bSupportsWebP){this._lstFiles[a]=ReplaceAll(this._lstFiles[a],".webp",".png")}}}else{this._lstFiles=null}this._decoded=false;this._images=[];this._downloaddata=null;this.filtering=this._scene.gl.LINEAR;this._lvlfilenames=[];f._Textures[this.tex_id]=null;f._Texture_ref[c]=this;f._TextureObjs.push(this)}catch(d){console.log("***ERROR: Loading Texture '"+c+"' "+d)}};infinityrt_texture.prototype.unloadGPU=function(){this._scene.gl.deleteTexture(this._scene._Textures[this.tex_id]);this._scene._Textures[this.tex_id]=null;this.loaded=false};infinityrt_texture.prototype.unload=function(){this.unloadGPU();this._scene._Textures[this.tex_id]=null;this._images=[]};var g_frg_Scr="#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\nuniform sampler2D colorTexture;\nuniform vec2 texSize;uniform sampler2D scrtable;\nvarying vec2 vUv;void main() {int codesize=16;int cblocksize=128;ivec2 p = ivec2(vUv*texSize);ivec2 tile=p/cblocksize;ivec2 cb=ivec2(mod(vec2(p), float(cblocksize)));ivec2 jb=cb/8;ivec2 jo=ivec2(mod(vec2(cb),8.0));int scrindex=int(255.0*texture2D(scrtable, vec2(float(jb.x+(jb.y*codesize))/255.0, 0.0)).r);ivec2 scrjb=ivec2(mod(float(scrindex),float(codesize)), float(scrindex/codesize));ivec2 scrcb=scrjb*8;ivec2 source=jo+scrcb+(tile*cblocksize);vec2 sourceuv = vec2(source)/texSize;gl_FragColor = vec4(sourceuv, 0.0, 1.0 );gl_FragColor = texture2D( colorTexture, sourceuv );}";infinityrt_texture.prototype.use=function(k){var v=this._scene.gl;v.activeTexture(k);if(!this.loaded){this._scene._Textures[this.tex_id]=v.createTexture();this.loaded=true;this.lvl=1;try{if(this.type=="FileCube"){v.pixelStorei(v.UNPACK_FLIP_Y_WEBGL,false);v.bindTexture(v.TEXTURE_CUBE_MAP,this._scene._Textures[this.tex_id]);v.texParameteri(v.TEXTURE_CUBE_MAP,v.TEXTURE_MAG_FILTER,this.filtering);v.texParameteri(v.TEXTURE_CUBE_MAP,v.TEXTURE_MIN_FILTER,this.filtering);v.texParameteri(v.TEXTURE_CUBE_MAP,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE);v.texParameteri(v.TEXTURE_CUBE_MAP,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE);v.texImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X,0,v.RGBA,v.RGBA,v.UNSIGNED_BYTE,this._images[1]);v.texImage2D(v.TEXTURE_CUBE_MAP_NEGATIVE_X,0,v.RGBA,v.RGBA,v.UNSIGNED_BYTE,this._images[0]);v.texImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_Y,0,v.RGBA,v.RGBA,v.UNSIGNED_BYTE,this._images[3]);v.texImage2D(v.TEXTURE_CUBE_MAP_NEGATIVE_Y,0,v.RGBA,v.RGBA,v.UNSIGNED_BYTE,this._images[2]);v.texImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_Z,0,v.RGBA,v.RGBA,v.UNSIGNED_BYTE,this._images[5]);v.texImage2D(v.TEXTURE_CUBE_MAP_NEGATIVE_Z,0,v.RGBA,v.RGBA,v.UNSIGNED_BYTE,this._images[4]);v.bindTexture(v.TEXTURE_CUBE_MAP,null)}else{if(this.type=="FileCube3x2"){v.pixelStorei(v.UNPACK_FLIP_Y_WEBGL,false);v.bindTexture(v.TEXTURE_CUBE_MAP,this._scene._Textures[this.tex_id]);v.texParameteri(v.TEXTURE_CUBE_MAP,v.TEXTURE_MAG_FILTER,this.filtering);v.texParameteri(v.TEXTURE_CUBE_MAP,v.TEXTURE_MIN_FILTER,this.filtering);v.texParameteri(v.TEXTURE_CUBE_MAP,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE);v.texParameteri(v.TEXTURE_CUBE_MAP,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE);for(var D=0;D<6;D++){var x=document.createElement("canvas");x.width=x.height=this._images[0].height/2;var y=x.getContext("2d");switch(D){case 0:y.drawImage(this._images[0],-2*x.width,0);break;case 1:y.drawImage(this._images[0],-x.width,0);break;case 2:y.drawImage(this._images[0],0,0);break;case 3:y.drawImage(this._images[0],-2*x.width,-x.width);break;case 4:y.drawImage(this._images[0],-x.width,-x.width);break;case 5:y.scale(-1,-1);y.drawImage(this._images[0],-x.width,-2*x.width);break}v.texImage2D(v.TEXTURE_CUBE_MAP_POSITIVE_X+D,0,v.RGBA,v.RGBA,v.UNSIGNED_BYTE,x);y.clearRect(0,0,x.width,x.height)}v.bindTexture(v.TEXTURE_CUBE_MAP,null)}else{if(this.type=="FileCompressed"){var ae=null;if(this._img_path.endsWith(".pvr")){var E=new CTM.Stream(new Uint8Array(this._downloaddata));var z=E.readInt32();E.readInt32();var ah=new Uint8Array(z);var q=new infinityrt_texture_lzma(ah);if(LZMA.decompress(E,E,q,z)){var ab=33776;var N=33777;var al=33778;var F=33779;var n=35986;var s=35987;var A=34798;var h=35840;var T=35841;var l=35842;var X=35843;var t=36196;var R=0;var J=1;var Y=2;var C=3;var an=6;var S=7;var P=9;var O=5;var B=13;var ag=55727696;var aa=0;var K=2;var am=6;var c=7;var I=11;var f=12;var m=new Int32Array(B);var H=new CTM.Stream(ah);for(var af=0;af<B;af++){m[af]=H.readInt32()}if(m[aa]==ag){var Q=m[K];var Z;switch(Q){case R:Z=T;break;case J:Z=X;break;case Y:Z=h;break;case C:Z=l;break;case an:Z=t;break;case S:Z=ab;break;case P:Z=al;break;case O:Z=F;break}this.internalfmt=Z;this.width=m[c];this.height=m[am];var V=m[f]+52;var u=null;if(typeof ah.subarray==="function"){u=ah.subarray(V)}else{if(typeof ah.slice==="function"){u=ah.slice(V)}else{if(typeof ah.webkitSlice==="function"){u=ah.webkitSlice(V)}}}ae=new Uint8Array(u,0,(this.width*this.height)/2)}}}else{ae=new Uint8Array(this._downloaddata)}if(ae!=null){v.bindTexture(v.TEXTURE_2D,this._scene._Textures[this.tex_id]);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,this.filtering);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,this.mipmap?v.LINEAR_MIPMAP_LINEAR:this.filtering);if(this._wrap=="repeat"){v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.REPEAT);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.REPEAT)}else{v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE)}v.compressedTexImage2D(v.TEXTURE_2D,0,this.internalfmt,this.width,this.height,0,ae)}v.bindTexture(v.TEXTURE_2D,null)}else{if(this.blksd!=0){var p=16;var g=128;var ac=new ScrRand(this.blksd);var d=p*p;var W=[],U=[];for(var M=0;M<d;M++){W.push(M);U.push(0)}for(var L=0;L<d*4;L++){var ak=ac.uint32()%d;var aj=ac.uint32()%d;var ad=W[ak];W[ak]=W[aj];W[aj]=ad}for(var M=0;M<d;M++){U[W[M]]=M}var G=[];for(var M=0;M<d;M++){G.push(U[M]);G.push(U[M]);G.push(U[M])}W=null;v.pixelStorei(v.UNPACK_FLIP_Y_WEBGL,true);v.bindTexture(v.TEXTURE_2D,this._scene._Textures[this.tex_id]);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,v.NEAREST);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,v.NEAREST);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE);v.texImage2D(v.TEXTURE_2D,0,v.RGBA,v.RGBA,v.UNSIGNED_BYTE,this._images[0]);var i={_nFBOWidth:this._images[0].width,_nFBOHeight:this._images[0].height};i._nFBO=v.createFramebuffer();v.bindFramebuffer(v.FRAMEBUFFER,i._nFBO);i._nFBOTex=v.createTexture();v.bindTexture(v.TEXTURE_2D,i._nFBOTex);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,v.NEAREST);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,v.NEAREST);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE);v.texImage2D(v.TEXTURE_2D,0,v.RGBA,i._nFBOWidth,i._nFBOHeight,0,v.RGBA,v.UNSIGNED_BYTE,null);v.framebufferTexture2D(v.FRAMEBUFFER,v.COLOR_ATTACHMENT0,v.TEXTURE_2D,i._nFBOTex,0);v.bindTexture(v.TEXTURE_2D,null);if(this._scene.shaderUnscramble==null){this._scene.shaderUnscramble=new infinityrt_shader(g_vertex_LuminosityHighPassShader,g_frg_Scr,v);this._scene.shaderUnscramble.addInt("colorTexture");this._scene.shaderUnscramble.addFloat2("texSize");this._scene.shaderUnscramble.addVertexArray("position");this._scene.shaderUnscramble.addUVArray("uv");this._scene.shaderUnscramble.addInt("scrtable");this._scene.shaderUnscramble.init()}this._scene.shaderUnscramble.use();this._scene.shaderUnscramble.setFloat2("texSize",[i._nFBOWidth,i._nFBOHeight]);v.activeTexture(k);v.bindTexture(v.TEXTURE_2D,this._scene._Textures[this.tex_id]);this._scene.shaderUnscramble.setInt("colorTexture",k-v.TEXTURE0);v.activeTexture(k+1);var w=v.createTexture();v.bindTexture(v.TEXTURE_2D,w);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,v.NEAREST);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,v.NEAREST);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE);v.texImage2D(v.TEXTURE_2D,0,v.RGB,256,1,0,v.RGB,v.UNSIGNED_BYTE,new Uint8Array(G));v.bindTexture(v.TEXTURE_2D,w);this._scene.shaderUnscramble.setInt("scrtable",k-v.TEXTURE0+1);v.disableVertexAttribArray(2);this._scene.RenderOrthoQuad(i,this._scene.shaderUnscramble);v.enableVertexAttribArray(2);v.deleteFramebuffer(i._nFBO);v.bindFramebuffer(v.FRAMEBUFFER,this._scene.currentFrameBuffer);v.deleteTexture(this._scene._Textures[this.tex_id]);this._scene._Textures[this.tex_id]=i._nFBOTex;i._nFBOTex=null;v.deleteTexture(w);v.activeTexture(k);v.bindTexture(v.TEXTURE_2D,this._scene._Textures[this.tex_id]);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,this.filtering);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,this.mipmap?v.LINEAR_MIPMAP_LINEAR:this.filtering);if(this._wrap=="repeat"){v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.REPEAT);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.REPEAT)}else{v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE)}if(this.mipmap){v.generateMipmap(v.TEXTURE_2D)}v.bindTexture(v.TEXTURE_2D,null);this._size=[this._images[0].width,this._images[0].height];this._images=[]}else{v.pixelStorei(v.UNPACK_FLIP_Y_WEBGL,true);v.bindTexture(v.TEXTURE_2D,this._scene._Textures[this.tex_id]);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MAG_FILTER,this.filtering);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_MIN_FILTER,this.mipmap?v.LINEAR_MIPMAP_LINEAR:this.filtering);if(this._wrap=="repeat"){v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.REPEAT);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.REPEAT)}else{v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_S,v.CLAMP_TO_EDGE);v.texParameteri(v.TEXTURE_2D,v.TEXTURE_WRAP_T,v.CLAMP_TO_EDGE)}var r=v.RGBA,o=v.RGBA;v.texImage2D(v.TEXTURE_2D,0,o,r,v.UNSIGNED_BYTE,this._images[0]);this._size=[this._images[0].width,this._images[0].height];this._images=[];if(this.mipmap){v.generateMipmap(v.TEXTURE_2D)}v.bindTexture(v.TEXTURE_2D,null)}}}}}catch(ai){console.log("***ERROR: Binding Texture '"+this.name+"' "+ai)}}if(this.type=="FileCube"||this.type=="FileCube3x2"){v.bindTexture(v.TEXTURE_CUBE_MAP,this._scene._Textures[this.tex_id])}else{v.bindTexture(v.TEXTURE_2D,this._scene._Textures[this.tex_id])}};function clearTextureUnit(a,b){a.activeTexture(b);a.bindTexture(a.TEXTURE_CUBE_MAP,null);a.bindTexture(a.TEXTURE_2D,null)}infinityrt_texture.prototype.startFileDownloads=function(){var c=this._scene;if((this.type=="File")||(this.type=="FileEnv")||(this.type=="FileCube")||(this.type=="Parameterised")||this.type=="FileCube3x2"){if(typeof(this._scene._Images[this.tex_id])=="undefined"){var a;if(this._lstFiles!=null){for(var b=0;b<this._lstFiles.length;b++){a=new Image();this._images.push(a);a.onload=function(){c._outstandingjobs--;if(c._inlineGPULoading!=-1){(function(e){setTimeout(function(){e.use(c.gl.TEXTURE0)},c._inlineGPULoading)})(this._tex)}};a.onerror=function(){console.log("Error: "+this.src)};a._tex=this;if(!this._scene._usingwkwebview){a.crossOrigin="anonymous"}a.src=this._img_path+this._lstFiles[b];this._scene._outstandingjobs++;this._scene._totaljobs++}}else{a=new Image();this._images.push(a);a.onload=function(){c._outstandingjobs--;if(c._inlineGPULoading!=-1){(function(e){setTimeout(function(){e.use(c.gl.TEXTURE0)},c._inlineGPULoading)})(this._tex)}};a.onerror=function(){console.log("Error: "+this.src)};a._tex=this;if(!this._scene._usingwkwebview){a.crossOrigin="anonymous"}a.src=this._img_path;this._scene._outstandingjobs++;this._scene._totaljobs++}this._scene._Images[this.tex_id]=this._images[0]}}else{if(this.type=="FileCompressed"){var d=new XMLHttpRequest();d._tex=this;d.open("GET",this._img_path,true);d.responseType="arraybuffer";d.onload=function(f){if(c._usingwkwebview||d.status==200){d._tex._downloaddata=d.response;c._outstandingjobs--}};c._outstandingjobs++;c._totaljobs++;d.send("")}}};infinityrt_texture.prototype.refresh=function(){if(this._decoded){return true}this._decoded=true;if(this.type=="Noise"){var g=512,a=512;var o;var C=Array(g*a);var b=Math.random;var d=this.noisecontrast;var k=this.noisebrightness+0.5;for(var l=0;l<a;l++){var w=l*g;for(var m=0;m<g;m++){o=((b()-0.5)*d)+k;o*=255;if(o>255){o=255}else{if(o<0){o=0}}C[w+m]=o}}if(this.noiserounds>0){var h=Array(g*a);var q=Array();for(var z=0;z<this.noiserounds;z++){for(var l=0;l<a;l++){var B=((l>0)?l-1:a-1)*g;var D=((l<a-1)?l+1:0)*g;var e=l*g;var E;for(var m=0;m<g;m++){var n=(m>0)?m-1:g-1;var p=(m<g-1)?m+1:0;q[0]=C[B+n];q[1]=C[B+m];q[2]=C[B+p];q[3]=C[e+n];q[4]=C[e+m];q[5]=C[e+p];q[6]=C[D+n];q[7]=C[D+m];q[8]=C[D+p];if(q[1]>q[2]){E=q[1];q[1]=q[2];q[2]=E}if(q[4]>q[5]){E=q[4];q[4]=q[5];q[5]=E}if(q[7]>q[8]){E=q[7];q[7]=q[8];q[8]=E}if(q[0]>q[1]){E=q[0];q[0]=q[1];q[1]=E}if(q[3]>q[4]){E=q[3];q[3]=q[4];q[4]=E}if(q[6]>q[7]){E=q[6];q[6]=q[7];q[7]=E}if(q[1]>q[2]){E=q[1];q[1]=q[2];q[2]=E}if(q[4]>q[5]){E=q[4];q[4]=q[5];q[5]=E}if(q[7]>q[8]){E=q[7];q[7]=q[8];q[8]=E}if(q[0]>q[3]){E=q[0];q[0]=q[3];q[3]=E}if(q[5]>q[8]){E=q[5];q[5]=q[8];q[8]=E}if(q[4]>q[7]){E=q[4];q[4]=q[7];q[7]=E}if(q[3]>q[6]){E=q[3];q[3]=q[6];q[6]=E}if(q[1]>q[4]){E=q[1];q[1]=q[4];q[4]=E}if(q[2]>q[5]){E=q[2];q[2]=q[5];q[5]=E}if(q[4]>q[7]){E=q[4];q[4]=q[7];q[7]=E}if(q[4]>q[2]){E=q[4];q[4]=q[2];q[2]=E}if(q[6]>q[4]){E=q[6];q[6]=q[4];q[4]=E}if(q[4]>q[2]){E=q[4];q[4]=q[2];q[2]=E}h[e+m]=q[4]}}for(var c=0;c<g*a;c++){C[c]=h[c]}}}var i=document.createElement("canvas");i.width=this.width;i.height=this.height;var f=i.getContext("2d");var u=f.getImageData(0,0,this.width,this.height);var A=u.data;this._pixels=A;for(var l=0;l<this.height;l++){var w=l*this.width;for(var m=0;m<this.width;m++){var v=((l&511)<<9)+(m&511);var t=C[v];var j=4*(w+m);A[j]=t;A[j+1]=t;A[j+2]=t;A[j+3]=255}}u.data=A;this._images.push(u)}else{if(this.type=="Operation"){this.performTexOp()}}return false};infinityrt_texture.prototype.performTexOp=function(){this._tex1=this._scene._Texture_ref[this.tex1name];this._tex1.refresh();if(typeof(this.tex2name)!="undefined"){this._tex2=this._scene._Texture_ref[this.tex2name];this._tex2.refresh()}if(typeof(this.tex3name)!="undefined"){this._tex3=this._scene._Texture_ref[this.tex3name];this._tex3.refresh()}var f=this._scene.gl.createFramebuffer();this._scene.gl.bindFramebuffer(this._scene.gl.FRAMEBUFFER,f);var g=this._scene.gl.createTexture();this._scene.gl.bindTexture(this._scene.gl.TEXTURE_2D,g);this._scene.gl.texParameteri(this._scene.gl.TEXTURE_2D,this._scene.gl.TEXTURE_MAG_FILTER,this._scene.gl.LINEAR);this._scene.gl.texParameteri(this._scene.gl.TEXTURE_2D,this._scene.gl.TEXTURE_MIN_FILTER,this._scene.gl.LINEAR);this._scene.gl.texImage2D(this._scene.gl.TEXTURE_2D,0,this._scene.gl.RGBA,this.width,this.height,0,this._scene.gl.RGBA,this._scene.gl.UNSIGNED_BYTE,null);this._scene.gl.framebufferTexture2D(this._scene.gl.FRAMEBUFFER,this._scene.gl.COLOR_ATTACHMENT0,this._scene.gl.TEXTURE_2D,g,0);this._scene.gl.bindFramebuffer(this._scene.gl.FRAMEBUFFER,f);this._scene.gl.viewport(0,0,this.width,this.height);var a=this._scene.gl.createProgram();var l="attribute vec2 a_position; \nattribute vec2 a_tex0; \nvarying vec2 uv0; \nvoid main() \n{ \n uv0 = a_tex0; \n gl_Position = vec4(a_position, 0.0, 1.0); \n}";var j=infinityrt_compileShader(this._scene.gl,l,"x-shader/x-vertex");this._scene.gl.attachShader(a,j);var b="";b+="#ifdef GL_FRAGMENT_PRECISION_HIGH \n";b+="precision highp float; \n";b+="#else \n";b+="precision mediump float; \n";b+="#endif \n";b+="varying vec2 uv0; \n";b+="uniform sampler2D tex1; \n";if(typeof(this.tex2name)!="undefined"){b+="uniform sampler2D tex2; \n"}if(typeof(this.tex3name)!="undefined"){b+="uniform sampler2D tex3; \n"}b+="void main() \n";b+="{ \n";if(this.operation=="Invert"){b+="gl_FragColor = vec4(1.0-texture2D(tex1, uv0).xyz, 1.0); \n"}else{if(this.operation=="Add"){b+="gl_FragColor = vec4(texture2D(tex1, uv0).xyz+texture2D(tex2, uv0).xyz, 1.0); \n"}else{if(this.operation=="Subtract"){b+="gl_FragColor = vec4(texture2D(tex1, uv0).xyz-texture2D(tex2, uv0).xyz, 1.0); \n"}else{if(this.operation=="Multiply"){b+="gl_FragColor = vec4(texture2D(tex1, uv0).xyz*texture2D(tex2, uv0).xyz, 1.0); \n"}else{if(this.operation=="Blend"){b+="float val1 = texture2D(tex3, uv0).x;\n";b+="float val2 = 1.0-val1;\n";b+="gl_FragColor = vec4((val1*texture2D(tex1, uv0).xyz)+(val2*texture2D(tex2, uv0).xyz), 1.0); \n"}}}}}b+="} \n";var d=infinityrt_compileShader(this._scene.gl,b,"x-shader/x-fragment");this._scene.gl.attachShader(a,d);this._scene.gl.linkProgram(a);if(!this._scene.gl.getProgramParameter(a,this._scene.gl.LINK_STATUS)){console.log("***Could not initialise tex op shader");return}this._scene.gl.clear(this._scene.gl.COLOR_BUFFER_BIT);this._scene.gl.useProgram(a);this._tex1.use(this._scene.gl.TEXTURE1);this._scene.gl.uniform1i(this._scene.gl.getUniformLocation(a,"tex1"),1);if(typeof(this.tex2name)!="undefined"){this._tex2.use(this._scene.gl.TEXTURE2);this._scene.gl.uniform1i(this._scene.gl.getUniformLocation(a,"tex2"),2)}if(typeof(this.tex3name)!="undefined"){this._tex3.use(this._scene.gl.TEXTURE3);this._scene.gl.uniform1i(this._scene.gl.getUniformLocation(a,"tex3"),3)}var m=new Float32Array([-1,-1,1,-1,-1,1,1,1]);var e=this._scene.gl.getAttribLocation(a,"a_position");var i=this._scene.gl.createBuffer();this._scene.gl.bindBuffer(this._scene.gl.ARRAY_BUFFER,i);this._scene.gl.bufferData(this._scene.gl.ARRAY_BUFFER,m,this._scene.gl.STATIC_DRAW);this._scene.gl.vertexAttribPointer(e,2,this._scene.gl.FLOAT,false,0,0);this._scene.gl.enableVertexAttribArray(e);var c=new Float32Array([0,0,1,0,0,1,1,1]);var k=this._scene.gl.getAttribLocation(a,"a_tex0");var h=this._scene.gl.createBuffer();this._scene.gl.bindBuffer(this._scene.gl.ARRAY_BUFFER,h);this._scene.gl.bufferData(this._scene.gl.ARRAY_BUFFER,c,this._scene.gl.STATIC_DRAW);this._scene.gl.vertexAttribPointer(k,2,this._scene.gl.FLOAT,false,0,0);this._scene.gl.enableVertexAttribArray(k);this._scene.gl.drawArrays(this._scene.gl.TRIANGLE_STRIP,0,4);this._scene._Textures[this.tex_id]=g;this.loaded=true;this.lvl=1};infinityrt_texture.prototype.loadrtex=function(b){if(b>=this._lvlfilenames.length){return}var c=this;var a=new Image();a.onload=function(){c.unloadGPU();c._images=[a];c._scene._Images[c.tex_id]=a};a.onerror=function(){console.log("Error: "+c.src+" loadrtex will be ignored")};if(!this._scene._usingwkwebview){a.crossOrigin="anonymous"}a.src=this._lvlfilenames[b]};ScrRand=function(a){this._seed=(a>>>0)};ScrRand.prototype.uint32=function(){this._seed^=(this._seed<<13)>>>0;this._seed=(this._seed>>>0);this._seed^=(this._seed>>>17)>>>0;this._seed=(this._seed>>>0);this._seed^=(this._seed<<5)>>>0;this._seed=(this._seed>>>0);return this._seed};var g_strInfinityRTVersion="InfinityRT Version 2.0.277.2";infinityrt_anim=function(){this.transforms=[];this.curves=[];this.framesleft=0;this.currentinput=0;this.positionjump=false;this.delta=0;this.numframes=0;this.numloops=0;this.onComplete=function(){};this.onChange=null;this.onSample=null};infinityrt_anim.prototype.isPlaying=function(){if(typeof(this._TimeSt)!="undefined"){var a=(now()-this._TimeSt)/this._TimeDur;return(a>=0&&a<=1)}return(this.framesleft>0)};infinityrt_anim.prototype.position=function(){return this.currentinput};infinityrt_anim.prototype.play=function(a,e,c,b,d){if(e==0){this.currentinput=a;this.positionjump=true;return}this.positionjump=false;this.delta=(a-this.currentinput)/e;this.startinput=this.currentinput;this.endinput=a;this.framesleft=e;this._TimeSt=undefined;if(c!==undefined){this.onComplete=c}this.onSample=(d!=undefined)?d:null;if(b!==undefined){this.initialposition=this.currentinput;this.numloops=b;this.numframes=e}};infinityrt_anim.prototype.playInTime=function(a,e,c,b,d){if(e==0){this.currentinput=a;this.positionjump=true;return}this.positionjump=false;this.startinput=this.currentinput;this.endinput=a;this.framesleft=1;this._TimeSt=now();this._TimeDur=(e!==undefined)?e:Math.abs(a-this.currentinput)*1000;this._Change={t0:this.currentinput,td:(a-this.currentinput)};if(c!==undefined){this.onComplete=c}if(d!=undefined){this.onSample=d}if(b!==undefined){this.initialposition=this.currentinput;this.numloops=b}};infinityrt_anim.prototype.step=function(){if(this.positionjump){this.positionjump=false;return true}var a,b=false;if(typeof(this._TimeSt)!="undefined"){a=(now()-this._TimeSt)/this._TimeDur;if(a>=1){a=1;if(this.framesleft==0){b=true}this.framesleft=0}}else{b=(this.framesleft==0)}if(b){var c=this.onComplete;this.onComplete=function(){};c();if(this.numloops>0){this.numloops--;this.currentinput=this.initialposition;if(typeof(this._TimeSt)!="undefined"){this._TimeSt=now()}else{this.framesleft=this.numframes}return true}return false}if(typeof(this._TimeSt)!="undefined"){this.currentinput=this._Change.t0+a*this._Change.td}else{this.currentinput+=this.delta;this.framesleft--}if(this.onChange!=null){this.onChange(this)}return true};infinityrt_anim.prototype.stop=function(){this.framesleft=0;this.delta=0;this.numloops=0};infinityrt_sceneObject=function(a){this.position=[0,0,0];this.rotation=[0,0,0];this.scale=[0,0,0];this.lposition=[0,0,0];this.lrotation=[0,0,0];this.lscale=[0,0,0];this.trans=new infinityrt_transform();this.tMatrix=this.trans.getResult();this.dirty=true;this.obj=(typeof(a)!="undefined")?a:null};infinityrt_sceneObject.prototype.doTransform=function(){if(!infinityrt_vtx_eq(this.lposition,this.position)||!infinityrt_vtx_eq(this.lrotation,this.rotation)||!infinityrt_vtx_eq(this.lscale,this.scale)){this.trans.clearStack();if(!(this.rotation[0]==0&&this.rotation[1]==0&&this.rotation[2]==0)){this.trans.rotate(this.rotation);this.trans.pushMatrix()}this.trans.translate(this.position);this.tMatrix=this.trans.getResult();this.lposition=this.position;this.lrotation=this.rotation;this.lscale=this.scale;this.dirty=true}};infinityrt_scene=function(e,j,h,g,f,a,i){this._projectparsed=false;this._started=false;this._bAllowDirectRender=true;this._usingwkwebview=(i!==undefined)?i:false;this.urlRoot=j;this.gl=e;this._inlineGPULoading=(a!==undefined)?a:-1;this.DetermineBrowser();this._glVersion=this.gl.getParameter(this.gl.VERSION);this._glVersionNum=(this._glVersion.indexOf("WebGL 2.")!=-1)?2:1;if(this._glVersionNum==1){var c=this.gl.getExtension("OES_element_index_uint");if(!c){console.log("***ERROR: Extension 'OES_element_index_uint' not available")}}console.log(g_strInfinityRTVersion+" - "+this._glVersion);this._nMaxTextureSize=this.gl.getParameter(this.gl.MAX_TEXTURE_SIZE);this.CoreShader_vs=shaderInfinityRT_Corevs;this.CoreShader_fs=shaderInfinityRT_Corefs;this.GlassShader_fs=shaderInfinityRT_Glassfs;this.AmbientShader_fs=shaderInfinityRT_Ambientfs;this.PhysicalShader_fs=shaderInfinityRT_Physicalfs;this.MatchShader_fs=shaderInfinityRT_Matchfs;this.GlassRefractedShader_fs=shaderInfinityRT_Glass_Refractedfs;this.ModularShader_fs=shaderInfinityRT_Modularfs;this.gl.enable(this.gl.DEPTH_TEST);this.gl.depthFunc(this.gl.LEQUAL);this.gl.enable(this.gl.CULL_FACE);this.gl.cullFace(this.gl.BACK);this.gl.frontFace(this.gl.CCW);this.gl.blendFuncSeparate(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA,this.gl.ZERO,this.gl.ONE);this.gl.viewport(0,0,h,g);this._backgroundColor=[0,0,0];this.setBackgroundTransparent(false);this.prepareTexId=0;this._encodeenvmapsinmono=0;this._outstandingjobs=1;this._totaljobs=1;this._jitter=[];this._prepared=false;this._animRequiresClear=false;this._animEval=false;this._bForce1kTexFallback=false;this._bNoCompressedTexs=false;this.hasBrightReflections=0;this._cc_brightness=0;this._cc_contrast=1;this._cc_saturation=1;this._cc_tint=[1,1,1];this.resetCounts();this._localfiles=(f!==undefined)?f:false;this._bSupportsWebP=false;this.autoDLAllDeferredGrps=true;this.viewwidth=h;this.viewheight=g;this.fovy=30;this._zNearMin=0.5;this._SceneScale=1;this._nav=null;this._jitx=[-0.158,0.474,0.158,-0.474,0.288,0.2726,-0.3452,0.0142,-0.2662,0.2856,0.0474,-0.1864,0.269,-0.4118,-0.0242,0.465,0.1062,0.1878,0.4154,-0.1586,-0.1632,0.167,-0.3764,0.1262,-0.4848,-0.2954,0.0754,-0.0934,0.4202,0.3356,-0.0412,-0.1342,-0.143,0.1898,-0.0022,0.317,0.141,-0.0678,-0.247,-0.2828,-0.4078,-0.255,0.3836,0.1706,0.3054,-0.3808,-0.027,0.0632,0.1186,-0.3512,-0.2856,0.2026,0.3746,0.0104,0.1048,-0.1902,-0.405,-0.4704,0.2658,-0.1878,0.1958,0.0788,-0.1592];this._jity=[0.474,0.158,-0.474,-0.158,0.408,-0.4032,-0.349,0.2998,0.1178,0.0962,-0.2556,-0.1684,-0.1744,0.2644,0.4994,0.1824,-0.4816,0.252,-0.2752,0.259,-0.3416,-0.0332,-0.182,0.423,0.1166,-0.0384,0.148,0.1172,0.038,0.2626,-0.1398,0.3972,-0.0322,-0.2896,-0.3874,-0.0382,-0.1612,-0.2716,-0.4302,0.2764,0.0216,-0.2644,-0.166,0.0866,-0.279,0.1624,0.2072,-0.0874,-0.3736,0.3542,-0.1396,0.3532,0.1418,0.398,0.33,0.0662,-0.0896,-0.1604,0.1986,0.171,-0.4568,0.052,-0.4574];this._nRandomIdx=0;this._jitRadius=3;this._slowinoutfac=1;this._renderpickenabled=false;this._renderingPickPass=false;this._lstInstances=[];this._flipFoVonAspectSwap=true;this._bOrderBasedTransparency=false;this._fSharpenScale=0;this._bAccurateDoF=false;this._fPlanarReflectDirX=this._fPlanarReflectDirY=0;this._nPlanarReflectMap=2;this._renderingPlanarReflectPass=false;this._lstSeparableBlurShaders=[];this._vecCameraLimitMin=[-1000000,-1000000,-1000000];this._vecCameraLimitMax=[1000000,1000000,1000000];this._bbmax=[-1000000,-1000000,-1000000];this._bbmin=[1000000,1000000,1000000];this._initialViewMatrix=infinityrt_identity.slice(0);this._initialNavMatrix=infinityrt_identity.slice(0);this._Textures=[];this._Texture_ref=[];this._Images=[];this._TextureObjs=[];this._Materials=[];this._Material_ref=[];this._InitialMaterials={};this._lstNonDepthObjects=[];this._lstDeferredGrps=null;this._AllDeferredSent=false;this.lstRefractionNodes=[];this._lstPlanarReflectNodes=[];this.lstGlowNodes=[];this.rttRefractFramebuffer=null;this.rttRefractTexture=null;this.rttRefractRenderBuffer=null;this._fboGlow=null;this._fboPlanarReflect=null;this._prog_highpass=null;this._glow_strength=1.5;this._glow_threshold=0.85;this._glow_incbackground=false;this._glow_applytobackground=true;this._bDoF=false;this._fboDoF=null;this._fDoFFocusWidth=0.8;this._nDoFPixelScaling=1;this._posDoFLastCam=[0,0,0];this._fDoFFocusSphereDist=0;this._shader_mesh_depth=null;this._shader_prog_bokeh=null;this._renderingDoFDepth=false;this._renderingDoFDepthValues=false;this.fnPreDraw=null;this.fnPostDraw=null;this._fboUnscramble=null;this._bbminObjz=-1;this._bbmaxObjz=1;this._fastAnims=true;this._backdroptexturename="";this._backdropvisiblerefract=0;this._usingarchives=false;this._TextureToLvl0=null;this.camresponse=0;var b=new XMLHttpRequest();b._scene=this;var d=this.urlRoot+"hierarchy.xml";b.open("GET",d,true);if(!this._usingwkwebview){b.setRequestHeader("Content-Type","text/xml")}b.onload=function(ai){var D=b.responseXML;var V=b._scene;if(!V._usingwkwebview&&b.status!=200){console.log("***Error "+b.status+" readystate "+b.readyState);return}var E=D.getElementsByTagName("texture");for(var ag=0;ag<E.length;ag++){var I=null;var J=E[ag];var R=J.getElementsByTagName("name")[0].firstChild.nodeValue;var F=J.getElementsByTagName("type")[0].firstChild.nodeValue;if((F=="File")||(F=="FileEnv")||(F=="Parameterised")){var ab=J.getElementsByTagName("filename");for(var af=0;af<ab.length;af++){var l,p=null;var B=J.getElementsByTagName("filename")[af];if(B.hasAttribute("dim")){var s=parseInt(B.getAttribute("dim"));if(s>V._nMaxTextureSize){continue}if(V._bForce1kTexFallback&&s>1024){continue}}if(B.hasAttribute("cfmt")){if(V._bNoCompressedTexs){continue}l=B.getAttribute("cfmt");p=V.getExtension(l);if(p==null){continue}}var o=B.firstChild.nodeValue;if(!V._bSupportsWebP&&o.endsWith(".webp")){if(B.hasAttribute("orig")){o=B.getAttribute("orig")}else{if(R.indexOf("_refplane.")!=-1){o=R}else{o=ReplaceAll(o,".webp",(R.endsWith(".png"))?".png":".jpg")}}}I=new infinityrt_texture(R,F,V.urlRoot+o,null,b._scene);if(J.getElementsByTagName("wrap").length){I._wrap=J.getElementsByTagName("wrap")[0].firstChild.nodeValue}if(p!=null){I.cfmt=p;I.type="FileCompressed"}break}}else{if(F=="FileCube"||F=="FileCube3x2"){I=new infinityrt_texture(R,F,V.urlRoot,J.getElementsByTagName("filename"),b._scene)}else{if(F=="Noise"){I=new infinityrt_texture(R,F,"",null,b._scene);I.width=J.getElementsByTagName("width")[0].firstChild.nodeValue;I.height=J.getElementsByTagName("height")[0].firstChild.nodeValue;I.noiseseed=J.getElementsByTagName("noiseseed")[0].firstChild.nodeValue;I.noiserounds=J.getElementsByTagName("noiserounds")[0].firstChild.nodeValue;I.noisebrightness=parseFloat(J.getElementsByTagName("noisebrightness")[0].firstChild.nodeValue);I.noisecontrast=parseFloat(J.getElementsByTagName("noisecontrast")[0].firstChild.nodeValue);I.noisesaturation=parseFloat(J.getElementsByTagName("noisesaturation")[0].firstChild.nodeValue)}else{if(F=="Operation"){I=new infinityrt_texture(R,F,"",null,b._scene);I.width=J.getElementsByTagName("width")[0].firstChild.nodeValue;I.height=J.getElementsByTagName("height")[0].firstChild.nodeValue;I.operation=J.getElementsByTagName("operation")[0].firstChild.nodeValue;if(J.getElementsByTagName("tex1").length){I.tex1name=J.getElementsByTagName("tex1")[0].firstChild.nodeValue}if(J.getElementsByTagName("tex2").length){I.tex2name=J.getElementsByTagName("tex2")[0].firstChild.nodeValue}if(J.getElementsByTagName("tex3").length){I.tex3name=J.getElementsByTagName("tex3")[0].firstChild.nodeValue}}else{console.log("Image Type "+F+" unsupported for image "+R)}}}}if(I!=null){I.mipmap=(J.getElementsByTagName("mipmap").length>0);if(J.getElementsByTagName("uvtmat3").length){I._uvTransform=J.getElementsByTagName("uvtmat3")[0].firstChild.nodeValue.split(" ")}if(J.getElementsByTagName("filename_lvl1").length){var Z=J.getElementsByTagName("filename_lvl1")[0];var U=Z.firstChild.nodeValue;if(!V._bSupportsWebP&&U.endsWith(".webp")&&Z.hasAttribute("orig")){U=Z.getAttribute("orig")}I._lvlfilenames=[I._img_path,U];I._img_path=V.urlRoot+U;if(V._TextureToLvl0==null){V._TextureToLvl0=[]}V._TextureToLvl0.push(I)}if(J.getElementsByTagName("blksd").length){I.blksd=parseInt(J.getElementsByTagName("blksd")[0].firstChild.nodeValue)}if(J.getElementsByTagName("ismonochrome").length){I._ismonochrome=parseInt(J.getElementsByTagName("ismonochrome")[0].firstChild.nodeValue)==1}}}if(!V._localfiles){for(var ag=0;ag<V._TextureObjs.length;ag++){V._TextureObjs[ag].startFileDownloads()}}var x=D.getElementsByTagName("viewcamera");if(x.length>0){V._backgroundColor=infinityrt_intToFloatArray(x[0].getElementsByTagName("background")[0].firstChild.nodeValue);V.setBackgroundTransparent(V._backgroundTransparent);if(x[0].getElementsByTagName("fovy").length){V.fovy=parseFloat(x[0].getElementsByTagName("fovy")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("matrix").length){V._initialViewMatrix=x[0].getElementsByTagName("matrix")[0].firstChild.nodeValue.split(" ");V._initialNavMatrix=V._initialViewMatrix.slice(0)}if(x[0].getElementsByTagName("encodeenvmapsinmono").length){V._encodeenvmapsinmono=parseInt(x[0].getElementsByTagName("encodeenvmapsinmono")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("hasBrightReflections").length){V.hasBrightReflections=parseInt(x[0].getElementsByTagName("hasBrightReflections")[0].firstChild.nodeValue);if(V.hasBrightReflections){V.gl.blendFuncSeparate(V.gl.ONE,V.gl.ONE_MINUS_SRC_ALPHA,V.gl.ZERO,V.gl.ONE)}}if(x[0].getElementsByTagName("cc_brightness").length){V._cc_brightness=parseFloat(x[0].getElementsByTagName("cc_brightness")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("cc_contrast").length){V._cc_contrast=parseFloat(x[0].getElementsByTagName("cc_contrast")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("cc_saturation").length){V._cc_saturation=parseFloat(x[0].getElementsByTagName("cc_saturation")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("cc_tint").length){V._cc_tint=x[0].getElementsByTagName("cc_tint")[0].firstChild.nodeValue.split(",")}if(x[0].getElementsByTagName("camresponse").length){V.camresponse=parseInt(x[0].getElementsByTagName("camresponse")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("glow_strength").length){V._glow_strength=parseFloat(x[0].getElementsByTagName("glow_strength")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("glow_threshold").length){V._glow_threshold=parseFloat(x[0].getElementsByTagName("glow_threshold")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("glow_incbackground").length){V._glow_incbackground=parseInt(x[0].getElementsByTagName("glow_incbackground")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("glow_applytobackground").length){V._glow_applytobackground=parseInt(x[0].getElementsByTagName("glow_applytobackground")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("bbminObjz").length){V._bbminObjz=parseFloat(x[0].getElementsByTagName("bbminObjz")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("bbmaxObjz").length){V._bbmaxObjz=parseFloat(x[0].getElementsByTagName("bbmaxObjz")[0].firstChild.nodeValue)}var ah=x[0].getElementsByTagName("dof");if(ah.length>0){V._bDoF=true;var q=ah[0].getElementsByTagName("focuspos");if(q.length){V._fDoFFocusPos=parseFloat(q[0].firstChild.nodeValue)}var C=ah[0].getElementsByTagName("focuswidth");if(C.length){V._fDoFFocusWidth=parseFloat(C[0].firstChild.nodeValue)}var W=ah[0].getElementsByTagName("applytonear");if(W.length){V._nDoFApplyToNear=parseInt(W[0].firstChild.nodeValue)}var K=ah[0].getElementsByTagName("focusarea");if(K.length){V._nDoFFocusArea=parseInt(K[0].firstChild.nodeValue)}var C=ah[0].getElementsByTagName("focuswidth");if(C.length){V._fDoFFocusWidth=parseFloat(C[0].firstChild.nodeValue)}var Q=ah[0].getElementsByTagName("pixelscaling");if(Q.length){V._nDoFPixelScaling=parseFloat(Q[0].firstChild.nodeValue)}var v=ah[0].getElementsByTagName("dofnear");if(v.length>0){var N=v[0].getElementsByTagName("dofdist");if(N.length){V._fDoFNearDist=parseFloat(N[0].firstChild.nodeValue)}var ac=v[0].getElementsByTagName("dofstrength");if(ac.length){V._fDoFNearAperture=parseFloat(ac[0].firstChild.nodeValue)}var m=v[0].getElementsByTagName("dofbias");if(m.length){V._DoFNearBias=parseFloat(m[0].firstChild.nodeValue)}}var G=ah[0].getElementsByTagName("doffar");if(G.length>0){var N=G[0].getElementsByTagName("dofdist");if(N.length){V._fDoFFarDist=parseFloat(N[0].firstChild.nodeValue)}var ac=G[0].getElementsByTagName("dofstrength");if(ac.length){V._fDoFFarAperture=parseFloat(ac[0].firstChild.nodeValue)}var m=G[0].getElementsByTagName("dofbias");if(m.length){V._DoFFarBias=parseFloat(m[0].firstChild.nodeValue)}}}if(x[0].getElementsByTagName("backdroptexture").length){V._backdroptexturename=x[0].getElementsByTagName("backdroptexture")[0].firstChild.nodeValue}if(x[0].getElementsByTagName("backdropvisiblerefract").length){V._backdropvisiblerefract=parseInt(x[0].getElementsByTagName("backdropvisiblerefract")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("orderbasedtransparency").length){V._bOrderBasedTransparency=parseInt(x[0].getElementsByTagName("orderbasedtransparency")[0].firstChild.nodeValue)!=0}if(x[0].getElementsByTagName("sharpenscale").length){V._fSharpenScale=parseFloat(x[0].getElementsByTagName("sharpenscale")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("PlanarReflectDirX").length){V._fPlanarReflectDirX=parseFloat(x[0].getElementsByTagName("PlanarReflectDirX")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("PlanarReflectDirY").length){V._fPlanarReflectDirY=parseFloat(x[0].getElementsByTagName("PlanarReflectDirY")[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("PlanarReflectMap").length){V._nPlanarReflectMap=parseInt(x[0].getElementsByTagName("PlanarReflectMap")[0].firstChild.nodeValue)}}V._lstStoredCameras=[];var u=D.getElementsByTagName("camera");for(var ag=0;ag<u.length;ag++){var aa=u[ag];var T=(aa.getElementsByTagName("name").length)?(aa.getElementsByTagName("name")[0].firstChild.nodeValue):null;var t=null;if(aa.getElementsByTagName("matrix").length){t=aa.getElementsByTagName("matrix")[0].firstChild.nodeValue.split(" ")}V._lstStoredCameras.push({name:T,matrix:t})}var w=D.getElementsByTagName("material");for(var ag=0;ag<w.length;ag++){var n=w[ag];var Y=(n.getElementsByTagName("name").length)?(n.getElementsByTagName("name")[0].firstChild.nodeValue):null;var M=new infinityrt_material(Y,b._scene);M.type=n.getElementsByTagName("type")[0].firstChild.nodeValue;if(M.type=="Standard"){var X;if(n.getElementsByTagName("diffuseenv").length){X=n.getElementsByTagName("diffuseenv")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_DIFFUSEENV)}}if(n.getElementsByTagName("diffusetexture").length){X=n.getElementsByTagName("diffusetexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_DIFFUSETEX)}}M.diffusecolor=n.getElementsByTagName("diffusecolour")[0].firstChild.nodeValue.split(",");X=n.getElementsByTagName("glossyenv")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_GLOSSYENV)}if(n.getElementsByTagName("glossytexture").length){X=n.getElementsByTagName("glossytexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_GLOSSYTEX)}}M.glossycolor=n.getElementsByTagName("glossycolour")[0].firstChild.nodeValue.split(",");X=n.getElementsByTagName("specularenv")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_SPECULARENV)}if(n.getElementsByTagName("speculartexture").length){X=n.getElementsByTagName("speculartexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_SPECULARTEX)}}M.specularcolor=n.getElementsByTagName("specularcolour")[0].firstChild.nodeValue.split(",");if(n.getElementsByTagName("degree_0_specular").length){M.fresnel=1;M.degree_0_specular=parseFloat(n.getElementsByTagName("degree_0_specular")[0].firstChild.nodeValue);if(n.getElementsByTagName("degree_90_specular").length){M.degree_90_specular=parseFloat(n.getElementsByTagName("degree_90_specular")[0].firstChild.nodeValue)}if(n.getElementsByTagName("brdf_curve").length){M.brdf_curve=parseFloat(n.getElementsByTagName("brdf_curve")[0].firstChild.nodeValue)}}if(n.getElementsByTagName("alphatexture").length){X=n.getElementsByTagName("alphatexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_ALPHATEX)}}if(n.getElementsByTagName("bumptexture").length){X=n.getElementsByTagName("bumptexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_BUMPTEX)}M.bumpuserscale=parseFloat(n.getElementsByTagName("bumpuserscale")[0].firstChild.nodeValue)}M.invertreflectiony=parseFloat(n.getElementsByTagName("invertreflectiony")[0].firstChild.nodeValue);if(n.getElementsByTagName("additionaltexture").length){X=n.getElementsByTagName("additionaltexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_ADDITIONALTEX)}}if(n.getElementsByTagName("additionalcolour").length){M.additionalcolor=n.getElementsByTagName("additionalcolour")[0].firstChild.nodeValue.split(",")}if(n.getElementsByTagName("ambocctexture").length){X=n.getElementsByTagName("ambocctexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_AMBOCCTEX)}}}else{if(M.type=="Glass"){var X=n.getElementsByTagName("specularenv")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_SPECULARENV)}if(n.getElementsByTagName("speculartexture").length){X=n.getElementsByTagName("speculartexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_SPECULARTEX)}}M.specularcolor=n.getElementsByTagName("specularcolour")[0].firstChild.nodeValue.split(",");if(n.getElementsByTagName("degree_0_specular").length){M.degree_0_specular=parseFloat(n.getElementsByTagName("degree_0_specular")[0].firstChild.nodeValue);if(n.getElementsByTagName("degree_90_specular").length){M.degree_90_specular=parseFloat(n.getElementsByTagName("degree_90_specular")[0].firstChild.nodeValue)}if(n.getElementsByTagName("brdf_curve").length){M.brdf_curve=parseFloat(n.getElementsByTagName("brdf_curve")[0].firstChild.nodeValue)}}if(n.getElementsByTagName("bumptexture").length){X=n.getElementsByTagName("bumptexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_BUMPTEX)}M.bumpuserscale=parseFloat(n.getElementsByTagName("bumpuserscale")[0].firstChild.nodeValue)}if(n.getElementsByTagName("basetexture").length){X=n.getElementsByTagName("basetexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_BASETEX)}}M.basecolor=n.getElementsByTagName("basecolour")[0].firstChild.nodeValue.split(",");if(n.getElementsByTagName("exposure").length){M.exposure=n.getElementsByTagName("exposure")[0].firstChild.nodeValue.split(",")}if(n.getElementsByTagName("glowbias").length){M.glowbias=n.getElementsByTagName("glowbias")[0].firstChild.nodeValue.split(",")}if(n.getElementsByTagName("planarreflect").length){M._colPlanarReflect=n.getElementsByTagName("planarreflect")[0].firstChild.nodeValue.split(",")}}else{if(M.type=="Ambient"){if(n.getElementsByTagName("diffusetexture").length){var X=n.getElementsByTagName("diffusetexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_DIFFUSETEX)}}M.diffusecolor=n.getElementsByTagName("diffusecolour")[0].firstChild.nodeValue.split(",");if(n.getElementsByTagName("ambocctexture").length){X=n.getElementsByTagName("ambocctexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_AMBOCCTEX)}}if(n.getElementsByTagName("ColCorrAndCamResp").length){M.ColCorrAndCamResp=parseInt(n.getElementsByTagName("ColCorrAndCamResp")[0].firstChild.nodeValue)}if(n.getElementsByTagName("planarreflect").length){M._colPlanarReflect=n.getElementsByTagName("planarreflect")[0].firstChild.nodeValue.split(",")}}else{if(M.type=="Physical"){var X;if(n.getElementsByTagName("diffuseenv").length){X=n.getElementsByTagName("diffuseenv")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_DIFFUSEENV)}}if(n.getElementsByTagName("diffusetexture").length){X=n.getElementsByTagName("diffusetexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_DIFFUSETEX)}}M.diffusecolor=n.getElementsByTagName("diffusecolour")[0].firstChild.nodeValue.split(",");X=n.getElementsByTagName("physical1")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_PHYSICAL1)}X=n.getElementsByTagName("physical2")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_PHYSICAL2)}X=n.getElementsByTagName("physical3")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_PHYSICAL3)}if(n.getElementsByTagName("roughnesstexture").length){X=n.getElementsByTagName("roughnesstexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_ROUGHNESSTEX)}}M.glossycolor=n.getElementsByTagName("intensitycolor")[0].firstChild.nodeValue.split(",");if(n.getElementsByTagName("intensitytexture").length){X=n.getElementsByTagName("intensitytexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_GLOSSYTEX)}}M.roughness=parseFloat(n.getElementsByTagName("roughness")[0].firstChild.nodeValue);X=n.getElementsByTagName("specularenv")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_SPECULARENV)}if(n.getElementsByTagName("speculartexture").length){X=n.getElementsByTagName("speculartexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_SPECULARTEX)}}M.specularcolor=n.getElementsByTagName("specularcolour")[0].firstChild.nodeValue.split(",");if(n.getElementsByTagName("ior_R0DG").length){M.ior_R0DG=parseFloat(n.getElementsByTagName("ior_R0DG")[0].firstChild.nodeValue)}if(n.getElementsByTagName("ior_R0Clear").length){M.ior_R0Clear=parseFloat(n.getElementsByTagName("ior_R0Clear")[0].firstChild.nodeValue)}if(n.getElementsByTagName("alphatexture").length){X=n.getElementsByTagName("alphatexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_ALPHATEX)}}if(n.getElementsByTagName("bumptexture").length){X=n.getElementsByTagName("bumptexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_BUMPTEX)}M.bumpuserscale=parseFloat(n.getElementsByTagName("bumpuserscale")[0].firstChild.nodeValue)}M.invertreflectiony=parseFloat(n.getElementsByTagName("invertreflectiony")[0].firstChild.nodeValue);if(n.getElementsByTagName("reflectionplanetexture").length){X=n.getElementsByTagName("reflectionplanetexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_REFLECTIONTEX)}if(x[0].getElementsByTagName("matrix").length){M._lstrpmatrix=n.getElementsByTagName("rpmatrix")[0].firstChild.nodeValue.split("|");for(var ae=0;ae<M._lstrpmatrix.length;ae++){M._lstrpmatrix[ae]=M._lstrpmatrix[ae].split(" ")}}M.reflectionplanescale=parseFloat(n.getElementsByTagName("reflectionplanescale")[0].firstChild.nodeValue)}if(n.getElementsByTagName("reflectionplane").length){var L=n.getElementsByTagName("reflectionplane")[0].firstChild.nodeValue;M._rpInstName=L.split(",");M.numreflectionplanes=M._rpInstName.length<16?M._rpInstName.length:16;M._rpInstTexId=[];for(var af=0;af<M.numreflectionplanes;af++){var y=M._rpInstName[af].split("|");M._rpInstTexId[af]=(y.length>1)?parseInt(y[1]):0;M._rpInstName[af]=y[0]}}if(n.getElementsByTagName("reflectionplanetexture2").length){X=n.getElementsByTagName("reflectionplanetexture2")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_REFLECTIONTEX2)}}if(n.getElementsByTagName("usespecularroughnessenvmap").length){M.usespecularroughnessenvmap=(n.getElementsByTagName("usespecularroughnessenvmap")[0].firstChild.nodeValue!="0")}if(n.getElementsByTagName("additionaltexture").length){X=n.getElementsByTagName("additionaltexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_ADDITIONALTEX)}}if(n.getElementsByTagName("additionalcolour").length){M.additionalcolor=n.getElementsByTagName("additionalcolour")[0].firstChild.nodeValue.split(",")}if(n.getElementsByTagName("ambocctexture").length){X=n.getElementsByTagName("ambocctexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_AMBOCCTEX)}}}else{if(M.type=="Match"){var X;if(n.getElementsByTagName("diffuseenv").length){X=n.getElementsByTagName("diffuseenv")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_DIFFUSEENV)}}if(n.getElementsByTagName("diffusetexture").length){X=n.getElementsByTagName("diffusetexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_DIFFUSETEX)}}M.diffusecolor=n.getElementsByTagName("diffusecolour")[0].firstChild.nodeValue.split(",");X=n.getElementsByTagName("physical1")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_PHYSICAL1)}X=n.getElementsByTagName("physical2")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_PHYSICAL2)}X=n.getElementsByTagName("physical3")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_PHYSICAL3)}if(n.getElementsByTagName("roughnesstexture").length){X=n.getElementsByTagName("roughnesstexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_ROUGHNESSTEX)}}M.glossycolor=n.getElementsByTagName("intensitycolor")[0].firstChild.nodeValue.split(",");if(n.getElementsByTagName("intensitytexture").length){X=n.getElementsByTagName("intensitytexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_GLOSSYTEX)}}M.roughness=parseFloat(n.getElementsByTagName("roughness")[0].firstChild.nodeValue);M.roughnessenvmaplevels=n.getElementsByTagName("roughnessenvmaplevels")[0].firstChild.nodeValue.split(",");X=n.getElementsByTagName("specularenv")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_SPECULARENV)}if(n.getElementsByTagName("speculartexture").length){X=n.getElementsByTagName("speculartexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_SPECULARTEX)}}M.specularcolor=n.getElementsByTagName("specularcolour")[0].firstChild.nodeValue.split(",");if(n.getElementsByTagName("ior_R0DG").length){M.ior_R0DG=parseFloat(n.getElementsByTagName("ior_R0DG")[0].firstChild.nodeValue)}if(n.getElementsByTagName("ior_R0Intensity").length){M.ior_R0Intensity=parseFloat(n.getElementsByTagName("ior_R0Intensity")[0].firstChild.nodeValue)}if(n.getElementsByTagName("ior_R0Clear").length){M.ior_R0Clear=parseFloat(n.getElementsByTagName("ior_R0Clear")[0].firstChild.nodeValue)}if(n.getElementsByTagName("iorDiffuse_flip").length){M.iorDiffuse_flip=parseInt(n.getElementsByTagName("iorDiffuse_flip")[0].firstChild.nodeValue)}if(n.getElementsByTagName("iorIntensity_flip").length){M.iorIntensity_flip=parseInt(n.getElementsByTagName("iorIntensity_flip")[0].firstChild.nodeValue)}if(n.getElementsByTagName("iorClear_flip").length){M.iorClear_flip=parseInt(n.getElementsByTagName("iorClear_flip")[0].firstChild.nodeValue)}if(n.getElementsByTagName("alphatexture").length){X=n.getElementsByTagName("alphatexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_ALPHATEX)}}if(n.getElementsByTagName("alphacolor").length){M.alphacolor=parseFloat(n.getElementsByTagName("alphacolor")[0].firstChild.nodeValue)}if(n.getElementsByTagName("decalalpha").length){M.decalalpha=parseInt(n.getElementsByTagName("decalalpha")[0].firstChild.nodeValue)}if(n.getElementsByTagName("sphericalwhirl").length){M.sphericalwhirl=1;M.bumpuserscale=parseFloat(n.getElementsByTagName("bumpuserscale")[0].firstChild.nodeValue)}else{if(n.getElementsByTagName("bumptexture").length){X=n.getElementsByTagName("bumptexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_BUMPTEX)}M.bumpuserscale=parseFloat(n.getElementsByTagName("bumpuserscale")[0].firstChild.nodeValue)}}M.invertreflectiony=parseFloat(n.getElementsByTagName("invertreflectiony")[0].firstChild.nodeValue);if(n.getElementsByTagName("reflectionplanetexture").length){X=n.getElementsByTagName("reflectionplanetexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_REFLECTIONTEX)}if(x[0].getElementsByTagName("matrix").length){M._lstrpmatrix=n.getElementsByTagName("rpmatrix")[0].firstChild.nodeValue.split("|");for(var ae=0;ae<M._lstrpmatrix.length;ae++){M._lstrpmatrix[ae]=M._lstrpmatrix[ae].split(" ")}}M.reflectionplanescale=parseFloat(n.getElementsByTagName("reflectionplanescale")[0].firstChild.nodeValue)}if(n.getElementsByTagName("reflectionplane").length){var L=n.getElementsByTagName("reflectionplane")[0].firstChild.nodeValue;M._rpInstName=L.split(",");M.numreflectionplanes=M._rpInstName.length<16?M._rpInstName.length:16;M._rpInstTexId=[];for(var af=0;af<M.numreflectionplanes;af++){var y=M._rpInstName[af].split("|");M._rpInstTexId[af]=(y.length>1)?parseInt(y[1]):0;M._rpInstName[af]=y[0]}}if(n.getElementsByTagName("reflectionplanetexture2").length){X=n.getElementsByTagName("reflectionplanetexture2")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_REFLECTIONTEX2)}}if(n.getElementsByTagName("usespecularroughnessenvmap").length){M.usespecularroughnessenvmap=(n.getElementsByTagName("usespecularroughnessenvmap")[0].firstChild.nodeValue!="0")}if(n.getElementsByTagName("additionaltexture").length){X=n.getElementsByTagName("additionaltexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_ADDITIONALTEX)}}if(n.getElementsByTagName("additionalcolour").length){M.additionalcolor=n.getElementsByTagName("additionalcolour")[0].firstChild.nodeValue.split(",")}if(n.getElementsByTagName("ambocctexture").length){X=n.getElementsByTagName("ambocctexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_AMBOCCTEX)}}if(n.getElementsByTagName("exposure").length){M.exposure=n.getElementsByTagName("exposure")[0].firstChild.nodeValue.split(",")}if(n.getElementsByTagName("glowbias").length){M.glowbias=n.getElementsByTagName("glowbias")[0].firstChild.nodeValue.split(",")}if(n.getElementsByTagName("lightfieldtexture").length){X=n.getElementsByTagName("lightfieldtexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_LIGHTFIELDTEX)}}}else{if(M.type=="Glass_Refracted"){var X=n.getElementsByTagName("specularenv")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_SPECULARENV)}if(n.getElementsByTagName("speculartexture").length){X=n.getElementsByTagName("speculartexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_SPECULARTEX)}}M.specularcolor=n.getElementsByTagName("specularcolour")[0].firstChild.nodeValue.split(",");if(n.getElementsByTagName("ior_R0Intensity").length){M.ior_R0Intensity=parseFloat(n.getElementsByTagName("ior_R0Intensity")[0].firstChild.nodeValue)}if(n.getElementsByTagName("ior_R0Clear").length){M.ior_R0Clear=parseFloat(n.getElementsByTagName("ior_R0Clear")[0].firstChild.nodeValue)}if(n.getElementsByTagName("iorIntensity_flip").length){M.iorIntensity_flip=parseInt(n.getElementsByTagName("iorIntensity_flip")[0].firstChild.nodeValue)}if(n.getElementsByTagName("iorClear_flip").length){M.iorClear_flip=parseInt(n.getElementsByTagName("iorClear_flip")[0].firstChild.nodeValue)}if(n.getElementsByTagName("brdf_curve").length){M.brdf_curve=parseFloat(n.getElementsByTagName("brdf_curve")[0].firstChild.nodeValue)}if(n.getElementsByTagName("bumptexture").length){X=n.getElementsByTagName("bumptexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_BUMPTEX)}M.bumpuserscale=parseFloat(n.getElementsByTagName("bumpuserscale")[0].firstChild.nodeValue)}if(n.getElementsByTagName("basetexture").length){X=n.getElementsByTagName("basetexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_BASETEX)}}M.basecolor=n.getElementsByTagName("basecolour")[0].firstChild.nodeValue.split(",");if(n.getElementsByTagName("refractscale").length){M.refractscale=parseFloat(n.getElementsByTagName("refractscale")[0].firstChild.nodeValue)}if(n.getElementsByTagName("refractthinness").length){M.refractthinness=parseFloat(n.getElementsByTagName("refractthinness")[0].firstChild.nodeValue)}if(n.getElementsByTagName("transmissiontexture").length){X=n.getElementsByTagName("transmissiontexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_TRANSMISSIONTEX)}}M.transmissioncolor=n.getElementsByTagName("transmissioncolour")[0].firstChild.nodeValue.split(",");if(n.getElementsByTagName("exposure").length){M.exposure=n.getElementsByTagName("exposure")[0].firstChild.nodeValue.split(",")}if(n.getElementsByTagName("glowbias").length){M.glowbias=n.getElementsByTagName("glowbias")[0].firstChild.nodeValue.split(",")}if(n.getElementsByTagName("_2ndref").length){M._2ndref=n.getElementsByTagName("_2ndref")[0].firstChild.nodeValue.split(",")}}else{if(M.type=="Indirect"){M._strMaterialPtr=n.getElementsByTagName("materialptr")[0].firstChild.nodeValue}else{if(M.type=="Modular"){M._fragheaderinsert=n.getElementsByTagName("fragheaderinsert")[0].firstChild.nodeValue;M._fraginsert=n.getElementsByTagName("fraginsert")[0].firstChild.nodeValue;M._transparent=(n.getElementsByTagName("transparent")[0].firstChild.nodeValue!="0");M._unis=[];var P=n.getElementsByTagName("uniform");for(var S=0;S<P.length;S++){var ad=P[S];M._unis.push({name:ad.getElementsByTagName("name")[0].firstChild.nodeValue,type:ad.getElementsByTagName("type")[0].firstChild.nodeValue,val:ad.getElementsByTagName("val")[0].firstChild.nodeValue})}}else{console.log("Material "+Y+" of Type "+M.type+" is not supported")}}}}}}}}if(n.getElementsByTagName("mipmapbias").length){M.mipmapbias=parseFloat(n.getElementsByTagName("mipmapbias")[0].firstChild.nodeValue)}if(n.getElementsByTagName("highlightcompression").length){M.highlightcompression=parseFloat(n.getElementsByTagName("highlightcompression")[0].firstChild.nodeValue)}if(n.getElementsByTagName("vignetting").length){M.vignetting=parseFloat(n.getElementsByTagName("vignetting")[0].firstChild.nodeValue)}if(n.getElementsByTagName("gamma").length){M.gamma=parseFloat(n.getElementsByTagName("gamma")[0].firstChild.nodeValue)}if(n.getElementsByTagName("hdribias").length){M.hdribias=parseInt(n.getElementsByTagName("hdribias")[0].firstChild.nodeValue)}if(n.getElementsByTagName("luttexture").length){X=n.getElementsByTagName("luttexture")[0].firstChild.nodeValue;if(typeof(V._Texture_ref[X])!="undefined"){M.setTexture(V._Texture_ref[X],TEXTURE_MAP_LUTTEX)}}M._requiresTangents=(typeof(M.textures[TEXTURE_MAP_BUMPTEX])!="undefined")||M.sphericalwhirl||(M.type=="Indirect")||(M.type=="Modular");if(V.isChrome){M.compile()}}for(var ag=0;ag<V._Materials.length;ag++){var M=V._Materials[ag];if(M.type=="Indirect"){M._pMaterialPtr=V._Material_ref[M._strMaterialPtr]}}V.name="root";V.children=[];var z=D.getElementsByTagName("root");var H=z[0].getElementsByTagName("archive");V._usingarchives=(H.length>0);V.recurseParseSceneNode(b._scene,z[0],b._scene);if(V._usingarchives){V.loadTAR(V.urlRoot+H[0].firstChild.nodeValue)}if(x[0].getElementsByTagName("bbmaxObjz").length){V._bbmaxObjz=parseFloat(x[0].getElementsByTagName("bbmaxObjz")[0].firstChild.nodeValue)}V.o_matrix=infinityrt_identity.slice(0);V.prepareTexId=V._TextureObjs.length;V._totaljobs+=V._TextureObjs.length;if(!V.isChrome){V._batchMaterialIdx=0;var O=V._InitialMaterials;V._InitialMaterials=[];for(var A in O){V._InitialMaterials.push(V._Materials[A]);V._outstandingjobs++}V._outstandingjobs++;var r=function(){V.BatchCompileMaterials()};setTimeout(r,0)}else{if(V._inlineGPULoading!=-1){for(var A in V._InitialMaterials){var M=V._Materials[A];(function(k){setTimeout(function(){k.InitAttribsAndUniforms(0)},k.scene._inlineGPULoading)})(M)}}}V._outstandingjobs--;V._projectparsed=true};check_webp_feature("lossy",function(l,k){b._scene._bSupportsWebP=k;b.send("")},this);return this};infinityrt_scene.prototype.processTARFile=function(e){var g=e;var f=this.mapMeshFiles[g.name];if(f&&f.compresseddata==null){var b=new FileReader();b.onload=function(){f.compresseddataresponse=this.result;f.compresseddata=new Uint8Array(this.result);if(f.blksd!=0){var c=new ScrRand(f.blksd);var a=this.result.byteLength-(this.result.byteLength%4);var j,i=4;for(var d=0;d<a;d++){if(i>3){j=c.uint32();i=0}f.compresseddata[d]^=(j>>>(i++*8))&255}}if(!f.defer){f._scene.decodeGeometry(f)}};b.readAsArrayBuffer(g.blob)}};infinityrt_scene.prototype.loadTAR=function(b){var a=new XMLHttpRequest();a.scene=this;a.open("GET",b,true);if(!this._usingwkwebview){a.responseType="arraybuffer"}a.onload=function(c){if(a.scene._usingwkwebview||a.status==200){untar(a.response).then(function(d){},function(d){console.log("TAR Error: "+d)},function(d){a.scene.processTARFile(d)})}};a.send("")};function slowinout(a,b){var c=Math.abs(a-0.5)*2;c=Math.pow(c,b);c=(c*0.5)+0.5;if(a<0.5){c=1-c}return c}infinityrt_scene.prototype.evaluateSceneNode=function(e,f){var j;if(f.onSample!=null){var k=(f.endinput-f.startinput);if(k==0){k=1}var g=(f.currentinput-f.startinput)/k;j=f.onSample(g);j=j*k+f.startinput}else{j=slowinout(f.currentinput,this._slowinoutfac)}var a,b;e.matrix=infinityrt_identity.slice(0);for(var h=0;h<f.transforms.length;h++){var d=f.transforms[h];var i=false;b=infinityrt_identity.slice(0);for(var l=0;l<f.curves.length;l++){var c=f.curves[l];if(h!=c._transformidx){continue}i=true;a=infinityrt_identity;var m=evaluateAnimationCurve(c,j);if(d._type=="translation"){if(c._qualifier==".X"){a=MatrixTranslation(m,0,0)}else{if(c._qualifier==".Y"){a=MatrixTranslation(0,m,0)}else{if(c._qualifier==".Z"){a=MatrixTranslation(0,0,m)}}}}else{if(d._type=="rotation"){a=MatrixRotationAxis(m/180*M_PI,d.x,d.y,d.z)}else{if(d._type=="scale"){if(c._qualifier==".X"){a=MatrixScaling(m,1,1)}else{if(c._qualifier==".Y"){a=MatrixScaling(1,m,1)}else{if(c._qualifier==".Z"){a=MatrixScaling(1,1,m)}}}}}}b=MatrixMultiply(a,b)}if(!i){if(d._type=="translation"){b=MatrixTranslation(d.x,d.y,d.z)}else{if(d._type=="rotation"){b=MatrixRotationAxis(d._angle/180*M_PI,d.x,d.y,d.z)}else{if(d._type=="scale"){b=MatrixScaling(d.x,d.y,d.z)}}}}e.matrix=MatrixMultiply(b,e.matrix)}};function FindT(i,e,l,g,j,h){var f=0.001;var c=1;var k=0;var m=0.5;if(h<=0.1){m=0.1}else{if(h>=0.9){m=0.9}else{m=h}}var b=true;while((c-k)>f){if(b){b=false}else{m=(c-k)/2+k}var a=1-m;var d=i*a*a*a+3*e*m*a*a+3*l*m*m*a+g*m*m*m;if(Math.abs(d-j)<=f){break}if(d>j){c=m}else{k=m}}return m}function evaluateAnimationCurve(i,e){if(i._keys.length==0){return 0}if(i._keys.length==1){return i._keys[0]._output}var H=i._keys[0]._input;var M=i._keys[i._keys.length-1]._input;var z=M-H;var o=i._keys[0]._output;var l=i._keys[i._keys.length-1]._output;var j=l-o;var p=0;if(e<H){var a=H-e;switch(i._preInfinity){case FANIM_INFINITY_CONSTANT:return o;case FANIM_INFINITY_LINEAR:return o+a*(i._keys[1]._output-o)/(i._keys[1]._input-H);case FANIM_INFINITY_CYCLE:var G=Math.ceil(a/z);e+=G*z;break;case FANIM_INFINITY_CYCLE_RELATIVE:var G=Math.ceil(a/z);e+=G*z;p-=G*j;break;case FANIM_INFINITY_OSCILLATE:var G=Math.ceil(a/(2*z));e+=G*2*z;e=M-Math.abs(e-M);break;default:return o}}else{if(e>=M){var a=e-M;switch(i._postInfinity){case FANIM_INFINITY_CONSTANT:return l;case FANIM_INFINITY_LINEAR:return l+a*(i._keys[i._keys.length-2]._output-l)/(i._keys[i._keys.length-2]._input-M);case FANIM_INFINITY_CYCLE:var G=Math.ceil(a/z);e-=G*z;break;case FANIM_INFINITY_CYCLE_RELATIVE:var G=Math.ceil(a/z);e-=G*z;p+=G*j;break;case FANIM_INFINITY_OSCILLATE:var G=Math.ceil(a/(2*z));e-=G*2*z;e=H+Math.abs(e-H);break;default:return l}}}var k;for(k=0;k<i._keys.length;k++){if(i._keys[k]._input>=e){break}}if(k==0){return p+o}var I=i._keys[k-1];var h=i._keys[k];var g=h._input-I._input;var B=h._output-I._output;var y;switch(I._interpolation){case FANIM_INTERPOLATION_LINEAR:y=I._output+(e-I._input)/g*B;break;case FANIM_INTERPOLATION_BEZIER:if(h._interpolation==FANIM_INTERPOLATION_LINEAR){y=I._output+(e-I._input)/g*B;break}if(h._interpolation==FANIM_INTERPOLATION_STEP){y=I._output;break}var q=I;var K=[0,0];if(h._interpolation==FANIM_INTERPOLATION_BEZIER){K[0]=h._inTangent[0];K[1]=h._inTangent[1]}else{if(h._interpolation==FANIM_INTERPOLATION_TCB){var v=h;var u=[0,0];var m=(k+1)<i._keys.length?i._keys[k+1]:null;computeTCBTangent(I,h,m,v._tension,v._continuity,v._bias,K,u);K[0]=h._input+K[0];K[1]=h._output+K[1]}}var E=(e-I._input)/g;if(i._is2DCurveEvaluation){E=FindT(q._input,q._outTangent[0],K[0],h._input,e,E)}var L=q._outTangent[1];var J=K[1];var d=1-E;var F=3;var x=3;if(!i._is2DCurveEvaluation){F=g/(q._outTangent[0]-I._input);x=g/(h._input-K[0]);if(F<0.01){F=0.01}else{if(F>100){F=100}}if(x<0.01){x=0.01}else{if(x>100){x=100}}}y=I._output*d*d*d+F*L*d*d*E+x*J*d*E*E+h._output*E*E*E;break;case FANIM_INTERPOLATION_TCB:if(h._interpolation==FANIM_INTERPOLATION_LINEAR){y=I._output+(e-I._input)/g*B;break}if(h._interpolation==FANIM_INTERPOLATION_STEP){y=I._output;break}var w=I;var f=Array(),u=Array(),n=Array();f[0]=f[1]=u[0]=u[1]=n[0]=n[1]=0;var A=(k-1)>0?i._keys[k-2]:null;computeTCBTangent(A,I,h,w._tension,w._continuity,w._bias,u,f);var C=0,r=0;var D=0,s=0;if(h._interpolation==FANIM_INTERPOLATION_TCB){var v=h;var m=(k+1)<i._keys.length?i._keys[k+1]:null;computeTCBTangent(I,h,m,v._tension,v._continuity,v._bias,n,u);r=h._output+n[1];s=h._output+n[0]}else{if(h._interpolation==FANIM_INTERPOLATION_BEZIER){var v=h;n[0]=v._inTangent[0];n[1]=v._inTangent[1];r=n[1];s=n[0]}}var E=(e-H)/g;C=I._output-f[1];D=I._input-f[0];if(i._is2DCurveEvaluation){E=FindT(w._input,D,s,h._input,e,E)}var d=1-E;y=I._output*d*d*d+3*C*E*d*d+3*r*E*E*d+h._output*E*E*E;break;case FANIM_INTERPOLATION_STEP:default:y=I._output;break}return p+y}function computeTCBTangent(j,i,k,b,n,d,m,e){if(i==null){return}var a=Array();var l=Array();if(!j){if(k){a[0]=k._input-i._input}else{a[0]=0.5}a[1]=0}else{a[0]=j._input-i._input;a[1]=j._output-i._output}if(!k){if(j){l[0]=i._input-j._input}else{l[0]=0.5}l[1]=0}else{l[0]=k._input-i._input;l[1]=k._output-i._output}var h=((1-b)*(1-n)*(1+d))/2;var g=((1-b)*(1+n)*(1-d))/2;var f=((1-b)*(1+n)*(1+d))/2;var c=((1-b)*(1-n)*(1-d))/2;m[0]=h*a[0]+g*l[0];m[1]=h*a[1]+g*l[1];e[0]=f*a[0]+c*l[0];e[1]=f*a[1]+c*l[1]}infinityrt_scene.prototype.DetermineBrowser=function(){this.isOpera=(!!window.opr&&!!opr.addons)||!!window.opera||navigator.userAgent.indexOf(" OPR/")>=0;this.isFirefox=typeof InstallTrigger!=="undefined";this.isSafari=Object.prototype.toString.call(window.HTMLElement).indexOf("Constructor")>0||(function(p){return p.toString()==="[object SafariRemoteNotification]"})(!window.safari||safari.pushNotification);this.isIE=
/*@cc_on!@*/
false||!!document.documentMode;this.isEdge=!this.isIE&&!!window.StyleMedia;this.isChrome=!!window.chrome&&!!window.chrome.webstore;this.isBlink=(this.isChrome||this.isOpera)&&!!window.CSS};infinityrt_scene.prototype.getExtension=function(b){var a=["","WEBKIT_","MOZ_"];var d=null;for(var c in a){d=this.gl.getExtension(a[c]+b);if(d){break}}return d};infinityrt_scene.prototype.setBackgroundTransparent=function(a){this._backgroundTransparent=!!a;if(!this._backgroundTransparent){this.gl.clearColor(this._backgroundColor[0],this._backgroundColor[1],this._backgroundColor[2],1)}else{this.gl.clearColor(0,0,0,0)}};infinityrt_scene.prototype.resetCounts=function(){this._refineCount=-1;this._aapasses=1};infinityrt_scene.prototype.recalcSceneRadius=function(){this.recurseCalcMidPtAndSceneExtents(this,infinityrt_identity.slice(0));var a=Math.sqrt(this._bbmax[0]*this._bbmax[0]+this._bbmax[1]*this._bbmax[1]+this._bbmax[2]*this._bbmax[2]);var b=Math.sqrt(this._bbmin[0]*this._bbmin[0]+this._bbmin[1]*this._bbmin[1]+this._bbmin[2]*this._bbmin[2]);this.sceneRadius=(a>b)?a:b};infinityrt_scene.prototype.start=function(){var b=this;if(b._started){return}if(b._outstandingjobs>0){var c=function(){b.start()};setTimeout(c,100);return}if(b._lstNonDepthObjects.length>0){var g=[-1000000,-1000000,-1000000];var a=[1000000,1000000,1000000];for(var f=0;f<b._lstNonDepthObjects.length;f++){b._lstNonDepthObjects[f].mesh.loadToCard(b);for(var e=0;e<3;e++){if(b._lstNonDepthObjects[f].mesh._localbbmax[e]>g[e]){g[e]=b._lstNonDepthObjects[f].mesh._localbbmax[e]}if(b._lstNonDepthObjects[f].mesh._localbbmin[e]<a[e]){a[e]=b._lstNonDepthObjects[f].mesh._localbbmin[e]}}}var h=Math.sqrt(g[0]*g[0]+g[1]*g[1]+g[2]*g[2]);var d=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);b.sceneRadiusNonDepth=(h>d)?h:d}b.recurseShowMesh(b,true);b.resetCounts();b.initTextureFramebuffer();if(b._localfiles){for(var f=0;f<b._TextureObjs.length;f++){b._TextureObjs[f].startFileDownloads()}}b.recalcSceneRadius();b._started=true};infinityrt_scene.prototype.BatchCompileMaterials=function(){var a=this;for(var b=0;b<1;b++){if(a._batchMaterialIdx>=a._InitialMaterials.length){a._outstandingjobs--;a._InitialMaterials=null;return}a._InitialMaterials[a._batchMaterialIdx].InitAttribsAndUniforms(0);a._outstandingjobs--;a._batchMaterialIdx++}var c=function(){a.BatchCompileMaterials()};setTimeout(c,0)};infinityrt_scene.prototype.stop=function(){for(var a=0;a<this._Materials.length;a++){this._Materials[a].unload()}for(var a=0;a<this._TextureObjs.length;a++){this._TextureObjs[a].unload()}this._Images=[];for(var a=0;a<this._lstNonDepthObjects.length;a++){this._lstNonDepthObjects[a].mesh.loadToCard(this)}this.recurseShowMesh(this,false);this.unloadTextureFramebuffer();this._started=false};infinityrt_scene.prototype.freeGPUTexs=function(){for(var a=0;a<this._TextureObjs.length;a++){this._TextureObjs[a].unloadGPU()}};infinityrt_scene.prototype.recurseCalcMidPtAndSceneExtents=function(b,h){if(typeof(b.matrix)!="undefined"){h=MatrixMultiply(b.matrix,h)}var g=b.mesh;if(g!=null){var f=new infinityrt_transform();var a=f.multiply1_3by4_4(g._localbbmax,h),e=f.multiply1_3by4_4(g._localbbmin,h);for(var d=0;d<3;d++){if(a[d]>this._bbmax[d]){this._bbmax[d]=a[d]}if(e[d]<this._bbmin[d]){this._bbmin[d]=e[d]}}}if(typeof(b.children)!="undefined"){for(var c=0;c<b.children.length;c++){this.recurseCalcMidPtAndSceneExtents(b.children[c],h)}}};infinityrt_scene.prototype.recurseSetVisible=function(a,c){a.visible=c;if(typeof(a.children)!="undefined"){for(var b=0;b<a.children.length;b++){this.recurseSetVisible(a.children[b],c)}}};infinityrt_scene.prototype.recurseShowMesh=function(a,c){if(a.mesh!=null){if(c){if(!a.meshShow){a.meshShow=true;a.mesh.numinstances++;a.mesh.loadToCard(this)}}else{if(a.meshShow){a.meshShow=false;a.mesh.numinstances--;if(a.mesh.numinstances==0){a.mesh.unload(this)}}}}if(typeof(a.children)!="undefined"){for(var b=0;b<a.children.length;b++){this.recurseShowMesh(a.children[b],c)}}};infinityrt_scene.prototype.recurseParseSceneNode=function(h,b,m){var k="0|0";for(var d=0;d<b.childNodes.length;d++){var g=b.childNodes[d];if(g.tagName=="defer"){h.defer=g.childNodes[0].nodeValue}}for(var d=0;d<b.childNodes.length;d++){var g=b.childNodes[d];if(g.tagName=="polygonoffset"){h._fPolygonOffset=parseFloat(g.childNodes[0].nodeValue)}else{if(g.tagName=="alphaoffset"){h._fAlphaOffset=parseFloat(g.childNodes[0].nodeValue)}else{if(g.tagName=="excludefromdepth"){this._lstNonDepthObjects.push(h);m.children.pop();if(typeof(m.childrenNonDepth)=="undefined"){m.childrenNonDepth=[]}m.childrenNonDepth.push(h)}else{if(g.tagName=="usematerial"){k=XMLGetNodeText(g);var e=k.split(",");var l=parseInt(e[0].split("|")[1]);this._InitialMaterials[l]=l}else{if(g.tagName=="localbbox"){if(typeof(g.childNodes[0])!="undefined"&&typeof(h.mesh)!="undefined"){var i=g.childNodes[0].nodeValue.split(",");h.mesh._localbbmin=[];h.mesh._localbbmax=[];h.mesh._localbbmin[0]=parseFloat(i[0]);h.mesh._localbbmin[1]=parseFloat(i[1]);h.mesh._localbbmin[2]=parseFloat(i[2]);h.mesh._localbbmax[0]=parseFloat(i[3]);h.mesh._localbbmax[1]=parseFloat(i[4]);h.mesh._localbbmax[2]=parseFloat(i[5]);h.mesh.calcMidPt()}}else{if(g.tagName=="geometry_file"){var c=0;if(g.hasAttribute("blksd")){c=g.getAttribute("blksd")}var a=g.childNodes[0].nodeValue;if(typeof(this.mapMeshFiles)=="undefined"){this.mapMeshFiles=[]}if(typeof(this.mapMeshFiles[a])=="undefined"){this.mapMeshFiles[a]=this.loadMesh(a,k,h.defer,c)}h.mesh=this.mapMeshFiles[a];h.meshShow=false}else{if(g.tagName=="object"){var f=new infinityrt_instance(h,this);f.defer=h.defer;h.children.push(f);this.recurseParseSceneNode(f,g,h)}else{if(g.tagName=="name"){if(typeof(g.childNodes[0])!="undefined"){h.name=g.childNodes[0].nodeValue}}else{if(g.tagName=="matrix"){h.matrix=g.childNodes[0].nodeValue.split(" ");h.matrix[12]*=this._SceneScale;h.matrix[13]*=this._SceneScale;h.matrix[14]*=this._SceneScale}else{if(g.tagName=="visible"){h.visible=g.childNodes[0].nodeValue}else{if(g.tagName=="visibleRefract"){h.visibleRefract=true;this.lstRefractionNodes.push(h)}else{if(g.tagName=="visibleGlow"){h.visibleGlow=parseInt(g.childNodes[0].nodeValue);if(h.visibleGlow==1){this.lstGlowNodes.push(h)}}else{if(g.tagName=="visibleplanarreflect"){h._bIncludeInPlanarReflect=true;this._lstPlanarReflectNodes.push(h)}else{if(g.tagName=="doublesided"){h.doublesided=(g.childNodes[0].nodeValue=="1")}else{if(g.tagName=="anim"){h.anim=new infinityrt_anim();this.loadAnim(h,g)}}}}}}}}}}}}}}}}};infinityrt_scene.prototype.loadAnim=function(o,a){for(var i=0;i<a.childNodes.length;i++){var p=a.childNodes[i];if((p.tagName=="translation")||(p.tagName=="rotation")||(p.tagName=="scale")){var n=(p.tagName=="translation")?this._SceneScale:1;var d=new Object();d._type=p.tagName;d._angle=0;o.anim.transforms.push(d);for(var g=0;g<p.childNodes.length;g++){var q=p.childNodes[g];if(q.tagName=="x"){d.x=parseFloat(q.childNodes[0].nodeValue*n)}else{if(q.tagName=="y"){d.y=parseFloat(q.childNodes[0].nodeValue*n)}else{if(q.tagName=="z"){d.z=parseFloat(q.childNodes[0].nodeValue*n)}else{if(q.tagName=="curve"){var c=new Object();c._keys=[];o.anim.curves.push(c);c._transformidx=o.anim.transforms.length-1;for(var f=0;f<q.childNodes.length;f++){var b=q.childNodes[f];if(b.tagName=="name"){c._name=b.childNodes[0].nodeValue}else{if(b.tagName=="qualifier"){c._qualifier=b.childNodes[0].nodeValue}else{if(b.tagName=="preInfinity"){c._preInfinity=parseInt(b.childNodes[0].nodeValue)}else{if(b.tagName=="postInfinity"){c._postInfinity=parseInt(b.childNodes[0].nodeValue)}else{if(b.tagName=="is2DCurveEvaluation"){c._is2DCurveEvaluation=parseInt(b.childNodes[0].nodeValue)}else{if(b.tagName=="key"){var r=new Object();r._inTangent=Array();r._outTangent=Array();c._keys.push(r);for(var e=0;e<b.childNodes.length;e++){var h=b.childNodes[e];if(h.tagName=="input"){r._input=parseFloat(h.childNodes[0].nodeValue)}else{if(h.tagName=="output"){r._output=parseFloat(h.childNodes[0].nodeValue*n)}else{if(h.tagName=="interpolation"){r._interpolation=parseInt(h.childNodes[0].nodeValue)}else{if(h.tagName=="inTangentX"){r._inTangent[0]=parseFloat(h.childNodes[0].nodeValue)}else{if(h.tagName=="inTangentY"){r._inTangent[1]=parseFloat(h.childNodes[0].nodeValue)}else{if(h.tagName=="outTangentX"){r._outTangent[0]=parseFloat(h.childNodes[0].nodeValue)}else{if(h.tagName=="outTangentY"){r._outTangent[1]=parseFloat(h.childNodes[0].nodeValue)}}}}}}}}}}}}}}}}}}}}}}};infinityrt_scene.prototype.decodeGeometry=function(f){try{if(f._meshURL.endsWith(".raw")){var n=new CTM.Stream(f.compresseddata);var l=n.readInt32();f.addPoints(new Float32Array(f.compresseddataresponse,n.offset,l));n.offset+=l*4;var a=n.readInt32();f.addNormals(new Float32Array(f.compresseddataresponse,n.offset,a));n.offset+=a*4;var h=n.readInt32();f.addUVs(new Float32Array(f.compresseddataresponse,n.offset,h));n.offset+=h*4;var d=f.usematerial.split(",");var j=parseInt(d[0].split("|")[1]);f.setFaceMaterial(j);var o=f._scene._Materials[j];var k=n.readInt32();f.addIndices(new Uint32Array(f.compresseddataresponse,n.offset,k));n.offset+=k*4}else{var c=new CTM.File(new CTM.Stream(f.compresseddata));if(this._SceneScale!=1){for(var b=0;b<c.body.vertices.length;b++){c.body.vertices[b]*=this._SceneScale}}f.addPoints(c.body.vertices);f.addNormals(c.body.normals);if(c.body.uvMaps!==undefined&&c.body.uvMaps.length>0){f.addUVs(c.body.uvMaps[0].uv)}var d=f.usematerial.split(",");var j=parseInt(d[0].split("|")[1]);f.setFaceMaterial(j);var o=f._scene._Materials[j];var m=c.body.indices;f.addIndices(m)}if(o._requiresTangents){f.CalcSurfTangents()}else{if(o.type=="Match"){f.CreateDummySurfTangents()}}}catch(g){console.log("***ERROR: Loading Mesh '"+f.meshUrl+"' "+g)}if(!f.defer){f._scene._outstandingjobs--;if(f._scene._inlineGPULoading!=-1){(function(e){setTimeout(function(){e.loadToCard(e._scene)},e._scene._inlineGPULoading)})(f)}}else{if(f._scene._started){f.loadToCard(f._scene);f._scene.clearRefine();f.deferObj._outstandingdeferred--}}f.compresseddata=null;f.meshloaded=true};infinityrt_scene.prototype.loadMesh=function(b,a,f,e){var d=new infinityrt_object();d.numinstances=0;d._scene=this;d.usematerial=a;d.defer=f;d.meshloaded=false;d.blksd=e;d._meshURL=b;if(!this._usingarchives){var c=new XMLHttpRequest();c._meshURL=b;c._obj=d;c.urlRoot=this.urlRoot;c.open("GET",this.urlRoot+b,true);c.responseType="arraybuffer";c.blksd=e;c.onabort=function(){setTimeout(function(){var g=c.urlRoot;c=new XMLHttpRequest();d._meshURL=c._meshURL=b;c._obj=d;c.open("GET",g+b,true);c.responseType="arraybuffer";c.blksd=e;c.onload=function(n){if(d._scene._usingwkwebview||c.status==200){d.compresseddataresponse=c.response;d.compresseddata=new Uint8Array(c.response);if(c.blksd!=0){var m=new ScrRand(c.blksd);var o=c.response.byteLength-(c.response.byteLength%4);var h,k=4;for(var l=0;l<o;l++){if(k>3){h=m.uint32();k=0}d.compresseddata[l]^=(h>>>(k++*8))&255}}if(!d.defer){d._scene.decodeGeometry(d)}}};c.send("")},20)};c.onerror=function(){setTimeout(function(){var g=c.urlRoot;c=new XMLHttpRequest();d._meshURL=c._meshURL=b;c._obj=d;c.open("GET",g+b,true);c.responseType="arraybuffer";c.blksd=e;c.onload=function(n){if(d._scene._usingwkwebview||c.status==200){d.compresseddataresponse=c.response;d.compresseddata=new Uint8Array(c.response);if(c.blksd!=0){var m=new ScrRand(c.blksd);var o=c.response.byteLength-(c.response.byteLength%4);var h,k=4;for(var l=0;l<o;l++){if(k>3){h=m.uint32();k=0}d.compresseddata[l]^=(h>>>(k++*8))&255}}if(!d.defer){d._scene.decodeGeometry(d)}}};c.send("")},20)};c.onload=function(m){if(d._scene._usingwkwebview||c.status==200){d.compresseddataresponse=c.response;d.compresseddata=new Uint8Array(c.response);if(c.blksd!=0){var l=new ScrRand(c.blksd);var n=c.response.byteLength-(c.response.byteLength%4);var g,h=4;for(var k=0;k<n;k++){if(h>3){g=l.uint32();h=0}d.compresseddata[k]^=(g>>>(h++*8))&255}}if(!d.defer){setTimeout(function(){d._scene.decodeGeometry(d)},300)}}}}if(!d.defer){this._outstandingjobs++;this._totaljobs++;if(!this._usingarchives){c.send("")}}else{if(this._lstDeferredGrps==null){this._lstDeferredGrps=[]}if(this._lstDeferredGrps[d.defer]==null){d.deferObj=this._lstDeferredGrps[d.defer]={};d.deferObj.lstGeoms=[];d.deferObj._outstandingdeferred=0}else{d.deferObj=this._lstDeferredGrps[d.defer]}d.deferObj.lstGeoms.push(c);d.deferObj._outstandingdeferred++}return d};infinityrt_scene.prototype.forceAA=function(a){this._bAllowDirectRender=!a};infinityrt_scene.prototype.force1kTexFallback=function(a){this._bForce1kTexFallback=a};infinityrt_scene.prototype.forceNoCompressedTexs=function(a){this._bNoCompressedTexs=a};infinityrt_scene.prototype.prepare=function(){if(this._prepared){return true}if(this.prepareTexId==0){this._prepared=true;return true}this._TextureObjs[--this.prepareTexId].refresh();return false};var now=(function(){var a=window.performance||{};a.now=(function(){return a.now||a.webkitNow||a.msNow||a.oNow||a.mozNow||function(){return new Date().getTime()}})();return a.now()});infinityrt_scene.prototype.checkaapasses=function(a){if(a<50){this._aapasses++}else{if(a>100){this._aapasses--}}if(this._aapasses<1){this._aapasses=1}else{if(this._aapasses>5){this._aapasses=5}}};infinityrt_scene.prototype.resize=function(a,b){this.viewwidth=a;this.viewheight=b;this.unloadTextureFramebuffer();this.buffProgressRefineScaledCoords=undefined;this.buffProgressRefineCoords=undefined;this.initTextureFramebuffer();this.clearRefine()};infinityrt_scene.prototype.getProjectionMatrix=function(d){var g=infinityrt_length(this.camPos);var f=g-d;if(f<this._zNearMin){f=this._zNearMin}var c=g+d;var e=this.fovy;if(this._flipFoVonAspectSwap&&this.viewheight>this.viewwidth){var a=(this.fovy/180)*M_PI;var b=2*Math.atan(Math.tan(a*0.5)*(this.viewheight/this.viewwidth));e=(b/M_PI)*180}return infinityrt_perspective(e,this.viewwidth/this.viewheight,f,c)};infinityrt_scene.prototype.draw=function(){if(!this._started){return false}if(this._outstandingjobs>0){return false}if(!this.prepare()){return false}var e=now();this.camPos=[parseFloat(this.matView[12])*this._SceneScale,parseFloat(this.matView[13])*this._SceneScale,parseFloat(this.matView[14])*this._SceneScale];this.camPosGlobal=this.camPos;this.camPosGlobal=infinityrt_vertex_scladd(this.camPosGlobal,[this.matView[0],this.matView[1],this.matView[2]],this._nav._navPan[0]*this._SceneScale);this.camPosGlobal=infinityrt_vertex_scladd(this.camPosGlobal,[this.matView[4],this.matView[5],this.matView[6]],this._nav._navPan[1]*this._SceneScale);this.camPosGlobal=this.RestrictViewSpace(this.camPosGlobal);var d=[this.matView[12]*this._SceneScale-this.matView[8],this.matView[13]*this._SceneScale-this.matView[9],this.matView[14]*this._SceneScale-this.matView[10]];var a=[this.matView[4],this.matView[5],this.matView[6]];this.mv_matrix=infinityrt_lookat(this.camPos,d,a,this._nav._navPan,this._SceneScale,this);this.p_matrix=this.getProjectionMatrix(this.sceneRadius);this._animRequiresClear=false;this._animEval=true;this.mvp_matrix=MatrixMultiply(this.mv_matrix,this.p_matrix);if((!!mdown)||(!!this._nav._navGotoPosActive)){this._refineCount=-1}if(this._bAllowDirectRender&&this._refineCount==-1){this.currentFrameBuffer=null;this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null);this.gl.viewport(0,0,this.viewwidth,this.viewheight);this.renderScene();this._animEval=false;this._refineCount++}else{for(var f=0;f<this._aapasses&&this._refineCount<64;f++){this.currentFrameBuffer=this.rttFramebuffer;this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.rttFramebuffer);this.gl.viewport(0,0,this.viewwidth,this.viewheight);this.renderScene();this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.rttAccumFramebufferCurrent);this.gl.viewport(0,0,this.viewwidth,this.viewheight);var g=(this._bAllowDirectRender)?1/(1+this._refineCount):1/(2+this._refineCount);this.renderRefinement(this.rttTexture,this.rttAccumTextureSource,g,false,0);if(this.rttAccumFramebufferCurrent==this.rttAccumFramebufferA){this.rttAccumTextureSource=this.rttAccumTextureA;this.rttAccumFramebufferCurrent=this.rttAccumFramebufferB}else{this.rttAccumTextureSource=this.rttAccumTextureB;this.rttAccumFramebufferCurrent=this.rttAccumFramebufferA}this._animEval=false;this._refineCount++}this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null);this.gl.viewport(0,0,this.viewwidth,this.viewheight);this.renderRefinement(this.rttAccumTextureSource,this.rttAccumTextureSource,1,true,(this._refineCount>10)?this._fSharpenScale:0)}if(this._animRequiresClear){this.recalcSceneRadius();this.clearRefine()}this.gl.finish();if(this._refineCount<64){var b=now();this.checkaapasses(b-e)}if(this.autoDLAllDeferredGrps&&this._lstDeferredGrps!=null&&!this._AllDeferredSent){this._AllDeferredSent=true;for(var c in this._lstDeferredGrps){this.downloadDeferredGeometry(this._lstDeferredGrps[c])}}if(this._TextureToLvl0!=null){for(var c=0;c<this._TextureToLvl0.length;c++){this._TextureToLvl0[c].loadrtex(0)}this._TextureToLvl0=null}return true};infinityrt_scene.prototype.downloadDeferredGeometry=function(b){if(b._DeferredSent){return}b._DeferredSent=true;for(var a=0;a<b.lstGeoms.length;a++){b.lstGeoms[a].send("")}};infinityrt_scene.prototype.decodeDeferredGeometry=function(a){if(!this._AllDeferredSent){return false}var c=this._lstDeferredGrps[a];if(c==null){return false}if(!c._DeferredSent){return false}if(c._outstandingdeferred==0){return false}for(var b=0;b<c.lstGeoms.length;b++){if(c.lstGeoms[b]._obj.compresseddata!=null){this.decodeGeometry(c.lstGeoms[b]._obj)}}return true};infinityrt_scene.prototype.setViewMatrix=function(a){this.matView=a};infinityrt_scene.prototype.setModelMatrix=function(a){this.mHierModel=a};infinityrt_scene.prototype.HMXRandom=function(a){var b=a[this._nRandomIdx];if(this._nRandomIdx>a.length-1){this._nRandomIdx=0}return b};infinityrt_scene.prototype.IsFirstFrameAA=function(){return(this._bAllowDirectRender&&this._refineCount<=0)||(!this._bAllowDirectRender&&this._refineCount==-1)};infinityrt_scene.prototype.renderScene=function(){this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);if(this._refineCount<=0&&this._animEval){this.walkForMatrices(this,this.mHierModel,true)}if(this.IsFirstFrameAA()){this._jitter[1]=this._jitter[0]=0;this._nRandomIdx=0}else{this._jitter[0]=this._jitRadius*(this.HMXRandom(this._jitx));this._jitter[1]=this._jitRadius*(this.HMXRandom(this._jity));this._nRandomIdx++;this._jitter[0]/=this.viewwidth;this._jitter[1]/=this.viewheight}if(this._renderpickenabled){this.renderPick()}if(this.lstRefractionNodes.length>0){this.renderRefractionTexture()}if(this._lstPlanarReflectNodes.length>0){this.renderPlanarReflectionTexture()}if(this._bDoF&&(!this._animRequiresClear||!this._fastAnims)){this.renderDoF()}else{if(this._backdroptexturename.length>0){this.renderBackdrop()}if(this._lstNonDepthObjects.length>0){this._lstTransObjs=[];var b=this.p_matrix;this.p_matrix=this.getProjectionMatrix(this.sceneRadiusNonDepth);this.mvp_matrix=MatrixMultiply(this.mv_matrix,this.p_matrix);for(var a=0;a<this._lstNonDepthObjects.length;a++){this.renderOpaqueObject(this._lstNonDepthObjects[a])}this.RenderFoundTransparentNodes();this.p_matrix=b;this.mvp_matrix=MatrixMultiply(this.mv_matrix,this.p_matrix);this.gl.clear(this.gl.DEPTH_BUFFER_BIT)}if(this.fnPreDraw!=null){this.fnPreDraw()}this._lstTransObjs=[];this.renderOpaqueObject(this);this.RenderFoundTransparentNodes()}if(this.fnPostDraw!=null){this.fnPostDraw()}if(this.lstGlowNodes.length>0||this._glow_incbackground){this.renderGlowTexture()}};infinityrt_scene.prototype.RenderFoundTransparentNodes=function(){if(this._lstTransObjs.length==0){return}if(this._bOrderBasedTransparency){this.gl.depthMask(false)}if(this.hasBrightReflections){this.gl.blendFuncSeparate(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA,this.gl.ONE,this.gl.ONE)}else{this.gl.blendFuncSeparate(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA,this.gl.ONE,this.gl.ONE)}this.gl.enable(this.gl.BLEND);for(var a=0;a<this._lstTransObjs.length;a++){this.renderTransparentObject(this._lstTransObjs[a])}this.gl.disable(this.gl.BLEND);if(this._bOrderBasedTransparency){this.gl.depthMask(true)}};infinityrt_scene.prototype.walkForMatrices=function(a,d,b){if(typeof(a.anim)!="undefined"&&this._refineCount<=0&&this._animEval){if(a.anim.step()){this.evaluateSceneNode(a,a.anim);this._animRequiresClear=true}}if(a.visible==0){b=false}a.walkedVisible=b?1:0;if(typeof(a.matrix)!="undefined"){d=MatrixMultiply(a.matrix,d);if(typeof(a.usermatrix)!="undefined"){d=MatrixMultiply(a.usermatrix,d)}}a.ltog_matrix=d;if(typeof(a.children)!="undefined"){for(var c=0;c<a.children.length;c++){this.walkForMatrices(a.children[c],d,b)}}if(typeof(a.childrenNonDepth)!="undefined"){for(var c=0;c<a.childrenNonDepth.length;c++){this.walkForMatrices(a.childrenNonDepth[c],d,b)}}};infinityrt_scene.prototype.IfTransparentAddToList=function(a){var e=a.mesh;var d=new infinityrt_transform();var c=d.multiply1_3by4_4(e._localmidpt,a.ltog_matrix);var f=[];f[0]=this.camPosGlobal[0]-c[0];f[1]=this.camPosGlobal[1]-c[1];f[2]=this.camPosGlobal[2]-c[2];var g=infinityrt_dp(f,[this.matView[8],this.matView[9],this.matView[10]]);if(typeof(a._fAlphaOffset)!="undefined"){g+=a._fAlphaOffset*1000}var b=0;for(;b<this._lstTransObjs.length;b++){if(g>this._lstTransObjs[b].sqDist){break}}this._lstTransObjs.splice(b,0,{sqDist:g,obj:a,o_matrix:a.ltog_matrix,compiledelem:e.currentMaterial})};infinityrt_scene.prototype.renderOpaqueObject=function(a){var c=(a.visible!=0)&&!a._bIncludeInPlanarReflect;if(this._renderingPlanarReflectPass){c=(a.visible!=0)}if(!c){return}if(this._renderingGlowPass&&a.visibleGlow==-1){return}var b;var e=a.mesh;if(e!=null&&(!a.defer||e.meshloaded)){var f=MatrixDet(a.ltog_matrix);if(f<0){this.gl.cullFace(this.gl.FRONT)}else{this.gl.cullFace(this.gl.BACK)}if(a._fPolygonOffset!=0){this.gl.enable(this.gl.POLYGON_OFFSET_FILL);this.gl.polygonOffset(a._fPolygonOffset,a._fPolygonOffset)}if(a.doublesided){this.gl.disable(this.gl.CULL_FACE)}var d=this._Materials[e.currentMaterial];if(d._pMaterialPtr!=null){d=d._pMaterialPtr}if(this.CanRender(d,false)){this.RenderGeom(a,e,d,a.ltog_matrix,0)}else{this.IfTransparentAddToList(a)}if(a._fPolygonOffset!=0){this.gl.polygonOffset(0,0);this.gl.disable(this.gl.POLYGON_OFFSET_FILL)}if(a.doublesided){this.gl.enable(this.gl.CULL_FACE)}if(f<0){this.gl.cullFace(this.gl.BACK)}}if(typeof(a.children)!="undefined"){for(b=0;b<a.children.length;b++){this.renderOpaqueObject(a.children[b])}}};infinityrt_scene.prototype.renderTransparentObject=function(a){if(this._renderingGlowPass&&a.visibleGlow==-1){return}var c=a.obj.mesh;if(c!=null){var d=MatrixDet(a.o_matrix);if(d<0){this.gl.cullFace(this.gl.FRONT)}else{this.gl.cullFace(this.gl.BACK)}if(a.obj._fPolygonOffset!=0){this.gl.enable(this.gl.POLYGON_OFFSET_FILL);this.gl.polygonOffset(a.obj._fPolygonOffset,a.obj._fPolygonOffset)}if(a.obj.doublesided){this.gl.disable(this.gl.CULL_FACE)}var b=this._Materials[a.compiledelem];if(b._pMaterialPtr!=null){b=b._pMaterialPtr}this.RenderGeom(a.obj,c,b,a.o_matrix,0);if(a.obj._fPolygonOffset!=0){this.gl.polygonOffset(0,0);this.gl.disable(this.gl.POLYGON_OFFSET_FILL)}if(a.obj.doublesided){this.gl.enable(this.gl.CULL_FACE)}if(d<0){this.gl.cullFace(this.gl.BACK)}}};infinityrt_scene.prototype.renderGeom_MatInit=function(d,b,a,c,e){if(this._renderingGlowPass&&d.visibleGlow==0){this._prog_black.use();this._prog_black.setMatrix("uMVPMatrix",this.mvp_matrix);this._prog_black.setMatrix("uOMatrix",c);this._prog_black.setFloat2("jitter",this._jitter);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,b.compiled.gl_points);this.gl.vertexAttribPointer(this._prog_black.uniforms.aVertexPosition,3,this.gl.FLOAT,false,0,0);this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,b.compiled.gl_elements);this.gl.enableVertexAttribArray(0);return 0}else{if(this._renderingDoFDepth){this._shader_mesh_depth.use();this._shader_mesh_depth.setMatrix("uMVPMatrix",this.mvp_matrix);this._shader_mesh_depth.setMatrix("uOMatrix",c);this._shader_mesh_depth.setFloat2("jitter",this._jitter);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,b.compiled.gl_points);this.gl.vertexAttribPointer(this._shader_mesh_depth.uniforms.aVertexPosition,3,this.gl.FLOAT,false,0,0);this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,b.compiled.gl_elements);this.gl.enableVertexAttribArray(0);return 0}else{if(this._renderingDoFDepthValues){this._shader_mesh_depthvalues.use();this._shader_mesh_depthvalues.setMatrix("uMVPMatrix",this.mvp_matrix);this._shader_mesh_depthvalues.setMatrix("uOMatrix",c);this._shader_mesh_depthvalues.setFloat2("jitter",this._jitter);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,b.compiled.gl_points);this.gl.vertexAttribPointer(this._shader_mesh_depthvalues.uniforms.aVertexPosition,3,this.gl.FLOAT,false,0,0);this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,b.compiled.gl_elements);this.gl.enableVertexAttribArray(0);return 0}else{if(this._renderingPickPass){this._shader_prog_pick.use();this._shader_prog_pick.setMatrix("uMVPMatrix",this.mvp_matrix);this._shader_prog_pick.setMatrix("uOMatrix",c);this._shader_prog_pick.setFloat2("jitter",this._jitter);this._shader_prog_pick.setVector4("instanceid",d._instancecol);this.gl.bindBuffer(this.gl.ARRAY_BUFFER,b.compiled.gl_points);this.gl.vertexAttribPointer(this._shader_prog_pick.uniforms.aVertexPosition,3,this.gl.FLOAT,false,0,0);this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER,b.compiled.gl_elements);this.gl.enableVertexAttribArray(0);return 0}else{a.use(0);a.shader[0].setVector("uCamPos",this.camPosGlobal);a.shader[0].setMatrix("uMVPMatrix",this.mvp_matrix);a.shader[0].setMatrix("uOMatrix",c);a.shader[0].setFloat2("jitter",this._jitter);a.shader[0].setInt("refractionmode",e);a.shader[0].setFloat2("viewportsize",[this.viewwidth,this.viewheight]);if(a.type=="Glass_Refracted"){a.shader[0].setVector("camx",[this._nav._navMatLastView[0],this._nav._navMatLastView[1],this._nav._navMatLastView[2]]);a.shader[0].setVector("camy",[this._nav._navMatLastView[4],this._nav._navMatLastView[5],this._nav._navMatLastView[6]]);a.shader[0].setVector("camz",[this._nav._navMatLastView[8],this._nav._navMatLastView[9],this._nav._navMatLastView[10]]);this.gl.activeTexture(this.gl.TEXTURE0+a.nTexUnit);this.gl.bindTexture(this.gl.TEXTURE_2D,this.rttRefractTexture);a.shader[0].setInt("refractiontexture",a.nTexUnit)}a.bindObject(b,0);return 1}}}}};infinityrt_scene.prototype.RenderGeom=function(d,b,a,c,f){if(b.compiled.gl_points==null){return}var e=this.renderGeom_MatInit(d,b,a,c,f);if(e!=0){a.shader[0].attribinit(1,a)}if(this._renderingPlanarReflectPass){a.NeutralMaterial_ToneMapSettings(true)}this.gl.drawElements(this.gl.TRIANGLES,b.indices.length,b.type,0);if(this._renderingPlanarReflectPass){a.NeutralMaterial_ToneMapSettings(false)}a.shader[0].attribinit(0,a)};infinityrt_scene.prototype.CanRender=function(a,b){if(b){if(typeof(a.textures[TEXTURE_MAP_ALPHATEX])!="undefined"||a.type=="Glass"||(a.type=="Match"&&a.alphacolor<1)||(a.type=="Modular"&&a._transparent)){return true}}else{if(typeof(a.textures[TEXTURE_MAP_ALPHATEX])=="undefined"&&a.type!="Glass"&&!(a.type=="Match"&&a.alphacolor<1)&&!(a.type=="Modular"&&a._transparent)){return true}}return false};infinityrt_scene.prototype.initTextureFramebuffer=function(){var a=this.gl;this.rttFramebuffer=a.createFramebuffer();a.bindFramebuffer(a.FRAMEBUFFER,this.rttFramebuffer);this.rttTexture=a.createTexture();a.bindTexture(a.TEXTURE_2D,this.rttTexture);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,this.viewwidth,this.viewheight,0,a.RGBA,a.UNSIGNED_BYTE,null);this.rttRenderBuffer=a.createRenderbuffer();a.bindRenderbuffer(a.RENDERBUFFER,this.rttRenderBuffer);a.renderbufferStorage(a.RENDERBUFFER,a.DEPTH_COMPONENT16,this.viewwidth,this.viewheight);a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,this.rttTexture,0);a.framebufferRenderbuffer(a.FRAMEBUFFER,a.DEPTH_ATTACHMENT,a.RENDERBUFFER,this.rttRenderBuffer);this.rttAccumFramebufferA=a.createFramebuffer();a.bindFramebuffer(a.FRAMEBUFFER,this.rttAccumFramebufferA);this.rttAccumTextureA=a.createTexture();a.bindTexture(a.TEXTURE_2D,this.rttAccumTextureA);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,this.viewwidth,this.viewheight,0,a.RGBA,a.UNSIGNED_BYTE,null);a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,this.rttAccumTextureA,0);this.rttAccumFramebufferB=a.createFramebuffer();a.bindFramebuffer(a.FRAMEBUFFER,this.rttAccumFramebufferB);this.rttAccumTextureB=a.createTexture();a.bindTexture(a.TEXTURE_2D,this.rttAccumTextureB);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.LINEAR);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.LINEAR);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE);a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE);a.texImage2D(a.TEXTURE_2D,0,a.RGBA,this.viewwidth,this.viewheight,0,a.RGBA,a.UNSIGNED_BYTE,null);a.framebufferTexture2D(a.FRAMEBUFFER,a.COLOR_ATTACHMENT0,a.TEXTURE_2D,this.rttAccumTextureB,0);this.rttAccumTextureSource=this.rttAccumTextureB;this.rttAccumFramebufferCurrent=this.rttAccumFramebufferA;a.bindTexture(a.TEXTURE_2D,null);a.bindRenderbuffer(a.RENDERBUFFER,null);a.bindFramebuffer(a.FRAMEBUFFER,null)};infinityrt_scene.prototype.unloadTextureFramebuffer=function(){this.gl.deleteTexture(this.rttTexture);this.rttTexture=null;this.gl.deleteFramebuffer(this.rttFramebuffer);this.rttFramebuffer=null;this.gl.deleteRenderbuffer(this.rttRenderBuffer);this.rttRenderBuffer=null;this.gl.deleteTexture(this.rttAccumTextureA);this.rttAccumTextureA=null;this.gl.deleteTexture(this.rttAccumTextureB);this.rttAccumTextureB=null;this.gl.deleteFramebuffer(this.rttAccumFramebufferA);this.rttAccumFramebufferA=null;this.gl.deleteFramebuffer(this.rttAccumFramebufferB);this.rttAccumFramebufferB=null};infinityrt_scene.prototype.loadRefinementShader=function(){var b=infinityrt_compileShader(this.gl,shaderInfinityRT_Refinevs,"x-shader/x-vertex");var a=infinityrt_compileShader(this.gl,shaderInfinityRT_Refinefs,"x-shader/x-fragment");this._programRefine=this.gl.createProgram();this.gl.attachShader(this._programRefine,b);this.gl.attachShader(this._programRefine,a);this.gl.linkProgram(this._programRefine);if(!this.gl.getProgramParameter(this._programRefine,this.gl.LINK_STATUS)){console.log("***Could not initialise refinement shader");if(b&&!this.gl.getShaderParameter(b,this.gl.COMPILE_STATUS)){console.log("Vertex shader compile error:",this.gl.getShaderInfoLog(b))}else{if(a&&!this.gl.getShaderParameter(a,this.gl.COMPILE_STATUS)){console.log("Fragment shader compile error:",this.gl.getShaderInfoLog(a))}else{console.log("***Could not initialise shader "+this.gl.getProgramInfoLog(this._programRefine))}}}else{this.ATTRIB_VERTEX=this.gl.getAttribLocation(this._programRefine,"a_position");this.ATTRIB_TEX0=this.gl.getAttribLocation(this._programRefine,"a_tex0");this._uniformsRefine=[];this._uniformsRefine[0]=this.gl.getUniformLocation(this._programRefine,"logoTex");this._uniformsRefine[1]=this.gl.getUniformLocation(this._programRefine,"solidAlpha");this._uniformsRefine[2]=this.gl.getUniformLocation(this._programRefine,"solidColor");this._uniformsRefine[3]=this.gl.getUniformLocation(this._programRefine,"prevTex");this._uniformsRefine[4]=this.gl.getUniformLocation(this._programRefine,"sharpenscale");this._uniformsRefine[5]=this.gl.getUniformLocation(this._programRefine,"renderstep")}};infinityrt_scene.prototype.renderRefinement=function(c,e,g,d,f){if(typeof(this._programRefine)=="undefined"){this.loadRefinementShader()}if(g==1){this.gl.clear(this.gl.COLOR_BUFFER_BIT)}this.gl.useProgram(this._programRefine);this.gl.uniform1i(this._uniformsRefine[0],0);this.gl.uniform1f(this._uniformsRefine[1],g);this.gl.uniform1i(this._uniformsRefine[2],1);this.gl.uniform1i(this._uniformsRefine[3],1);this.gl.uniform1f(this._uniformsRefine[4],f);this.gl.uniform2f(this._uniformsRefine[5],1/this.viewwidth,1/this.viewheight);if(typeof(this.buffProgressRefine)=="undefined"){var a=[-1,-1,1,-1,-1,1,1,1];this.buffProgressRefine=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffProgressRefine);this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(a),this.gl.STATIC_DRAW);this.buffProgressRefine.itemSize=2;this.buffProgressRefine.numItems=4}this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffProgressRefine);this.gl.vertexAttribPointer(this.ATTRIB_VERTEX,2,this.gl.FLOAT,false,0,0);this.gl.enableVertexAttribArray(this.ATTRIB_VERTEX);if(typeof(this.buffProgressRefineCoords)=="undefined"){var b=[0,0,1,0,0,1,1,1];this.buffProgressRefineCoords=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffProgressRefineCoords);this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(b),this.gl.STATIC_DRAW);this.buffProgressRefineCoords.itemSize=2;this.buffProgressRefineCoords.numItems=4}this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffProgressRefineCoords);this.gl.vertexAttribPointer(this.ATTRIB_TEX0,2,this.gl.FLOAT,false,0,0);this.gl.enableVertexAttribArray(this.ATTRIB_TEX0);this.gl.disable(this.gl.DEPTH_TEST);this.gl.disable(this.gl.BLEND);this.gl.activeTexture(this.gl.TEXTURE0);this.gl.bindTexture(this.gl.TEXTURE_2D,c);this.gl.activeTexture(this.gl.TEXTURE1);this.gl.bindTexture(this.gl.TEXTURE_2D,e);this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,this.buffProgressRefine.numItems);this.gl.enable(this.gl.DEPTH_TEST)};infinityrt_scene.prototype.clearRefine=function(){this._refineCount=-1};infinityrt_scene.prototype.gotoPos=function(d,b,a,h,c,g,e,f){this._nav.NavStartGotoPos(d,b,a,h,c,g,e,f);this.clearRefine()};infinityrt_scene.prototype.gotoNamedPos=function(a,d,b,c){this.gotoPos(a.xang,a.yang,a.xpan,a.ypan,a.dolly,d,b,c)};infinityrt_scene.prototype.gotoPosInTime=function(d,b,a,g,c,h,e,f){this._nav.NavStartGotoPosInTime(d,b,a,g,c,h,e,f);this.clearRefine()};infinityrt_scene.prototype.gotoNamedPosInTime=function(a,d,b,c){this.gotoPosInTime(a.xang,a.yang,a.xpan,a.ypan,a.dolly,d,b,c)};infinityrt_scene.prototype.getViewMatrix=function(){return this.matView};infinityrt_scene.prototype.getInstanceByNameIncEnv=function(c,d){for(var b=0;b<this._lstNonDepthObjects.length;b++){var a=this.getInstanceByName(c,this._lstNonDepthObjects[b]);if(a!=null){return a}}return this.getInstanceByName(c,this)};infinityrt_scene.prototype.getInstanceByName=function(c,d){if(d.name==c){return d}if(typeof(d.children)!="undefined"){for(var b=0;b<d.children.length;b++){var a=this.getInstanceByName(c,d.children[b]);if(a!=null){return a}}}return null};infinityrt_scene.prototype.replaceMaterial=function(d,c,a){var f;var g=0;var e=d.mesh;if(e!=null){if(e.currentMaterial==c.material_id){e.currentMaterial=a.material_id;g++}}for(var b=0;b<d.children.length;b++){g+=this.replaceMaterial(d.children[b],c,a)}return g};infinityrt_scene.prototype.onClick=function(a,b){return false};infinityrt_scene.prototype.createImage=function(c,a){var b=new infinityrt_texture(c,"File",this.urlRoot+a,null,this);b.startFileDownloads();return b};infinityrt_scene.prototype.getObjectLocation=function(b,c){var a=this.getInstanceByNameIncEnv(b,this);if(a==null){return null}if((!!c)&&a.mesh._localbbmax){return[parseFloat(a.matrix[12])+0.5*(a.mesh._localbbmax[0]+a.mesh._localbbmin[0]),parseFloat(a.matrix[13])+0.5*(a.mesh._localbbmax[1]+a.mesh._localbbmin[1]),parseFloat(a.matrix[14])+0.5*(a.mesh._localbbmax[2]+a.mesh._localbbmin[2])]}return[a.matrix[12],a.matrix[13],a.matrix[14]]};infinityrt_scene.prototype.getObjectNormal=function(b){var a=this.getInstanceByNameIncEnv(b,this);if(a==null||a.mesh==null){return null}var c=[a.mesh.point_normals[0],a.mesh.point_normals[1],a.mesh.point_normals[2],0];return PointTransform(c,a.matrix)};infinityrt_scene.prototype.projectPoint=function(a){if(typeof(this.mvp_matrix)=="undefined"){return null}var c=[a[0],a[1],a[2],1];var b=PointTransform(c,this.mvp_matrix);b[0]/=b[3];b[1]/=b[3];b[2]/=b[3];b[3]=1;return b};infinityrt_scene.prototype.pixelToScreen=function(b,a){return null};infinityrt_scene.prototype.getAnim=function(b){var a=this.getInstanceByName(b,this);if(a==null){return null}return a.anim};infinityrt_scene.prototype.getAllAnimChildren=function(b,a){if(b.anim){a.list.push(b.anim)}for(var c=0;c<b.children.length;c++){this.getAllAnimChildren(b.children[c],a)}};infinityrt_scene.prototype.animIsPlaying=function(a){var b=this.getAnim(a);if(b==null){return false}return b.isPlaying()};infinityrt_scene.prototype.animPosition=function(a){var b=this.getAnim(a);if(b==null){return 0}return b.position()};infinityrt_scene.prototype.animPlay=function(b,c,h,f,e,g){var d=this.getAnim(b);if(d==null){return false}var a=d.play(c,h,f,e,g);this._animRequiresClear=true;return a};infinityrt_scene.prototype.animPlayAllChildren=function(h,c,e,b,a,f){var g={list:[]};var j=this.getInstanceByName(h,this);if(j==null){return false}this.getAllAnimChildren(j,g);if(g.list.length==0){return false}var k;for(var d=0;d<g.list.length;d++){k=g.list[d].play(c,e,(d==0)?b:null,a,f)}this._animRequiresClear=true;return k};infinityrt_scene.prototype.animPlayInTime=function(b,c,h,f,e,g){var d=this.getAnim(b);if(d==null){return false}var a=d.playInTime(c,h,f,e,g);this._animRequiresClear=true;return a};infinityrt_scene.prototype.animPlayAllChildrenInTime=function(g,c,j,b,a,e){var f={list:[]};var h=this.getInstanceByName(g,this);if(h==null){return false}this.getAllAnimChildren(h,f);if(f.list.length==0){return false}var k;for(var d=0;d<f.list.length;d++){k=f.list[d].playInTime(c,j,(d==0)?b:undefined,a,e)}this._animRequiresClear=true;return k};infinityrt_scene.prototype.materialSet=function(d,c,b){var a=this._Material_ref[d];if(a==null){return false}a[c]=b;a.UpdateUniforms(0);return true};infinityrt_scene.prototype.instanceSet=function(b,e,d){var a=this.getInstanceByNameIncEnv(b,this);if(a==null){return false}a[e]=d;if(e=="visible"){this.recurseShowMesh(a,d);this.recurseSetVisible(a,d)}else{if(e=="visibleGlow"){for(var c=0;c<a.children.length;c++){a.children[c][e]=d}}}return true};infinityrt_scene.prototype.instanceGet=function(b,c){var a=this.getInstanceByName(b,this);if(a==null){return null}return a[c]};infinityrt_scene.prototype.setParam=function(b,a){if(b=="nav.enable"){this._nav._navEnabled=a;return true}else{if(b=="nav.mode"){this._nav._navMode=a;return true}else{if(b=="nav.decay"){this._nav._navDecay=a;return true}else{if(b=="nav.speed"){this._nav._navSpeed=a;return true}else{if(b=="nav.mindist"){this._nav._navMinDolly=a;return true}else{if(b=="nav.maxdist"){this._nav._navMaxDolly=a;return true}else{if(b=="nav.znearmin"){this._zNearMin=a;return true}}}}}}}return false};infinityrt_scene.prototype.getParam=function(b,a){if(b=="screen.width"){return this.viewwidth}else{if(b=="screen.height"){return this.viewheight}}if(b=="platform"){return"webgl"}};infinityrt_scene.prototype.materialReplace=function(h,f){var b=this._Material_ref[h];if(b==null){return 0}var a=this._Material_ref[f];if(a==null){return 0}var e=this._Materials.indexOf(b);if(e==-1){return 0}var d=this._Materials.indexOf(a);if(d==-1){return 0}if(b._requiresTangents!=a._requiresTangents){for(var c in this.mapMeshFiles){var g=this.mapMeshFiles[c];if(g.compiled!=null){this.CheckCompiledMeshForSurfTans(g,b)}}}if(!this.isChrome){b.compile();a.compile()}this._Materials[e]=a;this._Materials[d]=b;return 1};infinityrt_scene.prototype.CheckCompiledMeshForSurfTans=function(d,a){for(var c in d.compiled.elements){var b=this._Materials[c];if(b==a&&typeof(d.tanus)=="undefined"){d.unload(this);d.CalcSurfTangents();d.loadToCard(this)}}};infinityrt_scene.prototype.getOutstandingJobs=function(){return this._outstandingjobs+this.prepareTexId};infinityrt_scene.prototype.getTotalJobs=function(){return this._totaljobs};infinityrt_scene.prototype.isAllLoadingComplete=function(a){var b=this._outstandingjobs+this.prepareTexId;if(a!=null&&this._lstDeferredGrps!=null){b+=this._lstDeferredGrps[a]._outstandingdeferred}return(b==0)};infinityrt_scene.prototype.renderRefractionObject=function(a,g){if(a.walkedVisible==0){return}var e,b;var d=a.mesh;if(d!=null&&(!a.defer||d.meshloaded)){var c=this._Materials[d.currentMaterial];if(c._pMaterialPtr!=null){c=c._pMaterialPtr}if(this.CanRender(c,g)){var f=MatrixDet(a.ltog_matrix);if(f<0){this.gl.cullFace(this.gl.FRONT)}else{this.gl.cullFace(this.gl.BACK)}if(a._fPolygonOffset!=0){this.gl.enable(this.gl.POLYGON_OFFSET_FILL);this.gl.polygonOffset(a._fPolygonOffset,a._fPolygonOffset)}if(a.doublesided){this.gl.disable(this.gl.CULL_FACE)}this.RenderGeom(a,d,c,a.ltog_matrix,1);if(a._fPolygonOffset!=0){this.gl.polygonOffset(0,0);this.gl.disable(this.gl.POLYGON_OFFSET_FILL)}if(a.doublesided){this.gl.enable(this.gl.CULL_FACE)}if(f<0){this.gl.cullFace(this.gl.BACK)}}else{if(!g){this.IfTransparentAddToList(a)}}}if(typeof(a.children)!="undefined"){for(b=0;b<a.children.length;b++){this.renderRefractionObject(a.children[b],g)}}};infinityrt_scene.prototype.renderRefractionTexture=function(){if(this.rttRefractFramebuffer==null||this.refractionwidth!=this.viewwidth||this.refractionheight!=this.viewheight){if(this.rttRefractFramebuffer!=null){this.gl.deleteTexture(this.rttRefractTexture);this.gl.deleteFramebuffer(this.rttRefractFramebuffer);this.gl.deleteRenderbuffer(this.rttRefractRenderBuffer)}this.rttRefractFramebuffer=this.gl.createFramebuffer();this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.rttRefractFramebuffer);this.rttRefractTexture=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,this.rttRefractTexture);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE);this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,this.viewwidth,this.viewheight,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null);this.refractionwidth=this.viewwidth;this.refractionheight=this.viewheight;this.rttRefractRenderBuffer=this.gl.createRenderbuffer();this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,this.rttRefractRenderBuffer);this.gl.renderbufferStorage(this.gl.RENDERBUFFER,this.gl.DEPTH_COMPONENT16,this.viewwidth,this.viewheight);this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,this.rttRefractTexture,0);this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER,this.gl.DEPTH_ATTACHMENT,this.gl.RENDERBUFFER,this.rttRefractRenderBuffer);this.gl.bindTexture(this.gl.TEXTURE_2D,null);this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,null);this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null)}this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.rttRefractFramebuffer);this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);if(this._backdroptexturename.length>0&&this._backdropvisiblerefract){this.renderBackdrop()}if(this._lstNonDepthObjects.length>0){this._lstTransObjs=[];var b=this.p_matrix;this.p_matrix=this.getProjectionMatrix(this.sceneRadiusNonDepth);this.mvp_matrix=MatrixMultiply(this.mv_matrix,this.p_matrix);for(var a=0;a<this._lstNonDepthObjects.length;a++){this.renderRefractionObject(this._lstNonDepthObjects[a],false)}this.p_matrix=b;this.mvp_matrix=MatrixMultiply(this.mv_matrix,this.p_matrix);this.gl.clear(this.gl.DEPTH_BUFFER_BIT)}this._lstTransObjs=[];for(var a=0;a<this.lstRefractionNodes.length;a++){this.renderRefractionObject(this.lstRefractionNodes[a],false)}if(this._lstTransObjs.length){if(this.hasBrightReflections){this.gl.blendFuncSeparate(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA,this.gl.ONE,this.gl.ONE)}else{this.gl.blendFuncSeparate(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA,this.gl.ONE,this.gl.ONE)}this.gl.enable(this.gl.BLEND);for(var a=0;a<this._lstTransObjs.length;a++){this.renderRefractionObject(this._lstTransObjs[a].obj,true)}this.gl.disable(this.gl.BLEND)}this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.currentFrameBuffer)};infinityrt_scene.prototype.CreateFBOTarget=function(b,a,c){var d={_nFBOWidth:a,_nFBOHeight:c};d._nFBO=this.gl.createFramebuffer();this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,d._nFBO);d._nFBOTex=this.gl.createTexture();this.gl.bindTexture(this.gl.TEXTURE_2D,d._nFBOTex);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MAG_FILTER,this.gl.LINEAR);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_MIN_FILTER,this.gl.LINEAR);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_S,this.gl.CLAMP_TO_EDGE);this.gl.texParameteri(this.gl.TEXTURE_2D,this.gl.TEXTURE_WRAP_T,this.gl.CLAMP_TO_EDGE);this.gl.texImage2D(this.gl.TEXTURE_2D,0,this.gl.RGBA,d._nFBOWidth,d._nFBOHeight,0,this.gl.RGBA,this.gl.UNSIGNED_BYTE,null);if(b){d._nFBODepthRBO=this.gl.createRenderbuffer();this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,d._nFBODepthRBO);this.gl.renderbufferStorage(this.gl.RENDERBUFFER,this.gl.DEPTH_COMPONENT16,d._nFBOWidth,d._nFBOHeight)}this.gl.framebufferTexture2D(this.gl.FRAMEBUFFER,this.gl.COLOR_ATTACHMENT0,this.gl.TEXTURE_2D,d._nFBOTex,0);if(b){this.gl.framebufferRenderbuffer(this.gl.FRAMEBUFFER,this.gl.DEPTH_ATTACHMENT,this.gl.RENDERBUFFER,d._nFBODepthRBO)}this.gl.bindTexture(this.gl.TEXTURE_2D,null);this.gl.bindRenderbuffer(this.gl.RENDERBUFFER,null);this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,null);return d};infinityrt_scene.prototype.RenderOrthoQuad=function(d,c){if(d!=null){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,d._nFBO);this.gl.viewport(0,0,d._nFBOWidth,d._nFBOHeight);this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT)}else{this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.currentFrameBuffer);this.gl.viewport(0,0,this.viewwidth,this.viewheight)}if(typeof(this.buffProgressRefine)=="undefined"){var a=[-1,-1,1,-1,-1,1,1,1];this.buffProgressRefine=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffProgressRefine);this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(a),this.gl.STATIC_DRAW);this.buffProgressRefine.itemSize=2;this.buffProgressRefine.numItems=4}this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffProgressRefine);this.gl.vertexAttribPointer(c.uniforms.position,2,this.gl.FLOAT,false,0,0);this.gl.enableVertexAttribArray(c.uniforms.position);if(typeof(this.buffProgressRefineCoords)=="undefined"){var b=[0,0,1,0,0,1,1,1];this.buffProgressRefineCoords=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffProgressRefineCoords);this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(b),this.gl.STATIC_DRAW);this.buffProgressRefineCoords.itemSize=2;this.buffProgressRefineCoords.numItems=4}this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffProgressRefineCoords);this.gl.vertexAttribPointer(c.uniforms.uv,2,this.gl.FLOAT,false,0,0);this.gl.enableVertexAttribArray(c.uniforms.uv);this.gl.disable(this.gl.DEPTH_TEST);this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,this.buffProgressRefine.numItems);this.gl.enable(this.gl.DEPTH_TEST)};var g_vertex_LuminosityHighPassShader="attribute vec2 position; attribute vec2 uv; varying vec2 vUv;\n void main() { vUv = uv; gl_Position = vec4(position, 0.0, 1.0); }";var g_frag_LuminosityHighPassShader="#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\nuniform sampler2D tDiffuse;\nuniform vec3 defaultColor;uniform float defaultOpacity;uniform float luminosityThreshold;uniform float smoothWidth;varying vec2 vUv;void main() {vec4 texel = texture2D( tDiffuse, vUv );vec3 luma = vec3( 0.57735, 0.57735, 0.57735 );float v = dot( texel.xyz, luma );vec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );float alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );gl_FragColor = mix( outputColor, texel, alpha );}";var g_frag_SeperableBlurMaterial="#ifdef GL_FRAGMENT_PRECISION_HIGH\n           precision highp float;\n         #else\n           precision mediump float;\n         #endif\n         varying vec2 vUv;\n		uniform sampler2D colorTexture;\n		uniform vec2 texSize;		uniform vec2 direction;		float gaussianPdf(in float x, in float sigma) {			return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;		}		void main() {\n			vec2 invSize = 1.0 / texSize;			float fSigma = float(SIGMA);			float weightSum = gaussianPdf(0.0, fSigma);			vec4 diffuseSum = texture2D( colorTexture, vUv) * weightSum;			for( int i = 1; i < KERNEL_RADIUS; i ++ ) {				float x = float(i);				float w = gaussianPdf(x, fSigma);				vec2 uvOffset = direction * invSize * x;				vec4 sample1 = texture2D( colorTexture, vUv + uvOffset);				vec4 sample2 = texture2D( colorTexture, vUv - uvOffset);				diffuseSum += (sample1 + sample2) * w;				weightSum += 2.0 * w;			}			gl_FragColor = vec4(diffuseSum.rgb/weightSum, 1.0);\n		}";var g_frag_CompositeMaterial="#ifdef GL_FRAGMENT_PRECISION_HIGH\n                   precision highp float;\n                 #else\n                   precision mediump float;\n                 #endif\n                 varying vec2 vUv;				uniform sampler2D blurTexture1;				uniform sampler2D blurTexture2;				uniform sampler2D blurTexture3;				uniform sampler2D blurTexture4;				uniform sampler2D blurTexture5;                uniform sampler2D origTexture;                 uniform float bloomStrength;				uniform float bloomRadius;				uniform float bloomFactors[NUM_MIPS];				/*uniform vec3 bloomTintColors[NUM_MIPS];*/                uniform int applytobkgrd; 								float lerpBloomFactor(const in float factor) { 					float mirrorFactor = 1.2 - factor;					return mix(factor, mirrorFactor, bloomRadius);				}								void main() {                	if (applytobkgrd == 0 && texture2D(origTexture, vUv).a == 0.0)                         discard; 					gl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * texture2D(blurTexture1, vUv) + 					 							 lerpBloomFactor(bloomFactors[1]) * texture2D(blurTexture2, vUv) + 												 lerpBloomFactor(bloomFactors[2]) * texture2D(blurTexture3, vUv) + 												 lerpBloomFactor(bloomFactors[3]) * texture2D(blurTexture4, vUv) + 												 lerpBloomFactor(bloomFactors[4]) * texture2D(blurTexture5, vUv) );				}";var g_vert_BlackShader="\n     attribute vec3 aVertexPosition;    uniform mat4 uMVPMatrix;    uniform mat4 uOMatrix;    uniform vec2 jitter;    void main(void)     {        vec4 vPosition = uOMatrix * vec4(aVertexPosition, 1.0);        gl_Position = uMVPMatrix * vPosition;	    gl_Position.xy += jitter * gl_Position.w;    }";var g_frag_BlackShader="#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\nvoid main() {gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );}";function ReplaceAll(c,b,a){return c.replace(new RegExp(b,"g"),a)}infinityrt_scene.prototype.renderGlowTexture=function(){var g=5;if(this._fboGlow==null||this._fboGlow._nFBOWidth!=this.viewwidth||this._fboGlow._nFBOHeight!=this.viewheight){this._fboGlow=this.CreateFBOTarget(true,this.viewwidth,this.viewheight);this._fboTargetBright=this.CreateFBOTarget(false,this.viewwidth,this.viewheight);this.renderTargetsHorizontal=[];this.renderTargetsVertical=[];var b=Math.round(this.viewwidth/2),a=Math.round(this.viewheight/2);for(var c=0;c<g;c++){this.renderTargetsHorizontal.push(this.CreateFBOTarget(true,b,a));this.renderTargetsVertical.push(this.CreateFBOTarget(true,b,a));b=Math.round(b/2);a=Math.round(a/2)}this._prog_black=new infinityrt_shader(g_vert_BlackShader,g_frag_BlackShader,this.gl);this._prog_black.addVertexArray("aVertexPosition");this._prog_black.addMatrix("uMVPMatrix");this._prog_black.addMatrix("uOMatrix");this._prog_black.addFloat2("jitter");this._prog_black.init();this._prog_highpass=new infinityrt_shader(g_vertex_LuminosityHighPassShader,g_frag_LuminosityHighPassShader,this.gl);this._prog_highpass.addFloat("defaultOpacity");this._prog_highpass.addFloat("luminosityThreshold");this._prog_highpass.addFloat("smoothWidth");this._prog_highpass.addVector("defaultColor");this._prog_highpass.addVertexArray("position");this._prog_highpass.addUVArray("uv");this._prog_highpass.init();this._prog_highpass.setFloat("luminosityThreshold",this._glow_threshold);this._prog_highpass.setFloat("smoothWidth",0.01);this._prog_highpass.setFloat("defaultOpacity",0);this._prog_highpass.setVector("defaultColor",[0,0,0]);this.InitSeparableBlurShaders(g);var e=g_frag_CompositeMaterial;e=ReplaceAll(e,"NUM_MIPS",g);this._prog_glow_composite=new infinityrt_shader(g_vertex_LuminosityHighPassShader,e,this.gl);this._prog_glow_composite.addFloat("bloomStrength");this._prog_glow_composite.addFloat("bloomRadius");this._prog_glow_composite.addInt("applytobkgrd");for(var c=0;c<g;c++){this._prog_glow_composite.addFloat("bloomFactors["+c+"]")}this._prog_glow_composite.addVertexArray("position");this._prog_glow_composite.addUVArray("uv");this._prog_glow_composite.addInt("blurTexture1");this._prog_glow_composite.addInt("blurTexture2");this._prog_glow_composite.addInt("blurTexture3");this._prog_glow_composite.addInt("blurTexture4");this._prog_glow_composite.addInt("blurTexture5");this._prog_glow_composite.addInt("origTexture");this._prog_glow_composite.init();var d=[1,0.8,0.6,0.4,0.2];for(var c=0;c<g;c++){this._prog_glow_composite.setFloat("bloomFactors["+c+"]",d[c])}}this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this._fboGlow._nFBO);if(!this._glow_incbackground){this.gl.clearColor(0,0,0,0)}else{this.gl.clearColor(this._backgroundColor[0],this._backgroundColor[1],this._backgroundColor[2],0)}this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);this._renderingGlowPass=true;this._lstTransObjs=[];this.renderOpaqueObject(this);this.RenderFoundTransparentNodes();this._renderingGlowPass=false;this.gl.clearColor(0,0,0,0);this._prog_highpass.use();this.gl.activeTexture(this.gl.TEXTURE0);this.gl.bindTexture(this.gl.TEXTURE_2D,this._fboGlow._nFBOTex);this._prog_highpass.setInt("tDiffuse",0);this.RenderOrthoQuad(this._fboTargetBright,this._prog_highpass);var f=this._fboTargetBright;for(var c=0;c<g;c++){this._lstSeparableBlurShaders[c].use();this.gl.activeTexture(this.gl.TEXTURE0);this.gl.bindTexture(this.gl.TEXTURE_2D,f._nFBOTex);this._lstSeparableBlurShaders[c].setInt("colorTexture",0);this._lstSeparableBlurShaders[c].setFloat2("direction",[1,0]);this.RenderOrthoQuad(this.renderTargetsHorizontal[c],this._lstSeparableBlurShaders[c]);this.gl.bindTexture(this.gl.TEXTURE_2D,this.renderTargetsHorizontal[c]._nFBOTex);this._lstSeparableBlurShaders[c].setFloat2("direction",[0,1]);this.RenderOrthoQuad(this.renderTargetsVertical[c],this._lstSeparableBlurShaders[c]);f=this.renderTargetsVertical[c]}this._prog_glow_composite.use();this.gl.activeTexture(this.gl.TEXTURE0);this.gl.bindTexture(this.gl.TEXTURE_2D,this.renderTargetsVertical[0]._nFBOTex);this._prog_glow_composite.setInt("blurTexture1",0);this.gl.activeTexture(this.gl.TEXTURE1);this.gl.bindTexture(this.gl.TEXTURE_2D,this.renderTargetsVertical[1]._nFBOTex);this._prog_glow_composite.setInt("blurTexture2",1);this.gl.activeTexture(this.gl.TEXTURE2);this.gl.bindTexture(this.gl.TEXTURE_2D,this.renderTargetsVertical[2]._nFBOTex);this._prog_glow_composite.setInt("blurTexture3",2);this.gl.activeTexture(this.gl.TEXTURE3);this.gl.bindTexture(this.gl.TEXTURE_2D,this.renderTargetsVertical[3]._nFBOTex);this._prog_glow_composite.setInt("blurTexture4",3);this.gl.activeTexture(this.gl.TEXTURE4);this.gl.bindTexture(this.gl.TEXTURE_2D,this.renderTargetsVertical[4]._nFBOTex);this._prog_glow_composite.setInt("blurTexture5",4);this.gl.activeTexture(this.gl.TEXTURE5);this.gl.bindTexture(this.gl.TEXTURE_2D,this._fboGlow._nFBOTex);this._prog_glow_composite.setInt("origTexture",5);this._prog_glow_composite.setFloat("bloomStrength",this._glow_strength);this._prog_glow_composite.setFloat("bloomRadius",0.4);this._prog_glow_composite.setInt("applytobkgrd",this._glow_applytobackground);this.gl.enable(this.gl.BLEND);this.gl.blendFunc(this.gl.ONE,this.gl.ONE);this.gl.clear(this.gl.DEPTH_BUFFER_BIT);this.RenderOrthoQuad(null,this._prog_glow_composite);this.gl.disable(this.gl.BLEND);if(this.hasBrightReflections){this.gl.blendFuncSeparate(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA,this.gl.ZERO,this.gl.ONE)}else{this.gl.blendFuncSeparate(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA,this.gl.ZERO,this.gl.ONE)}if(!this._backgroundTransparent){this.gl.clearColor(this._backgroundColor[0],this._backgroundColor[1],this._backgroundColor[2],1)}else{this.gl.clearColor(0,0,0,0)}this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.currentFrameBuffer)};var g_frag_dof_depth="#ifdef GL_FRAGMENT_PRECISION_HIGH\n           precision highp float;\n         #else\n           precision mediump float;\n         #endif\n         uniform sampler2D tColor;         uniform float textureWidth;         uniform float textureHeight;         uniform float znear;         uniform float zfar;         uniform float focalnear;         uniform float focalfar;         uniform float bias;         float linearize(float depth) { 	        return -zfar * znear / (depth * (zfar - znear) - zfar);         }         void main() { 	        vec2 uvTex = vec2(gl_FragCoord.x/textureWidth, gl_FragCoord.y/textureHeight); 	        gl_FragColor.rgb = texture2D(tColor, uvTex).rgb; 	        float dist = linearize(gl_FragCoord.z); 	        dist = (dist - focalnear) / (focalfar - focalnear); 	        if (dist > 0.5) 		        dist = (pow((dist*2.0)-1.0, bias)+1.0)*0.5; 	        else 		        dist = 0.5-(pow(((0.5-dist)*2.0), bias)*0.5); 	        gl_FragColor.a = clamp(dist, 0.0, 1.0); 		}";var g_frag_dof_bokeh="#ifdef GL_FRAGMENT_PRECISION_HIGH\n           precision highp float;\n         #else\n           precision mediump float;\n         #endif\n         varying vec2 vUv;         uniform sampler2D tColorAndDepth;         uniform vec2 aspectcorrect;         uniform float aperture;         uniform float pixelscale;         uniform int applytonear;         void dtexblur(vec2 crd, inout vec4 col) { 	        float distPixel = length(crd); 	        vec4 coloranddepth1 = texture2D(tColorAndDepth, vUv.xy+(crd*aspectcorrect)); 	        float distDepth = ((coloranddepth1.a - 0.5)*aperture);             if (applytonear == 0 && distDepth < 0.001) distDepth = 0.001; 	        float distDepthAbs = abs(distDepth); 	        if (distDepthAbs > distPixel) 	        { 		        float conefac=(distDepthAbs-distPixel)/distDepthAbs; 		        float alpha = conefac/(distDepth*distDepth); 		        col.rgb += coloranddepth1.rgb*alpha; 		        col.a += alpha; 	        }         }         void main() { 	        vec4 col = vec4( 0.0 ); 	        dtexblur(vec2( 0.0, 0.0), col);              	        dtexblur(pixelscale*vec2( -2.0, 0.0), col); 	        dtexblur(pixelscale*vec2( -1.0, 1.0), col); 	        dtexblur(pixelscale*vec2( 0.0, 2.0), col); 	        dtexblur(pixelscale*vec2( 1.0, 1.0), col); 	        dtexblur(pixelscale*vec2( 2.0, 0.0), col); 	        dtexblur(pixelscale*vec2( 1.0, -1.0), col); 	        dtexblur(pixelscale*vec2( 0.0, -2.0), col); 	        dtexblur(pixelscale*vec2( -1.0, -1.0), col);              	        dtexblur(pixelscale*vec2( 1.0, 3.0), col); 	        dtexblur(pixelscale*vec2( 2.0, 2.0), col); 	        dtexblur(pixelscale*vec2( 3.0, 1.0), col); 	        dtexblur(pixelscale*vec2( 3.0, -1.0), col); 	        dtexblur(pixelscale*vec2( 2.0, -2.0), col); 	        dtexblur(pixelscale*vec2( 1.0, -3.0), col); 	        dtexblur(pixelscale*vec2( -1.0, -3.0), col); 	        dtexblur(pixelscale*vec2( -2.0, -2.0), col); 	        dtexblur(pixelscale*vec2( -3.0, -1.0), col); 	        dtexblur(pixelscale*vec2( -3.0, 1.0), col); 	        dtexblur(pixelscale*vec2( -2.0, 2.0), col); 	        dtexblur(pixelscale*vec2( -1.0, -3.0), col);              	        dtexblur(pixelscale*vec2( 0.0, 4.0), col); 	        dtexblur(pixelscale*vec2( 2.0, 4.0), col); 	        dtexblur(pixelscale*vec2( 3.0, 3.0), col); 	        dtexblur(pixelscale*vec2( 4.0, 2.0), col); 	        dtexblur(pixelscale*vec2( 4.0, 0.0), col); 	        dtexblur(pixelscale*vec2( 4.0, -2.0), col); 	        dtexblur(pixelscale*vec2( 3.0, -3.0), col); 	        dtexblur(pixelscale*vec2( 2.0, -4.0), col); 	        dtexblur(pixelscale*vec2( 0.0, -4.0), col); 	        dtexblur(pixelscale*vec2( -2.0, -4.0), col); 	        dtexblur(pixelscale*vec2( -3.0, -3.0), col); 	        dtexblur(pixelscale*vec2( -4.0, -2.0), col); 	        dtexblur(pixelscale*vec2( -4.0, 0.0), col); 	        dtexblur(pixelscale*vec2( -4.0, 2.0), col); 	        dtexblur(pixelscale*vec2( -3.0, 3.0), col); 	        dtexblur(pixelscale*vec2( -2.0, 4.0), col); 	         			gl_FragColor = vec4(col.rgb / col.a, 1.0); 		}";var g_frag_dof_depthvalues="#ifdef GL_FRAGMENT_PRECISION_HIGH\n           precision highp float;\n         #else\n           precision mediump float;\n         #endif\n         varying vec2 vUv;         void main() { 			gl_FragColor = vec4(vec3(gl_FragCoord.z), 1.0); 		}";infinityrt_scene.prototype.GetDepthValueAt=function(h,j,a,d,i){var e=0,c=new Uint8Array(4);this.gl.readPixels(j[0],j[1],1,1,this.gl.RGBA,this.gl.UNSIGNED_BYTE,c);if(h){if(c[0]!=0){e=-i*d/((c[0]/255)*(i-d)-i)}}else{var f=c[3]/255;if(f==1){return 0}else{if(f>0.5){f=(Math.pow(f*2-1,1/a.fDoFBias)+1)*0.5}else{f=-((Math.pow((0.5-f)*2,1/a.fDoFBias)*0.5)-0.5)}}var g=this._fDoFFocusPos-a.fDoFFocusWidth;var b=this._fDoFFocusPos+a.fDoFFocusWidth;e=f*(b-g)+g}return e};infinityrt_scene.prototype.GetDoFFocusDepth=function(o,f,m){var a=0,j,r;if(o){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this._fboDoF._nFBO);this.gl.clearColor(0,0,0,0);this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);if(this._shader_mesh_depthvalues==null){this._shader_mesh_depthvalues=new infinityrt_shader(g_vert_BlackShader,g_frag_dof_depthvalues,this.gl);this._shader_mesh_depthvalues.addVertexArray("aVertexPosition");this._shader_mesh_depthvalues.addMatrix("uMVPMatrix");this._shader_mesh_depthvalues.addMatrix("uOMatrix");this._shader_mesh_depthvalues.addFloat2("jitter");this._shader_mesh_depthvalues.init()}this._shader_mesh_depthvalues.use();this._renderingDoFDepthValues=true;var b=infinityrt_length(this.camPos);j=b-this.sceneRadius;if(j<this._zNearMin){j=this._zNearMin}r=b+this.sceneRadius;this._lstTransObjs=[];this.renderOpaqueObject(this);this.RenderFoundTransparentNodes();this._renderingDoFDepthValues=false}if(this._nDoFFocusArea){var k=8;var l=1+k*2;var n=[];var h,e,d=[this.viewwidth/2,this.viewheight/2];n.push({pt:d,contrib:k});var q=this.viewwidth/16;for(h=0;h<k;h++){e=(h/k)*M_PI*2;n.push({pt:[Math.round(d[0]+q*Math.cos(e)),Math.round(d[1]+q*Math.sin(e))],contrib:1})}var p=this.viewwidth/8;for(h=0;h<k;h++){e=(h/k)*M_PI*2;n.push({pt:[Math.round(d[0]+p*Math.cos(e)),Math.round(d[1]+p*Math.sin(e))],contrib:0.5})}var c=0;for(h=0;h<l;h++){var g=this.GetDepthValueAt(o,n[h].pt,f,j,r);if(g>0){a+=g;c+=n[h].contrib}}if(c==0){c=1}a/=c}else{if(typeof(m)=="undefined"){m=[Math.floor(this.viewwidth/2),Math.floor(this.viewheight/2)]}a=this.GetDepthValueAt(o,m,f,j,r)}if(o){this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.currentFrameBuffer);if(!this._backgroundTransparent){this.gl.clearColor(this._backgroundColor[0],this._backgroundColor[1],this._backgroundColor[2],1)}else{this.gl.clearColor(0,0,0,0)}}return a};infinityrt_scene.prototype.StoreDepthFromOrigin=function(){var a=infinityrt_vertex_scladd(this.camPos,[-this.matView[8],-this.matView[9],-this.matView[10]],this._fDoFFocusPos);this._fDoFFocusSphereDist=infinityrt_length(a)};infinityrt_scene.prototype.UseDepthFromOrigin=function(){var a=infinityrt_length(this.camPos);this._fDoFFocusPos=a-this._fDoFFocusSphereDist};infinityrt_scene.prototype.renderDoF=function(){if(this._fboDoF==null||this._fboDoF._nFBOWidth!=this.viewwidth||this._fboDoF._nFBOHeight!=this.viewheight){this._fboDoF=this.CreateFBOTarget(true,this.viewwidth,this.viewheight);this._fboDoFDepth=this.CreateFBOTarget(true,this.viewwidth,this.viewheight)}var f=this.IsFirstFrameAA();var m=(typeof(this._nav._navDollyRestriction)!="undefined");var e=null;var b=false;var d=infinityrt_length(infinityrt_vertex_sub(this.camPosGlobal,this._posDoFLastCam));var k=0.1*this.sceneRadius;if(this._bAccurateDoF){if(f){if(d>k){b=true;var h=this.GetDoFFocusDepth(true,e);if(h!=0){this._fDoFFocusPos=h;this._posDoFLastCam=this.camPosGlobal;if(!m){this.StoreDepthFromOrigin()}}else{if(!m){this.UseDepthFromOrigin()}}}}}else{if(f){if(d>k){b=true;var h=this.GetDoFFocusDepth(true,e);if(h!=0){this._fDoFFocusPos=h;this._posDoFLastCam=this.camPosGlobal;this.StoreDepthFromOrigin()}else{this.UseDepthFromOrigin()}}}}var c=(this._fDoFFocusPos-this._fDoFNearDist)/(this._fDoFFarDist-this._fDoFNearDist);if(c<0){c=0}else{if(c>1){c=1}}e={fDoFAperture:(1-c)*this._fDoFNearAperture+c*this._fDoFFarAperture,fDoFBias:(1-c)*this._DoFNearBias+c*this._DoFFarBias,fDoFFocusWidth:this._fDoFFocusWidth*this._fDoFFocusPos};if(e.fDoFAperture==0){e.fDoFAperture=0.001}this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this._fboDoF._nFBO);this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);if(this._backdroptexturename.length>0){this.renderBackdrop()}if(this._lstNonDepthObjects.length>0){this._lstTransObjs=[];var l=this.p_matrix;this.p_matrix=this.getProjectionMatrix(this.sceneRadiusNonDepth);this.mvp_matrix=MatrixMultiply(this.mv_matrix,this.p_matrix);for(var g=0;g<this._lstNonDepthObjects.length;g++){this.renderOpaqueObject(this._lstNonDepthObjects[g])}this.RenderFoundTransparentNodes();this.p_matrix=l;this.mvp_matrix=MatrixMultiply(this.mv_matrix,this.p_matrix);this.gl.clear(this.gl.DEPTH_BUFFER_BIT)}if(this.fnPreDraw!=null){this.fnPreDraw()}this._lstTransObjs=[];this.renderOpaqueObject(this);this.RenderFoundTransparentNodes();this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this._fboDoFDepth._nFBO);this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);if(this._shader_mesh_depth==null){this._shader_mesh_depth=new infinityrt_shader(g_vert_BlackShader,g_frag_dof_depth,this.gl);this._shader_mesh_depth.addVertexArray("aVertexPosition");this._shader_mesh_depth.addMatrix("uMVPMatrix");this._shader_mesh_depth.addMatrix("uOMatrix");this._shader_mesh_depth.addFloat2("jitter");this._shader_mesh_depth.addFloat("znear");this._shader_mesh_depth.addFloat("zfar");this._shader_mesh_depth.addFloat("textureWidth");this._shader_mesh_depth.addFloat("textureHeight");this._shader_mesh_depth.addInt("tColor");this._shader_mesh_depth.addFloat("focalnear");this._shader_mesh_depth.addFloat("focalfar");this._shader_mesh_depth.addFloat("bias");this._shader_mesh_depth.init()}var a=infinityrt_length(this.camPos);var j,n;this._shader_mesh_depth.use();this._shader_mesh_depth.setFloat("textureWidth",this._fboDoF._nFBOWidth);this._shader_mesh_depth.setFloat("textureHeight",this._fboDoF._nFBOHeight);this.gl.activeTexture(this.gl.TEXTURE0);this.gl.bindTexture(this.gl.TEXTURE_2D,this._fboDoF._nFBOTex);this._shader_mesh_depth.setInt("tColor",0);this._shader_mesh_depth.setFloat("focalnear",this._fDoFFocusPos-e.fDoFFocusWidth);this._shader_mesh_depth.setFloat("focalfar",this._fDoFFocusPos+e.fDoFFocusWidth);this._shader_mesh_depth.setFloat("bias",e.fDoFBias);this._renderingDoFDepth=true;if(this._backdroptexturename.length>0){this.renderBackdrop();this._shader_mesh_depth.use()}if(this._lstNonDepthObjects.length>0){var l=this.p_matrix;this.p_matrix=this.getProjectionMatrix(this.sceneRadiusNonDepth);this.mvp_matrix=MatrixMultiply(this.mv_matrix,this.p_matrix);j=a-this.sceneRadiusNonDepth;if(j<this._zNearMin){j=this._zNearMin}n=a+this.sceneRadiusNonDepth;this._shader_mesh_depth.setFloat("znear",j);this._shader_mesh_depth.setFloat("zfar",n);this._lstTransObjs=[];for(var g=0;g<this._lstNonDepthObjects.length;g++){this.renderOpaqueObject(this._lstNonDepthObjects[g])}if(this._lstTransObjs.length){if(this._bOrderBasedTransparency){this.gl.depthMask(false)}for(var g=0;g<this._lstTransObjs.length;g++){this.renderTransparentObject(this._lstTransObjs[g])}if(this._bOrderBasedTransparency){this.gl.depthMask(true)}}this.p_matrix=l;this.mvp_matrix=MatrixMultiply(this.mv_matrix,this.p_matrix);this.gl.clear(this.gl.DEPTH_BUFFER_BIT)}j=a-this.sceneRadius;if(j<this._zNearMin){j=this._zNearMin}n=a+this.sceneRadius;this._shader_mesh_depth.setFloat("znear",j);this._shader_mesh_depth.setFloat("zfar",n);this._lstTransObjs=[];this.renderOpaqueObject(this);if(this._lstTransObjs.length){if(this._bOrderBasedTransparency){this.gl.depthMask(false)}for(var g=0;g<this._lstTransObjs.length;g++){this.renderTransparentObject(this._lstTransObjs[g])}if(this._bOrderBasedTransparency){this.gl.depthMask(true)}}this._renderingDoFDepth=false;if(this._bAccurateDoF){if(f){if(!b){var h=this.GetDoFFocusDepth(false,e);if(h!=0){this._fDoFFocusPos=h;this._posDoFLastCam=this.camPosGlobal;if(!m){this.StoreDepthFromOrigin()}}else{if(!m){this.UseDepthFromOrigin()}else{this._posDoFLastCam=[999999,999999,999999];this.clearRefine()}}}}}else{if(f){if(!b){var h=this.GetDoFFocusDepth(false,e);if(h!=0){this._fDoFFocusPos=h;this._posDoFLastCam=this.camPosGlobal;this.StoreDepthFromOrigin()}else{this.UseDepthFromOrigin()}}}}if(this._shader_prog_bokeh==null){this._shader_prog_bokeh=new infinityrt_shader(g_vertex_LuminosityHighPassShader,g_frag_dof_bokeh,this.gl);this._shader_prog_bokeh.addInt("tColorAndDepth");this._shader_prog_bokeh.addFloat("aperture");this._shader_prog_bokeh.addFloat2("aspectcorrect");this._shader_prog_bokeh.addFloat("pixelscale");this._shader_prog_bokeh.addInt("applytonear");this._shader_prog_bokeh.addVertexArray("position");this._shader_prog_bokeh.addUVArray("uv");this._shader_prog_bokeh.init()}this._shader_prog_bokeh.use();this.gl.activeTexture(this.gl.TEXTURE0);this.gl.bindTexture(this.gl.TEXTURE_2D,this._fboDoFDepth._nFBOTex);this._shader_prog_bokeh.setInt("tColorAndDepth",0);this._shader_prog_bokeh.setFloat("aperture",e.fDoFAperture);this._shader_prog_bokeh.setFloat2("aspectcorrect",[1/this._fboDoF._nFBOWidth,1/this._fboDoF._nFBOHeight]);this._shader_prog_bokeh.setFloat("pixelscale",this._nDoFPixelScaling);this._shader_prog_bokeh.setInt("applytonear",this._nDoFApplyToNear);this.RenderOrthoQuad(null,this._shader_prog_bokeh);this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.currentFrameBuffer)};infinityrt_scene.prototype.ReverseOutGotoPosValues=function(f){var e={xang:0,yang:0,xpan:0,ypan:0,dolly:0};var d=[f[8],0,f[10]];d=infinityrt_normalize(d);e.xang=Math.atan2(d[0],d[2]);var b=[f[8],f[9],f[10]];b=infinityrt_normalize(b);e.yang=-(Math.acos(b[1])-M_HALF_PI);var g=[f[0],f[1],f[2]];var a=[f[4],f[5],f[6]];d=[f[8],f[9],f[10]];var c=[f[12],f[13],f[14]];e.dolly=infinityrt_dp(d,c);e.xpan=infinityrt_dp(g,c);e.ypan=infinityrt_dp(a,c);return e};var g_frag_PickShader="#ifdef GL_FRAGMENT_PRECISION_HIGH\n  precision highp float;\n#else\n  precision mediump float;\n#endif\nuniform vec4 instanceid;\nvoid main() {gl_FragColor = instanceid;}";infinityrt_scene.prototype.renderPick=function(){if(this._fboPick==null||this._fboPick._nFBOWidth!=this.viewwidth||this._fboPick._nFBOHeight!=this.viewheight){this._fboPick=this.CreateFBOTarget(true,this.viewwidth,this.viewheight)}if(this._shader_prog_pick==null){this._shader_prog_pick=new infinityrt_shader(g_vert_BlackShader,g_frag_PickShader,this.gl);this._shader_prog_pick.addVertexArray("aVertexPosition");this._shader_prog_pick.addMatrix("uMVPMatrix");this._shader_prog_pick.addMatrix("uOMatrix");this._shader_prog_pick.addFloat2("jitter");this._shader_prog_pick.addVector4("instanceid");this._shader_prog_pick.init()}this._shader_prog_pick.use();this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this._fboPick._nFBO);this.gl.clearColor(0,0,0,0);this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);this._renderingPickPass=true;this._lstTransObjs=[];this.renderOpaqueObject(this);this.RenderFoundTransparentNodes();this._renderingPickPass=false;this.gl.clearColor(this._backgroundColor[0],this._backgroundColor[1],this._backgroundColor[2],1);this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.currentFrameBuffer)};infinityrt_scene.prototype.GetPickAt=function(b){if(this._fboPick==null){return null}this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this._fboPick._nFBO);var a=new Uint8Array(4);this.gl.readPixels(b[0],(this._fboPick._nFBOHeight-1)-b[1],1,1,this.gl.RGBA,this.gl.UNSIGNED_BYTE,a);this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.currentFrameBuffer);if(a[3]==0){return null}var c=(a[2]<<16)|(a[1]<<8)|a[0];if(c>=this._lstInstances.length){return null}return this._lstInstances[c]};infinityrt_scene.prototype.GetPickNameAt=function(b){var a=this.GetPickAt(b);var c="";while(a!=null){if(c!=""){c="."+c}c=a.name+c;a=a.parent}return c};var g_vertBackdrop="\n     attribute vec2 aVertexPosition;    attribute vec2 aVertexTex;    varying vec2 tex1;    uniform mat4 uMVPMatrix;    uniform mat4 uOMatrix;    uniform vec2 jitter;    void main(void)     {        gl_Position = vec4(aVertexPosition, 0.0, 1.0);        tex1 = aVertexTex;     }";var g_fragBackdrop="#ifdef GL_FRAGMENT_PRECISION_HIGH\n         precision highp float;\n     #else\n         precision mediump float;\n     #endif\n     varying vec2 tex1;    uniform sampler2D texBackdrop;     void main()    {	    gl_FragColor = vec4(texture2D(texBackdrop, tex1).rgb, 1.0);     }";infinityrt_scene.prototype.renderBackdrop=function(){if(this._shader_backdrop==null){this._shader_backdrop=new infinityrt_shader(g_vertBackdrop,g_fragBackdrop,this.gl);this._shader_backdrop.addVertexArray("aVertexPosition");this._shader_backdrop.addVertexArray("aVertexTex");this._shader_backdrop.addInt("texBackdrop");this._shader_backdrop.init()}this._shader_backdrop.use();this._shader_backdrop.setInt("texBackdrop",2);var c=this._Texture_ref[this._backdroptexturename];c.use(this.gl.TEXTURE2);if(typeof(this.buffProgressRefine)=="undefined"){var a=[-1,-1,1,-1,-1,1,1,1];this.buffProgressRefine=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffProgressRefine);this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(a),this.gl.STATIC_DRAW);this.buffProgressRefine.itemSize=2;this.buffProgressRefine.numItems=4}this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffProgressRefine);this.gl.vertexAttribPointer(this._shader_backdrop.uniforms.aVertexPosition,2,this.gl.FLOAT,false,0,0);this.gl.enableVertexAttribArray(this._shader_backdrop.uniforms.aVertexPosition);if(typeof(this.buffProgressRefineCoords)=="undefined"){var b=[0,0,1,0,0,1,1,1];this.buffProgressRefineCoords=this.gl.createBuffer();this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffProgressRefineCoords);this.gl.bufferData(this.gl.ARRAY_BUFFER,new Float32Array(b),this.gl.STATIC_DRAW);this.buffProgressRefineCoords.itemSize=2;this.buffProgressRefineCoords.numItems=4}this.gl.bindBuffer(this.gl.ARRAY_BUFFER,this.buffProgressRefineCoords);this.gl.vertexAttribPointer(this._shader_backdrop.uniforms.aVertexTex,2,this.gl.FLOAT,false,0,0);this.gl.enableVertexAttribArray(this._shader_backdrop.uniforms.aVertexTex);this.gl.drawArrays(this.gl.TRIANGLE_STRIP,0,this.buffProgressRefine.numItems);this.gl.clear(this.gl.DEPTH_BUFFER_BIT)};var g_frag_CompositePlanarReflectMaterial="#ifdef GL_FRAGMENT_PRECISION_HIGH\n                   precision highp float;\n                 #else\n                   precision mediump float;\n                 #endif\n                 varying vec2 vUv;				uniform sampler2D blurTexture;				void main() {					gl_FragColor = texture2D(blurTexture, vUv);				}";infinityrt_scene.prototype.InitSeparableBlurShaders=function(e){if(this._lstSeparableBlurShaders.length==e){return}this._lstSeparableBlurShaders=[];var c=[3,5,7,9,11];resx=Math.round(this.viewwidth/2);resy=Math.round(this.viewheight/2);for(var d=0;d<e;d++){var b=g_frag_SeperableBlurMaterial;b=ReplaceAll(b,"KERNEL_RADIUS",c[d]);b=ReplaceAll(b,"SIGMA",c[d]);var a=new infinityrt_shader(g_vertex_LuminosityHighPassShader,b,this.gl);this._lstSeparableBlurShaders.push(a);a.addInt("colorTexture");a.addFloat2("texSize");a.addFloat2("direction");a.addVertexArray("position");a.addUVArray("uv");a.init();a.use();a.setFloat2("texSize",[resx,resy]);resx=Math.round(resx/2);resy=Math.round(resy/2)}};infinityrt_scene.prototype.renderPlanarReflectionTexture=function(){var f=5;if(this._fboPlanarReflect==null||this._fboPlanarReflect._nFBOWidth!=this.viewwidth||this._fboPlanarReflect._nFBOHeight!=this.viewheight){this._fboPlanarReflect=this.CreateFBOTarget(true,this.viewwidth,this.viewheight);this.renderTargetsHorizontal=[];this.renderTargetsVertical=[];var b=Math.round(this.viewwidth/2),a=Math.round(this.viewheight/2);for(var c=0;c<f;c++){this.renderTargetsHorizontal.push(this.CreateFBOTarget(true,b,a));this.renderTargetsVertical.push(this.CreateFBOTarget(true,b,a));b=Math.round(b/2);a=Math.round(a/2)}var d=g_frag_CompositePlanarReflectMaterial;d=ReplaceAll(d,"NUM_MIPS",f);this._prog_composite_planarreflect=new infinityrt_shader(g_vertex_LuminosityHighPassShader,d,this.gl);this._prog_composite_planarreflect.addVertexArray("position");this._prog_composite_planarreflect.addUVArray("uv");this._prog_composite_planarreflect.addInt("blurTexture");this._prog_composite_planarreflect.init()}this.InitSeparableBlurShaders(f);this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this._fboPlanarReflect._nFBO);this.gl.clearColor(0,0,0,0);this.gl.clear(this.gl.COLOR_BUFFER_BIT|this.gl.DEPTH_BUFFER_BIT);this._renderingPlanarReflectPass=true;this._lstTransObjs=[];for(var c=0;c<this._lstPlanarReflectNodes.length;c++){this.renderOpaqueObject(this._lstPlanarReflectNodes[c])}this.RenderFoundTransparentNodes();this._renderingPlanarReflectPass=false;var e=this._fboPlanarReflect;for(var c=0;c<f;c++){this._lstSeparableBlurShaders[c].use();this.gl.activeTexture(this.gl.TEXTURE0);this.gl.bindTexture(this.gl.TEXTURE_2D,e._nFBOTex);this._lstSeparableBlurShaders[c].setInt("colorTexture",0);this._lstSeparableBlurShaders[c].setFloat2("direction",[this._fPlanarReflectDirX,0]);this.RenderOrthoQuad(this.renderTargetsHorizontal[c],this._lstSeparableBlurShaders[c]);this.gl.bindTexture(this.gl.TEXTURE_2D,this.renderTargetsHorizontal[c]._nFBOTex);this._lstSeparableBlurShaders[c].setFloat2("direction",[0,this._fPlanarReflectDirY]);this.RenderOrthoQuad(this.renderTargetsVertical[c],this._lstSeparableBlurShaders[c]);e=this.renderTargetsVertical[c]}this._prog_composite_planarreflect.use();this.gl.activeTexture(this.gl.TEXTURE0);this.gl.bindTexture(this.gl.TEXTURE_2D,this.renderTargetsVertical[this._nPlanarReflectMap]._nFBOTex);this._prog_composite_planarreflect.setInt("blurTexture",0);this.RenderOrthoQuad(this._fboPlanarReflect,this._prog_composite_planarreflect);if(this.hasBrightReflections){this.gl.blendFuncSeparate(this.gl.ONE,this.gl.ONE_MINUS_SRC_ALPHA,this.gl.ZERO,this.gl.ONE)}else{this.gl.blendFuncSeparate(this.gl.SRC_ALPHA,this.gl.ONE_MINUS_SRC_ALPHA,this.gl.ZERO,this.gl.ONE)}if(!this._backgroundTransparent){this.gl.clearColor(this._backgroundColor[0],this._backgroundColor[1],this._backgroundColor[2],1)}else{this.gl.clearColor(0,0,0,0)}this.gl.bindFramebuffer(this.gl.FRAMEBUFFER,this.currentFrameBuffer)};infinityrt_scene.prototype.RestrictViewSpace=function(a){if(a[0]<this._vecCameraLimitMin[0]){a[0]=this._vecCameraLimitMin[0]}else{if(a[0]>this._vecCameraLimitMax[0]){a[0]=this._vecCameraLimitMax[0]}}if(a[1]<this._vecCameraLimitMin[1]){a[1]=this._vecCameraLimitMin[1]}else{if(a[1]>this._vecCameraLimitMax[1]){a[1]=this._vecCameraLimitMax[1]}}if(a[2]<this._vecCameraLimitMin[2]){a[2]=this._vecCameraLimitMin[2]}else{if(a[2]>this._vecCameraLimitMax[2]){a[2]=this._vecCameraLimitMax[2]}}return a};var QueryString=function(){var d={};var c=window.location.search.substring(1);var e=c.split("&");for(var b=0;b<e.length;b++){var f=e[b].split("=");if(typeof d[f[0]]==="undefined"){d[f[0]]=decodeURIComponent(f[1])}else{if(typeof d[f[0]]==="string"){var a=[d[f[0]],decodeURIComponent(f[1])];d[f[0]]=a}else{d[f[0]].push(decodeURIComponent(f[1]))}}}return d}();infinityrt_scene.prototype.ConfigInit=function(){this.configdbready=false;this.configdb={}};infinityrt_scene.prototype.ConfigReadXML=function(b){this.ConfigInit();var a=new XMLHttpRequest();a._scene=this;a.open("GET",b,true);if(!this._usingwkwebview){a.setRequestHeader("Content-Type","text/xml")}a.onload=function(j){var l=a.responseXML;if(a._scene._usingwkwebview||a.status!=200){console.log("***Error Config: '"+b+"' "+a.status+" readystate "+a.readyState);return}var m=l.getElementsByTagName("property");for(var g=0;g<m.length;g++){var f=m[g];if(f.getElementsByTagName("rtscript").length==0){continue}var k=f.getElementsByTagName("rtscript")[0].firstChild.nodeValue;var c=f.getElementsByTagName("label")[0].firstChild.nodeValue;var h=f.getElementsByTagName("id")[0].firstChild.nodeValue;var d=f.getElementsByTagName("default")[0].firstChild.nodeValue;a._scene.configdb[h]={label:c,id:h,rtscript:k,value:d}}a._scene.configdbready=true};a.send("")};infinityrt_scene.prototype.ConfigApply=function(strConfig){if(!this.configdbready){return false}if(typeof(strConfig)=="undefined"){return false}var lstConfigElems=strConfig.split("|");for(var i=0;i<lstConfigElems.length;i++){var configelem=lstConfigElems[i];var nvsplit=configelem.indexOf(",");if(nvsplit==-1){continue}var configName=configelem.substring(0,nvsplit);var configValue=configelem.substring(nvsplit+1,configelem.length);var configtemplate=this.configdb[configName];if(typeof(configtemplate)!="undefined"){configtemplate.value=configValue}}for(var prop_id in this.configdb){try{var configtemplate=this.configdb[prop_id];var configcmd=ReplaceAll(configtemplate.rtscript,"INSERT_INFINITY_VALUE",configtemplate.value);eval(configcmd)}catch(e){console.log("***Error Config: apply '"+configcmd+"' exception "+e);return false}}return true};infinityrt_scene.prototype.setMaterial=function(b,d){var c=b.mesh;if(c!=null){c.currentMaterial=d.material_id}for(var a=0;a<b.children.length;a++){this.setMaterial(b.children[a],d)}};infinityrt_scene.prototype.ConfigMaterialConnectionName=function(a,c){var b=this.getInstanceByName(a,this);if(b==null){return false}var d=this._Material_ref[c];if(typeof(d)=="undefined"){return false}this.setMaterial(b,d);return true};infinityrt_scene.prototype.ConfigGeometryConnectionName=function(b,d){var c=this.getInstanceByName(b,this);if(c==null){return false}for(var a=0;a<c.children.length;a++){var e=c.children[a];e.visible=e.name==d;this.recurseShowMesh(e,e.visible)}return true};function padZeros(a,b){var c=a+"";while(c.length<b){c="0"+c}return c}infinityrt_scene.prototype.ConfigMaterialMixConnectionName=function(e,b){var f;var g=this._Material_ref[e];if(typeof(g)=="undefined"){for(var d=1;d<100;d++){var a=e+"_"+padZeros(d,2);g=this._Material_ref[a];var c=b+"_"+padZeros(d,2);f=this._Material_ref[c];if(typeof(g)=="undefined"||typeof(f)=="undefined"){if(d==1){return false}else{return true}}g._strMaterialPtr=c;g._pMaterialPtr=f}return true}f=this._Material_ref[b];if(typeof(f)=="undefined"){return false}g._strMaterialPtr=b;g._pMaterialPtr=f;return true};infinityrt_scene.prototype.ConfigPlacementRotationY=function(a,c){var b=this.getInstanceByName(a,this);if(b==null){return false}var f=[b.matrix[12],b.matrix[13],b.matrix[14]];var e=infinityrt_identity.slice(0);var d=MatrixRotationAxis(c/180*M_PI,0,1,0);b.matrix=MatrixMultiply(d,e);b.matrix[12]=f[0];b.matrix[13]=f[1];b.matrix[14]=f[2];return true};infinityrt_scene.prototype.ConfigAnimationTime=function(a,b){return this.animPlay(a,b,0)};infinityrt_scene.prototype.ConfigSetBackgroundImage=function(b){if(b.endsWith("/")||b.length==0){this._backdroptexturename=""}else{var a=new infinityrt_texture("configbackdroptexture","File",this.urlRoot+b,null,this);a.startFileDownloads();this._backdroptexturename=a.name}return true};